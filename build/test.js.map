{"version":3,"sources":["webpack:///webpack/bootstrap ac79321c42a8e7db32ec","webpack:///external \"lodash\"","webpack:///./src/utils/index.js","webpack:///./src/lib/fsa/fsa.js","webpack:///external \"fs\"","webpack:///./src/lib/langs_stuff/common.js","webpack:///external \"path\"","webpack:///./src/lib/graminfo/graminfo.js","webpack:///./src/lib/constants.js","webpack:///./src/lib/fsa/access/fsa_sparse_file.js","webpack:///./src/lib/fsa/access/fsa_sparse_mem.js","webpack:///./src/lib/fsa/access/fsa_tree_file.js","webpack:///./src/lib/fsa/access/fsa_tree_mem.js","webpack:///./src/lib/graminfo/access/graminfo_file.js","webpack:///./src/lib/graminfo/access/graminfo_mem.js","webpack:///./src/lib/langs_stuff/ru_ru.js","webpack:///./src/lib/morphiers.js","webpack:///external \"encoding\"","webpack:///./src/index.js","webpack:///./src/lib/common.js","webpack:///./src/lib/fsa/fsa_state.js","webpack:///./src/lib/gramtab.js","webpack:///./src/lib/gramtab_consts.js","webpack:///./src/lib/source.js","webpack:///./src/lib/storage.js","webpack:///./src/lib/unicode.js","webpack:///./src/lib/fsa/access ^\\.\\/fsa_.*$","webpack:///./src/lib/graminfo/access ^\\.\\/graminfo_.*$","webpack:///./src/lib/langs_stuff ^\\.\\/.*$","webpack:///external \"core-js/modules/es6.array.from\"","webpack:///external \"core-js/modules/es6.function.name\"","webpack:///external \"core-js/modules/es6.map\"","webpack:///external \"core-js/modules/es6.promise\"","webpack:///external \"core-js/modules/es6.set\"","webpack:///external \"core-js/modules/es6.symbol\"","webpack:///external \"core-js/modules/es6.typed.array-buffer\"","webpack:///external \"core-js/modules/es6.typed.float32-array\"","webpack:///external \"core-js/modules/es6.typed.float64-array\"","webpack:///external \"core-js/modules/es6.typed.int16-array\"","webpack:///external \"core-js/modules/es6.typed.int32-array\"","webpack:///external \"core-js/modules/es6.typed.int8-array\"","webpack:///external \"core-js/modules/es6.typed.uint16-array\"","webpack:///external \"core-js/modules/es6.typed.uint32-array\"","webpack:///external \"core-js/modules/es6.typed.uint8-array\"","webpack:///external \"core-js/modules/es6.typed.uint8-clamped-array\"","webpack:///external \"core-js/modules/es6.weak-map\"","webpack:///external \"core-js/modules/es6.weak-set\"","webpack:///external \"core-js/modules/es7.object.entries\"","webpack:///external \"core-js/modules/es7.object.get-own-property-descriptors\"","webpack:///external \"core-js/modules/es7.object.values\"","webpack:///external \"core-js/modules/es7.string.pad-end\"","webpack:///external \"core-js/modules/es7.string.pad-start\"","webpack:///external \"locutus/php\"","webpack:///external \"phpunserialize\"","webpack:///external \"util\"","webpack:///./src/test.js","webpack:///./src/tests/index.js","webpack:///external \"child_process\""],"names":["onShutdown","cb","handlers","push","logger","log","console","bind","trace","info","warn","error","castArray","any","_","isUndefined","isNull","isArray","inspect","object","opts","depth","colors","maxArrayLength","util","php","ini_set","unpack","format","buffer","codes","parts","split","offset","mod","lenStr","len","length","result","idx","slice","readUInt32LE","readUInt16LE","exec","parseInt","toString","puts","obj","var","unserialize","phpunserialize","strings","ord","str","Buffer","isBuffer","from","isNumber","_substr","substr","php$substr","start","end","apply","arguments","isStringifyedNumber","int","toInteger","toBuffer","something","encoding","retVal","item","map","isString","isPlainObject","clone","forEach","val","key","buffer2str","str2ascii","i","str2hex","instance","merge","Object","create","getPrototypeOf","Morphy_Fsa_Interface","getRootTrans","getRootState","getAlphabet","getAnnot","trans","walk","word","readAnnot","collect","startNode","callback","path","readState","index","unpackTranses","rawTranses","Morphy_Fsa","HEADER_SIZE","storage","lazy","Morphy_Fsa_Proxy","readHeader","validateHeader","header","read","Error","type","storage_type","getTypeAsString","className","ucfirst","fsaAccess","getResource","headerRaw","join","flags","raw_flags","constructor","resource","fsa_start","root_trans","readRootTrans","alphabet","createState","getRootStateIndex","isset","readAlphabet","alphabetBuf","Morphy_State","Morphy_Fsa_WordsCollector","collectLimit","limit","items","annot","size","getItems","clear","getCallback","Morphy_Fsa_Decorator","fsa","args","_fsa","value","Morphy_GrammemsProvider_Interface","getGrammems","partOfSpeech","Morphy_GrammemsProvider_Decorator","inner","Morphy_GrammemsProvider_Base","flatizeArray","array","flatten","values","grammems","all_grammems","getAllGrammemsGrouped","includeGroups","names","array_flip","array_keys","excludeGroups","resetGroups","resetGroupsForAll","Morphy_GrammemsProvider_Empty","Morphy_GrammemsProvider_ForFactory","enc","encoded_grammems","encodeGrammems","getGrammemsMap","from_enc","getSelfEncoding","ary","keyBuffer","keyBufferConverted","convert","new_key","new_value","valueBuffer","valueBufferConverted","Morphy_GrammemsProvider_Factory_included","Map","Morphy_GrammemsProvider_Factory","morphy","locale","getLocale","toLowerCase","has","set","included","get","grammemsProviders","err","isFunction","Morphy_GramInfo_Interface","getEncoding","getCharSize","getEnds","readGramInfoHeader","getGramInfoHeaderSize","readAncodes","readFlexiaData","readAllGramInfoOffsets","getHeader","readAllPartOfSpeech","readAllGrammems","readAllAncodes","Morphy_GramInfo","Morphy_GramInfo_Proxy","graminfoAccess","rtrim","buf","alloc","ends","fill","ends_size","cleanupCString","string","stringBuf","pos","indexOf","readSectionIndex","count","readSectionIndexAsSize","total_size","Morphy_GramInfo_Decorator","$storage","_info","Morphy_GramInfo_Proxy_WithHeader","$cacheFile","cache","readCache","fileName","fs","readFileSync","replace","parsingGood","JSON","parse","e","Morphy_GramInfo_RuntimeCaching","$ancodes","$flexia_all","Morphy_GramInfo_AncodeCache","hits","miss","getFileSize","$offset","STORAGE_FILE","STORAGE_MEM","SOURCE_FSA","RESOLVE_ANCODES_AS_TEXT","RESOLVE_ANCODES_AS_DIALING","RESOLVE_ANCODES_AS_INT","NORMAL","IGNORE_PREDICT","ONLY_PREDICT","PREDICT_BY_NONE","PREDICT_BY_SUFFIX","PREDICT_BY_DB","Morphy_Fsa_Sparse_File","alphabet_num","fh","wordBuf","prev_trans","char","c","readSync","walked","last_trans","word_trans","stack","stack_idx","total","start_idx","state","funchand","call_user_func","pop","start_offset","getAlphabetNum","rawTrans","term","empty","attr","dest","array_map","Morphy_Fsa_Sparse_Mem","mem","$index","Morphy_Fsa_Tree_File","j","expect","llast","rlast","Morphy_Fsa_Tree_Mem","Morphy_GramInfo_File","header_size","readAncodesMap","forms_count","splitAncodes","ancodes","k","kc","mapItem","res","readAllFlexia","affixes","name","is_predict","shift","grammems_count","grammem_ids","pos_id","Morphy_GramInfo_Mem","array_values","$size","$i","Morphy_GrammemsProvider_ru_ru_instances","WeakMap","Morphy_GrammemsProvider_ru_ru","self_encoding","grammems_map","instances","Morphy_Morphier_Interface","getBaseForm","getAllForms","getPseudoRoot","getPartOfSpeech","getWordDescriptor","getAllFormsWithAncodes","getAncode","getGrammarInfoMergeForms","getGrammarInfo","Morphy_Morphier_Empty","getAllFormsWithGramInfo","castFormByGramInfo","returnWords","Morphy_AnnotDecoder_Interface","decode","annotsRaw","withBase","Morphy_AnnotDecoder_Base","INVALID_ANCODE_ID","unpack_str","getUnpackString","block_size","getUnpackBlockSize","annotRawBuf","annotRaw","unpack_size","Morphy_AnnotDecoder_Common","Morphy_AnnotDecoder_Predict","Morphy_AnnotDecoder_Factory_instances","Morphy_AnnotDecoder_Factory","AnnotDecoders","eos","getCommonDecoder","cache_common","instantinate","getPredictDecoder","cache_predict","Morphy_AncodesResolver_Interface","resolve","ancodeId","unresolve","ancode","Morphy_AncodesResolver_ToText","gramtab","ancodeToString","stringToAncode","Morphy_AncodesResolver_ToDialingAncodes","ancodesMap","ancodes_map","reverse_map","Morphy_AncodesResolver_AsIs","Morphy_AncodesResolver_Proxy","AncodesResolvers","ctorArgs","___obj","__obj","Morphy_WordDescriptor_Collection","Array","Symbol","species","annots","helper","decodeAnnot","createDescriptor","Morphy_WordDescriptor","getByPartOfSpeech","poses","desc","hasPartOfSpeech","Morphy_Morphier_Helper","graminfo","ancodesResolver","resolvePartOfSpeech","resolve_pos","ancodes_resolver","char_size","annot_decoder","gramtab_consts_included","setAnnotDecoder","annotDecoder","getEndOfString","hasAnnotDecoder","getAnnotDecoder","getAncodesResolver","getGramInfo","getGramTab","isResolvePartOfSpeech","posId","resolvePartOfSpeechId","getGrammemsAndPartOfSpeech","extractPartOfSpeech","includeGramTabConsts","includeConsts","getBaseAndPrefix","cplen","plen","flen","base","prefix","keys","composeBaseForms","composeForms","toArray","all_ancodes","flexias","common_ancode","common_grammems","form_no","form_ancodes","form_pos","form_grammems","array_merge","form","array_diff","common","all","uniqWith","isEqual","sortedUniq","sortBy","stringify","form_no_low","form_no_high","info_item","unique_info","getAllFormsWithResolvedAncodes","resolveType","composeFormsWithResolvedAncodes","foundFormNo","composeFormsWithAncodes","getAllAncodes","baseAndPrefix","annotIdx","words","current_ancodes","forms","found_form_no","is_array","Morphy_WordForm","compareGrammems","a","b","hasGrammems","grammes_count","array_intersect","getWord","getFormNo","cached_base","cached_forms","all_forms_readed","cached_pseudo_root","common_ancode_grammems","readAllForms","getWordForm","createWordForm","grammemsAndPartOfSpeech","formsWithAncodes","splice","getFoundFormNoLow","getFoundFormNoHigh","getFoundWordForm","some","wf","getWordFormsByGrammems","getWordFormsByPartOfSpeech","Morphy_Morphier_Finder_Interface","findWord","raw","Morphy_Morphier_Finder_Base","prev_word","prev_result","doFindWord","Morphy_Morphier_Finder_Common","root","getFsa","Morphy_Morphier_Finder_Predict_Suffix","minimalSuffixLength","min_suf_len","unicode","Morphy_UnicodeHelper","word_len","strlen","firstCharSize","fixAnnots","Morphy_Morphier_PredictCollector","collected","used_poses","result_idx","nextItemsIndex","itemsSize","max","Morphy_Morphier_Finder_Predict_Database","minPostfixMatch","min_postfix_match","collector","createCollector","createAnnotDecoder","rev_word","strrev","match_len","fixTrailing","determineAnnots","matchLen","suffix","slen","partOfWordInPlaceOfPrefix","partOfWordInPlaceOfSuffix","equals","Morphy_Morphier_Base","finder","cloneDeep","getFinder","getHelper","returnOnlyWord","castFormByPattern","patternWord","orig_annots","pattern_annots","Morphy_Morphier_Common","Morphy_Morphier_Predict_Suffix","Morphy_Morphier_Predict_Database","Morphy_Morphier_Bulk","notfound","getGraminfo","getNotFoundWords","data","processAnnotsWithHelper","method","callWithWord","annot_raw","result_for_annot","patriciaTrie","buildPatriciaTrie","labels","finals","dests","n","label","is_final","concat","onlyBase","pseudoRoot","sort","compare","prev_wordBuf","prev_word_len","prev_lcp","node","state_labels","state_dests","state_finals","new_state_id","need_split","trim_size","node_key","new_node_id_1","new_node_id_2","new_node_id","lcp","Math","min","stack_size","abs","node_key_buf","defaults","dir","__dirname","predict_by_suffix","predict_by_db","graminfo_as_text","use_ancodes_cache","resolve_ancodes","Morphy","lang","assign","options","morpher","phpMorphy","prepareWord","asBuffer","toUpperCase","getCommonMorphier","getPredictBySuffixMorphier","getPredictByDatabaseMorphier","getBulkMorphier","getGrammemsProvider","getDefaultGrammemsProvider","isLastPredicted","getLastPredictionType","lemmatize","asText","getGramInfoMergeForms","getAnnotForWord","castFormByAncode","commonAncode","grammemsProvider","Morphy_FilesBundle","dirName","setLang","getLang","getCommonAutomatFile","genFileName","getPredictAutomatFile","getGramInfoFile","getGramInfoAncodesCacheFile","getAncodesMapFile","getGramTabFile","getGramTabFileWithTextIds","getGramInfoHeaderCacheFile","token","extraExt","Morphy_WordDescriptor_Collection_Serializer","serialize","collection","descriptor","processWordDescriptor","word_form","serializeGramInfo","wordForm","implode","repairOptions","init","createFilesBundle","last_prediction_type","bundle","storage_factory","createStorageFactory","common_fsa","createFsa","open","predict_fsa","createGramInfo","createGramTab","createMorphierHelper","__common_morphier","__predict_by_suf_morphier","__predict_by_db_morphier","__bulk_morphier","__grammems_provider","w","invoke","out","r","processWordsCollection","resolver","common_ancode_id","ancode_id","word_annot","paradigm","grammar","essential_grammems","uniq","__word_descriptor_serializer","not_found","predictWord","createCommonSource","Morphy_Source_Fsa","repairOldOptions","repairSourceOptions","common_source","___predict_by_db_morphier","createPredictByDbMorphier","___predict_by_suf_morphier","createPredictBySuffixMorphier","___bulk_morphier","createBulkMorphier","___common_morphier","createCommonMorphier","___word_descriptor_serializer","createWordDescriptorSerializer","___grammems_provider","createGrammemsProvider","Morphy_Storage_Factory","graminfoFile","Morphy_GramTab_Proxy","createAncodesResolverInternal","createAncodesResolver","graminfoAsText","Morphy_Link_Base","raw_trans","isAnnotation","getTrans","getRawTrans","Morphy_Link","getDest","getAttr","getTargetState","Morphy_Link_Annot","getAnnotation","raw_transes","transes","getLinks","createNormalLink","createAnnotLink","getSize","Morphy_GramTab_Interface","resolveGrammemIds","ids","id","partOfSpeechId","grammemIds","Morphy_GramTab_Empty","Morphy_GramTab","___ancodes_map","require","findAncode","__ancodes_map","buildAncodesMap","PMY_RP_NOUN","PMY_RP_ADJ_FULL","PMY_RP_VERB","PMY_RP_PRONOUN","PMY_RP_PRONOUN_P","PMY_RP_PRONOUN_PREDK","PMY_RP_NUMERAL","PMY_RP_NUMERAL_P","PMY_RP_ADV","PMY_RP_PREDK","PMY_RP_PREP","PMY_RP_POSL","PMY_RP_CONJ","PMY_RP_INTERJ","PMY_RP_INP","PMY_RP_PHRASE","PMY_RP_PARTICLE","PMY_RP_ADJ_SHORT","PMY_RP_PARTICIPLE","PMY_RP_ADVERB_PARTICIPLE","PMY_RP_PARTICIPLE_SHORT","PMY_RP_INFINITIVE","PMY_RP_EMPTY","PMY_RG_PLURAL","PMY_RG_SINGULAR","PMY_RG_NOMINATIV","PMY_RG_GENITIV","PMY_RG_DATIV","PMY_RG_ACCUSATIV","PMY_RG_INSTRUMENTALIS","PMY_RG_LOCATIV","PMY_RG_VOCATIV","PMY_RG_MASCULINUM","PMY_RG_FEMINUM","PMY_RG_NEUTRUM","PMY_RG_MASC_FEM","PMY_RG_PRESENT_TENSE","PMY_RG_FUTURE_TENSE","PMY_RG_PAST_TENSE","PMY_RG_FIRST_PERSON","PMY_RG_SECOND_PERSON","PMY_RG_THIRD_PERSON","PMY_RG_IMPERATIVE","PMY_RG_ANIMATIVE","PMY_RG_NON_ANIMATIVE","PMY_RG_COMPARATIVE","PMY_RG_PERFECTIVE","PMY_RG_NON_PERFECTIVE","PMY_RG_NON_TRANSITIVE","PMY_RG_TRANSITIVE","PMY_RG_ACTIVE_VOICE","PMY_RG_PASSIVE_VOICE","PMY_RG_INDECLINABLE","PMY_RG_INITIALISM","PMY_RG_PATRONYMIC","PMY_RG_TOPONYM","PMY_RG_ORGANISATION","PMY_RG_QUALITATIVE","PMY_RG_DE_FACTO_SING_TANTUM","PMY_RG_INTERROGATIVE","PMY_RG_DEMONSTRATIVE","PMY_RG_NAME","PMY_RG_SUR_NAME","PMY_RG_IMPERSONAL","PMY_RG_SLANG","PMY_RG_MISPRINT","PMY_RG_COLLOQUIAL","PMY_RG_POSSESSIVE","PMY_RG_ARCHAISM","PMY_RG_SECOND_CASE","PMY_RG_POETRY","PMY_RG_PROFESSION","PMY_RG_SUPERLATIVE","PMY_RG_POSITIVE","PMY_RG_SHORT","PMY_RG_INFO","PMY_RG_DEEPR","PMY_RG_PR","PMY_EP_NOUN","PMY_EP_ADJ","PMY_EP_VERB","PMY_EP_VBE","PMY_EP_MOD","PMY_EP_NUMERAL","PMY_EP_CONJ","PMY_EP_INTERJ","PMY_EP_PREP","PMY_EP_PARTICLE","PMY_EP_ART","PMY_EP_ADV","PMY_EP_PN","PMY_EP_ORDNUM","PMY_EP_PRON","PMY_EP_POSS","PMY_EP_PN_ADJ","PMY_EP_EMPTY","PMY_EG_SINGULAR","PMY_EG_PLURAL","PMY_EG_MASCULINUM","PMY_EG_FEMINUM","PMY_EG_ANIMATIVE","PMY_EG_PERFECTIVE","PMY_EG_NOMINATIVE","PMY_EG_OBJECT_CASE","PMY_EG_NARRATIVE","PMY_EG_GEOGRAPHICS","PMY_EG_PROPER","PMY_EG_PERSONAL_PRONOUN","PMY_EG_POSSESSIVE","PMY_EG_PREDICATIVE","PMY_EG_UNCOUNTABLE","PMY_EG_REFLEXIVE_PRONOUN","PMY_EG_DEMONSTRATIVE_PRONOUN","PMY_EG_MASS","PMY_EG_COMPARATIV","PMY_EG_SUPREMUM","PMY_EG_FIRST_PERSON","PMY_EG_SECOND_PERSON","PMY_EG_THIRD_PERSON","PMY_EG_PRESENT_INDEF","PMY_EG_INFINITIVE","PMY_EG_PAST_INDEF","PMY_EG_PAST_PARTICIPLE","PMY_EG_GERUND","PMY_EG_FUTURUM","PMY_EG_CONDITIONAL","PMY_EG_APOSTROPHE_S","PMY_EG_APOSTROPHE","PMY_EG_NAMES","PMY_EG_ORGANISATION","PMY_GP_ART","PMY_GP_ADJ","PMY_GP_ADV","PMY_GP_EIG","PMY_GP_SUB","PMY_GP_VER","PMY_GP_P_A1","PMY_GP_P_A2","PMY_GP_PRONOMEN","PMY_GP_PRP","PMY_GP_KON","PMY_GP_NEG","PMY_GP_INJ","PMY_GP_ZAL","PMY_GP_ZUS","PMY_GP_PRO_BEG","PMY_GP_ZU_INFINITIV","PMY_GP_EMPTY","PMY_GG_NOA_UNK","PMY_GG_PREDIK_BENUTZ","PMY_GG_PRO_UNK","PMY_GG_TMP_UNK","PMY_GG_NAC","PMY_GG_MOU","PMY_GG_COU","PMY_GG_GEO","PMY_GG_WASSER","PMY_GG_GEB","PMY_GG_STD","PMY_GG_LOK","PMY_GG_VOR","PMY_GG_SICH_ACC","PMY_GG_SICH_DAT","PMY_GG_SCHWACH","PMY_GG_NICHT_SCHWACH","PMY_GG_MODAL","PMY_GG_AUXILIAR","PMY_GG_KONJ1","PMY_GG_KONJ2","PMY_GG_PARTIZIP1","PMY_GG_PARTIZIP2","PMY_GG_ZU_VERB_FORM","PMY_GG_IMPERATIV","PMY_GG_PRAETERITUM","PMY_GG_PRASENS","PMY_GG_GRUNDFORM","PMY_GG_KOMPARATIV","PMY_GG_SUPERLATIV","PMY_GG_PROPORTIONAL_KONJUNKTION","PMY_GG_INFINITIV","PMY_GG_VERGLEICHS_KONJUNKTION","PMY_GG_NEBENORDNENDE","PMY_GG_UNTERORDNENDE","PMY_GG_PERSONAL","PMY_GG_DEMONSTRATIV","PMY_GG_INTERROGATIV","PMY_GG_POSSESSIV","PMY_GG_REFLEXIV","PMY_GG_RIN_PRONOMEN","PMY_GG_ALG_PRONOMEN","PMY_GG_ADJEKTIVE_OHNE_ARTIKEL","PMY_GG_ADJEKTIVE_MIT_UNBESTIMMTE","PMY_GG_ADJEKTIVE_MIT_BESTIMMTE","PMY_GG_ERSTE_PERSON","PMY_GG_ZWEITE_PERSON","PMY_GG_DRITTE_PERSON","PMY_GG_FEMININ","PMY_GG_MASKULIN","PMY_GG_NEUTRUM","PMY_GG_PLURAL","PMY_GG_SINGULAR","PMY_GG_NOMINATIV","PMY_GG_GENITIV","PMY_GG_DATIV","PMY_GG_AKKUSATIV","PMY_GG_ABBREVIATION","PMY_GG_EINWOHNER","PMY_GG_TRANSITIV","PMY_GG_INTRANSITIV","PMY_GG_IMPERSONAL","PMY_UP_UNKNOWN","PMY_UG_UNKNOWN","Morphy_Source_Interface","getValue","Morphy_Storage","file_name","getFileName","getType","exactLength","readUnsafe","message","Morphy_Storage_Proxy","factory","Morphy_Storage_File","stat","fstatSync","openSync","Morphy_Storage_Mem","storages","Morphy_UnicodeHelper_cache","Morphy_UnicodeHelper_unicodeHelpers","unicodeHelpers","doCreate","matches","match","tmp","encoding_name","utf_type","utf_base","endiannes","misc","pack","str_replace","Morphy_UnicodeHelper_singlebyte","Morphy_UnicodeHelper_Base","php_strlen","Morphy_UnicodeHelper_MultiByteFixed","array_reverse","str_split","floor","reverse","Morphy_UnicodeHelper_utf_8","tails_length","getTailsLength","diff","seq_len","Morphy_UnicodeHelper_utf_16_Base","isBigEndian","is_be","char_fmt","fmt","t","array_unshift","isSurrogate","Morphy_UnicodeHelper_utf_16le","Morphy_UnicodeHelper_utf_16be","Morphy_UnicodeHelper_utf_32_Base","Morphy_UnicodeHelper_utf_32le","Morphy_UnicodeHelper_utf_32be","Morphy_UnicodeHelper_ucs_2le","Morphy_UnicodeHelper_ucs_2be","Morphy_UnicodeHelper_ucs_4le","Morphy_UnicodeHelper_ucs_4be","runPhpTests","runLocalTests","cliEncode","phpTestsFile","relative","process","cwd","runPhpFileWithArgs","noop","cliArgs","Promise","reject","maxBuffer","stdout","stderr","success","testFoundWordParadigms","paradigms","formsOfSourceWord","sampleFormsByGrammem","sampleFormsByPartOfSpeech","formNo","includes","tests","provider","results","fn","partition","test","wordsEn","another","wordsRu","filter","testData","config","time","phpResults","localResults","reduce","testName","consistentResults","local","timeEnd","hasErrors","groupName","catch"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 58);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ac79321c42a8e7db32ec","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0 1","import _ from 'lodash';\nimport util from 'util';\n// import jschardet from 'jschardet';\n// import encoding from 'encoding';\nimport php from 'locutus/php';\nimport phpunserialize from 'phpunserialize';\n\n/**\n * @param {function} cb\n */\nfunction onShutdown (cb) {\n  onShutdown.handlers.push(cb);\n}\nonShutdown.handlers = [];\n\nconst logger = {};\nlogger.log = console.log.bind(console);\nlogger.trace = console.trace.bind(console);\nlogger.info = console.info.bind(console);\nlogger.warn = console.warn.bind(console);\nlogger.error = console.error.bind(console);\n\n/**\n * @param any\n * @returns {Array}\n */\nfunction castArray (any) {\n  any = (!_.isUndefined(any) && !_.isNull(any)) ? any : [];\n  any = _.isArray(any) ? any : [any];\n  \n  return any;\n}\n\n/**\n * @param object\n * @param {{}} [opts]\n * @returns {string}\n */\nfunction inspect (object, opts = {\n  depth: null,\n  colors: true,\n  maxArrayLength: 1000\n}) {\n  return util.inspect(object, opts);\n}\n\n// /**\n//  * @param {String|Buffer} text\n//  * @returns {String}\n//  */\n// function detectCharset (text) {\n//   let buffer;\n//   let retVal = null;\n//\n//   if (_.isArray(text)) {\n//     return _.map(text, item => detectCharset(item));\n//   } else\n//   if (_.isString(text)) {\n//     buffer = Buffer.from(text, 'binary');\n//   } else\n//   if (!Buffer.isBuffer(text)) {\n//     buffer = null;\n//   }\n//\n//   if (buffer) {\n//     retVal = jschardet.detect(buffer).encoding;\n//     retVal = (retVal) ? retVal.toLowerCase() : null;\n//   }\n//\n//   return retVal;\n// }\n\n// /**\n//  * @param {String|Buffer} text\n//  * @param {String} to\n//  * @param {String} [from='UTF-8']\n//  * @returns {*}\n//  */\n// function convert (text, to, from = 'UTF-8') {\n//   let args = _.toArray(arguments);\n//   let buffer = null;\n//   let retVal = text;\n//\n//   if (_.isArray(text)) {\n//     return _.map(text, (item) => convert.apply(convert, [item].concat(args.slice(1))));\n//   } else\n//   if (_.isString(text)) {\n//     buffer = Buffer.from(text, 'binary');\n//   } else\n//   if (!Buffer.isBuffer(text)) {\n//     buffer = null;\n//   }\n//\n//   if (buffer) {\n//     from = (!from) ? detectCharset(buffer) : from;\n//\n//     if (from) {\n//       retVal = encoding.convert(buffer, to, from);\n//     }\n//\n//     return retVal.toString();\n//   }\n//\n//   return retVal;\n// }\n\n//php.info.ini_set('unicode.semantics', 'on');\nphp.info.ini_set('phpjs.objectsAsArrays', false);\n\nphp.unpack = function unpack (format, buffer) {\n  /**\n   * Параметр format задается в виде строки и состоит из кодов формата и\n   * опционального аргумента повторения. Аргумент может быть целочисленным,\n   * либо * для повторения до конца введенных данных. Для a, A, h, H число\n   * повторений определяет то, сколько символов взято от одного аргумента\n   * данных, для @ - это абсолютная позиция для размещения следующих данных,\n   * для всего остального число повторений определяет как много аргументов\n   * данных было обработано и упаковано в результирующую бинарную строку.\n   */\n  const codes  = {\n    'a': 'Строка (string) с NULL-заполнением',\n    'A': 'Строка (string) со SPACE-заполнением',\n    'h': 'Hex-строка (Hex string), с нижнего разряда',\n    'H': 'Hex-строка (Hex string), с верхнего разряда',\n    'c': 'знаковый символ (char)',\n    'C': 'беззнаковый символ (char)',\n    's': 'знаковый short (всегда 16 бит, машинный байтовый порядок)',\n    'S': 'беззнаковый short (всегда 16 бит, машинный байтовый порядок)',\n    'n': 'беззнаковый short (всегда 16 бит, порядок big endian)',\n    'v': 'беззнаковый short (всегда 16 бит, порядок little endian)',\n    'i': 'знаковый integer (машинно-зависимый размер и порядок)',\n    'I': 'беззнаковый integer (машинно-зависимый размер и порядок)',\n    'l': 'знаковый long (всегда 32 бит, машинный порядок)',\n    'L': 'беззнаковый long (всегда 32 бит, машинный порядок)',\n    'N': 'беззнаковый long (всегда 32 бит, порядок big endian)',\n    'V': 'беззнаковый long (всегда 32 бит, порядок little endian)',\n    'f': 'float (машинно-зависимые размер и прдставление)',\n    'd': 'double (машинно-зависимые размер и прдставление)',\n    'x': 'NUL байт',\n    'X': 'Резервирование одного байта',\n    '@': 'NUL-заполнение до абсолютной позиции'\n  };\n  const parts  = format.split('/');\n  let offset = 0, mod, lenStr, len;\n  if (parts.length > 1) {\n    let result = {};\n    for (let idx = 0; idx < parts.length; idx++) {\n      mod = parts[idx][0];\n      if (mod in codes) {\n        switch (mod) {\n          case 'V':\n            result[parts[idx].slice(1)] = buffer.readUInt32LE(offset);\n            offset += 4;\n            break;\n          case 'v':\n            result[parts[idx].slice(1)] = buffer.readUInt16LE(offset);\n            offset += 2;\n            break;\n          case 'a':\n            lenStr = /\\d+/g.exec(parts[idx])[0];\n            len = parseInt(lenStr, 10);\n            result[parts[idx].slice(1 + lenStr.length)] = buffer.toString('ascii', offset, len);\n            offset += len;\n            break;\n          default:\n            util.puts(parts[idx] + ' ' + offset);\n            break;\n        }\n      }\n    }\n    \n    return result;\n  } else {\n    let result = [];\n    do {\n      let obj = {};\n      mod = format[0];\n      if (mod in codes) {\n        switch (mod) {\n          case 'V':\n            obj = buffer.readUInt32LE(offset);\n            offset += 4;\n            break;\n          case 'v':\n            obj = buffer.readUInt16LE(offset);\n            offset += 2;\n            break;\n          case 'a':\n            lenStr = /\\d+/g.exec(format)[0];\n            len = parseInt(lenStr, 10);\n            obj = buffer.toString('ascii', offset, len);\n            offset += len;\n            break;\n          default:\n            util.puts(format);\n            break;\n        }\n      }\n      result.push(obj);\n    } while (offset < buffer.length);\n    \n    return result;\n  }\n};\n\nphp.var.unserialize = phpunserialize;\n\nphp.strings.ord = function ord (str, idx) {\n  if (!Buffer.isBuffer(str)) {\n    str = Buffer.from(str);\n  }\n  \n  idx = (!_.isUndefined(idx) && _.isNumber(idx) && idx < str.length) ? idx : 0;\n  \n  return str[idx];\n};\n\nphp.strings._substr = php.strings.substr; // safe\n/**\n * @param {String|Buffer} str\n * @param {Number} start\n * @param {Number} [len]\n * @returns {string|Buffer|boolean}\n */\nphp.strings.substr = function php$substr (str, start, len) {\n  let end;\n  \n  if (Buffer.isBuffer(str)) {\n    end = str.length;\n    start = (start < 0) ? start + end : start;\n    end = typeof len === 'undefined' ? end : (len < 0 ? len + end : len + start);\n    \n    return (start >= str.length || start < 0 || start > end) ? false : str.slice(start, end);\n  }\n  \n  return php.strings._substr.apply(php.strings._substr, arguments);\n};\n\n// /**\n//  * @param raw\n//  * @returns {String|null}\n//  */\n// function detectEncoding (raw) {\n//   let buffer, result;\n//   if (Buffer.isBuffer(raw)) {\n//     buffer = raw;\n//   } else {\n//     raw = (_.isString(raw)) ? raw : raw +'';\n//     buffer = Buffer.from(raw, 'binary');\n//   }\n//\n//   result = jschardet.detect(buffer);\n//\n//   return (result.encoding) ? result.encoding : null;\n// }\n\n/**\n * @param any\n * @returns {boolean}\n */\nfunction isStringifyedNumber (any) {\n  let int = _.toInteger(any);\n  \n  if (int === 0 && any !== '0') {\n    return false;\n  }\n  \n  return any == int;\n}\n/**\n * @param something\n * @param [encoding='utf-8']\n * @returns {Buffer|*}\n */\nfunction toBuffer (something, encoding = 'utf-8') {\n  let retVal = something;\n  \n  if (_.isArray(something)) {\n    retVal = _.map(something, item => toBuffer(item, encoding));\n  } else\n  if (Buffer.isBuffer(something)) {\n    retVal = something;\n  } else\n  if (_.isString(something)) {\n    retVal = Buffer.from(something, encoding);\n  } else\n  if (_.isPlainObject(something)) {\n    let obj = _.clone(something);\n    _.forEach(obj, (val, key) => obj[key] = toBuffer(val, encoding));\n    \n    retVal = obj;\n  }\n  \n  return retVal;\n}\n\n/**\n * @param something\n * @param {String} [encoding='utf8']\n * @returns {string|*}\n */\nfunction buffer2str (something, encoding = 'utf8') {\n  return (Buffer.isBuffer(something)) ? something.toString(encoding) : something;\n}\n\n/**\n * @param something\n * @returns {Array}\n */\nfunction str2ascii (something) {\n  let retVal = [];\n  let buffer = (!Buffer.isBuffer(something)) ? Buffer.from(something, 'binary') : something;\n  \n  for (let i = 0, length = buffer.length; i < length; i++) {\n    retVal.push(buffer[i]);\n  }\n  \n  return retVal;\n}\n\n/**\n * @param something\n * @returns {String}\n */\nfunction str2hex (something) {\n  let retVal = (!Buffer.isBuffer(something)) ? Buffer.from(something, 'binary') : something;\n  \n  return retVal.toString('hex');\n}\n\nfunction clone (instance) {\n  return _.merge({}, Object.create(Object.getPrototypeOf(instance)), instance);\n}\n\nexport {\n  onShutdown,\n  castArray,\n  logger,\n  inspect,\n  // detectCharset,\n  // convert,\n  php,\n  // detectEncoding,\n  isStringifyedNumber,\n  toBuffer,\n  buffer2str,\n  str2ascii,\n  str2hex,\n  clone\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { Morphy_State } from './fsa_state';\nimport { php } from '../../utils';\n\nclass Morphy_Fsa_Interface {\n\n  /**\n   * Return root transition of fsa\n   * @return {[]}\n   */\n  getRootTrans () {}\n\n  /**\n   * Returns root state object\n   * @return {*}\n   */\n  getRootState () {}\n\n  /**\n   * Returns alphabet i.e. all chars used in automat\n   * @return {[]}\n   */\n  getAlphabet () {}\n\n  /**\n   * Return annotation for given transition(if annotation flag is set for given trans)\n   *\n   * @param {[]} trans\n   * @return {string}\n   */\n  getAnnot (trans) {}\n  \n  /**\n   * Find word in automat\n   *\n   * @param {*} trans starting transition\n   * @param {string} word\n   * @param {boolean} [readAnnot=true] read annot or simple check if word exists in automat\n   * @return {boolean} TRUE if word is found, FALSE otherwise\n   */\n  walk (trans, word, readAnnot = true) {}\n\n  /**\n   * Traverse automat and collect words\n   * For each found words callback function invoked with follow arguments:\n   * call_user_func(callback, word, annot)\n   * when `readAnnot` is FALSE then `annot` arg is always NULL\n   *\n   * @param {*} startNode\n   * @param {*} callback callback function(in php format callback i.e. string or array(obj, method) or array(class,\n   *   method)\n   * @param {boolean} [readAnnot=true] read annot\n   * @param {string} [path=] string to be append to all words\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {}\n\n  /**\n   * Read state at given index\n   *\n   * @param {number} index\n   * @return {[]}\n   */\n  readState (index) {}\n\n  /**\n   * Unpack transition from binary form to array\n   *\n   * @param {*} rawTranses may be array for convert more than one transitions\n   * @return {[]}\n   */\n  unpackTranses (rawTranses) {}\n\n}\n\nclass Morphy_Fsa extends Morphy_Fsa_Interface {\n  \n  static get HEADER_SIZE () {\n    return 128;\n  }\n  \n  /**\n   * @param {Morphy_Storage} storage\n   * @param {boolean} lazy\n   * @returns {*}\n   */\n  static create (storage, lazy) {\n    if (!!lazy) {\n      return new Morphy_Fsa_Proxy(storage);\n    }\n    \n    const { readHeader, validateHeader, HEADER_SIZE } = Morphy_Fsa;\n    const header = readHeader(storage.read(0, HEADER_SIZE, true));\n\n    if (!validateHeader(header)) {\n      throw new Error('Invalid fsa format');\n    }\n\n    let type;\n    if (header['flags']['is_sparse']) {\n      type = 'sparse';\n    } else\n    if (header['flags']['is_tree']) {\n      type = 'tree';\n    } else {\n      throw new Error('Only sparse or tree fsa`s supported');\n    }\n\n    const storage_type = storage.getTypeAsString();\n    const className = `Morphy_Fsa_${ php.strings.ucfirst(type) }_${ php.strings.ucfirst(storage_type) }`;\n    const fsaAccess = require('./access/fsa_'+ type +'_'+ storage_type);\n    \n    return new fsaAccess[className](storage.getResource(), header);\n  }\n  \n  static readHeader (headerRaw) {\n    const { HEADER_SIZE } = Morphy_Fsa;\n\n    if (headerRaw.length != HEADER_SIZE) {\n      throw new Error('Invalid header string given');\n    }\n\n    const header = php.unpack([\n      'a4fourcc',\n      'Vver',\n      'Vflags',\n      'Valphabet_offset',\n      'Vfsa_offset',\n      'Vannot_offset',\n      'Valphabet_size',\n      'Vtranses_count',\n      'Vannot_length_size',\n      'Vannot_chunk_size',\n      'Vannot_chunks_count',\n      'Vchar_size',\n      'Vpadding_size',\n      'Vdest_size',\n      'Vhash_size'\n    ].join('/'), headerRaw);\n\n    if (header === false) {\n      throw new Error('Can`t unpack header');\n    }\n\n    const flags          = {};\n    const raw_flags      = header['flags'];\n    flags['is_tree']   = !!(raw_flags & 0x01);\n    flags['is_hash']   = !!(raw_flags & 0x02);\n    flags['is_sparse'] = !!(raw_flags & 0x04);\n    flags['is_be']     = !!(raw_flags & 0x08);\n\n    header['flags'] = flags;\n\n    header['trans_size'] = header['char_size'] + header['padding_size'] + header['dest_size'] + header['hash_size'];\n\n    return header;\n  }\n\n  static validateHeader (header) {\n    return !(\n      header['fourcc'] != 'meal' ||\n      header['ver'] != 3 ||\n      header['char_size'] != 1 ||\n      header['padding_size'] > 0 ||\n      header['dest_size'] != 3 ||\n      header['hash_size'] != 0 ||\n      header['annot_length_size'] != 1 ||\n      header['annot_chunk_size'] != 1 ||\n      header['flags']['is_be'] ||\n      header['flags']['is_hash'] ||\n      1 == 0\n    );\n  }\n\n  constructor (resource, header) {\n    super(...arguments);\n    this.resource   = resource;\n    this.header     = header;\n    this.fsa_start  = header['fsa_offset'];\n    this.root_trans = this.readRootTrans();\n    this.alphabet   = null;\n  }\n\n  getRootTrans () {\n    return this.root_trans;\n  }\n\n  getRootState () {\n    return this.createState(this.getRootStateIndex());\n  }\n\n  getAlphabet () {\n    if (!php.var.isset(this.alphabet)) {\n      //this.alphabet = php.strings.str_split(this.readAlphabet());\n\n      const alphabet = this.readAlphabet();\n      const alphabetBuf = Buffer.from(alphabet);\n      const result = [];\n\n      for (let i = 0, length = alphabetBuf.length; i < length; i++) {\n        result.push(alphabetBuf.slice(i, i+1).toString());\n      }\n\n      this.alphabet = result;\n    }\n\n    return this.alphabet;\n  }\n\n  createState (index) {\n    return new Morphy_State(this, index);\n  }\n\n  getRootStateIndex () {}\n\n  readRootTrans () {}\n\n  readAlphabet () {}\n\n}\n\nclass Morphy_Fsa_WordsCollector {\n\n  constructor (collectLimit) {\n    this.limit = collectLimit;\n    this.items = {};\n  }\n\n  collect (word, annot) {\n    if (_.size(this.items) < this.limit) {\n      this.items[word] = annot;\n      return true;\n    }\n\n    return false;\n  }\n\n  getItems () {\n    return this.items;\n  }\n\n  clear () {\n    this.items = {};\n  }\n\n  getCallback () {\n    return [this, 'collect'];\n  }\n\n}\n\nclass Morphy_Fsa_Decorator extends Morphy_Fsa_Interface {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   */\n  constructor (fsa) {\n    super(...arguments);\n    this.fsa = fsa;\n  }\n\n  getRootTrans (...args) {\n    return this.fsa.getRootTrans(...args);\n  }\n\n  getRootState (...args) {\n    return this.fsa.getRootState(...args);\n  }\n\n  getAlphabet (...args) {\n    return this.fsa.getAlphabet(...args);\n  }\n\n  getAnnot (...args) {\n    return this.fsa.getAnnot(...args);\n  }\n\n  walk (...args) {\n    return this.fsa.walk(...args);\n  }\n\n  collect (...args) {\n    return this.fsa.collect(...args);\n  }\n\n  readState (...args) {\n    return this.fsa.readState(...args);\n  }\n\n  unpackTranses (...args) {\n    return this.fsa.unpackTranses(...args);\n  }\n\n}\n\nclass Morphy_Fsa_Proxy extends Morphy_Fsa_Decorator {\n\n  /**\n   * @param {Morphy_Storage} storage\n   */\n  constructor (storage) {\n    super(...arguments);\n    this.storage = storage;\n    this._fsa    = null;\n  }\n\n  get fsa () {\n    if (!this._fsa) {\n      this._fsa = Morphy_Fsa.create(this.storage, false);\n      delete this.storage;\n    }\n\n    return this._fsa;\n  }\n  \n  set fsa (value) {\n    this._fsa = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nexport {\n  Morphy_Fsa_Interface,\n  Morphy_Fsa,\n  Morphy_Fsa_WordsCollector,\n  Morphy_Fsa_Decorator,\n  Morphy_Fsa_Proxy\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/fsa.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 3\n// module chunks = 0 1","import _ from 'lodash';\nimport encoding from 'encoding';\nimport { php } from '../../utils';\n\nclass Morphy_GrammemsProvider_Interface {\n  getGrammems (partOfSpeech) {}\n}\n\nclass Morphy_GrammemsProvider_Decorator extends Morphy_GrammemsProvider_Interface {\n\n  /**\n   * @param {Morphy_GrammemsProvider_Interface} inner\n   */\n  constructor (inner) {\n    super(...arguments);\n\n    this.inner = inner;\n  }\n\n  getGrammems (partOfSpeech) {\n    return this.inner.getGrammems(partOfSpeech);\n  }\n\n}\n\nclass Morphy_GrammemsProvider_Base extends Morphy_GrammemsProvider_Interface {\n  \n  static flatizeArray (array) {\n    return _.flatten(_.values(array));\n  }\n\n  constructor () {\n    super(...arguments);\n  \n    this.grammems = {};\n    this.all_grammems = Morphy_GrammemsProvider_Base.flatizeArray(this.getAllGrammemsGrouped());\n  }\n\n  getAllGrammemsGrouped () {}\n\n  includeGroups (partOfSpeech, names) {\n    const grammems = this.getAllGrammemsGrouped();\n    names = (!_.isArray(names)) ? [names] : names;\n    names = php.array.array_flip(names);\n\n    _.forEach(php.array.array_keys(grammems), key => {\n      if (!php.var.isset(names[key])) {\n        delete grammems[key];\n      }\n    });\n\n    this.grammems[partOfSpeech] = Morphy_GrammemsProvider_Base.flatizeArray(grammems);\n\n    return this;\n  }\n\n  excludeGroups (partOfSpeech, names) {\n    const grammems = this.getAllGrammemsGrouped();\n    names = (!_.isArray(names)) ? [names] : names;\n\n    _.forEach(names, key => delete grammems[key]);\n    \n    this.grammems[partOfSpeech] = Morphy_GrammemsProvider_Base.flatizeArray(grammems);\n\n    return this;\n  }\n\n  resetGroups (partOfSpeech) {\n    delete this.grammems[partOfSpeech];\n\n    return this;\n  }\n\n  resetGroupsForAll () {\n    this.grammems = {};\n\n    return this;\n  }\n\n  getGrammems (partOfSpeech) {\n    if (php.var.isset(this.grammems[partOfSpeech])) {\n      return this.grammems[partOfSpeech];\n    }\n\n    return this.all_grammems;\n  }\n\n}\n\nclass Morphy_GrammemsProvider_Empty extends Morphy_GrammemsProvider_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getAllGrammemsGrouped () {\n    return {};\n  }\n\n  getGrammems (partOfSpeech) {\n    return false;\n  }\n\n}\n\nclass Morphy_GrammemsProvider_ForFactory extends Morphy_GrammemsProvider_Base {\n\n  constructor (enc) {\n    super(...arguments);\n    this.encoded_grammems = this.encodeGrammems(this.getGrammemsMap(), enc);\n  \n    // а как по-другому?\n    // кроме как копипастой кода родительского конструктора\n    // и чтобы аккуратно - никак\n    this.grammems = {};\n    this.all_grammems = Morphy_GrammemsProvider_Base.flatizeArray(this.getAllGrammemsGrouped());\n  }\n\n  getGrammemsMap () {}\n\n  getAllGrammemsGrouped () {\n    return this.encoded_grammems;\n  }\n\n  encodeGrammems (grammems, enc) {\n    const from_enc = this.getSelfEncoding();\n    const result = {};\n\n    if (from_enc == enc) {\n      return grammems;\n    }\n\n    _.forEach(grammems, (ary, key) => {\n      const keyBuffer = Buffer.from(key);\n      const keyBufferConverted = encoding.convert(keyBuffer, enc, from_enc);\n      const new_key = keyBufferConverted.toString();\n      const new_value = [];\n\n      _.forEach(ary, value => {\n        const valueBuffer = Buffer.from(value);\n        const valueBufferConverted = encoding.convert(valueBuffer, enc, from_enc);\n\n        new_value.push(valueBufferConverted.toString());\n      });\n\n      result[new_key] = new_value;\n    });\n\n    return result;\n  }\n\n}\n\nconst Morphy_GrammemsProvider_Factory_included = new Map;\n\nclass Morphy_GrammemsProvider_Factory {\n  /**\n   * @param {phpMorphy} morphy\n   * @returns {*}\n   */\n  static create (morphy) {\n    const locale = morphy.getLocale().toLowerCase();\n  \n    if (!Morphy_GrammemsProvider_Factory_included.has(morphy)) {\n      Morphy_GrammemsProvider_Factory_included.set(morphy, {});\n    }\n    \n    const included = Morphy_GrammemsProvider_Factory_included.get(morphy);\n    \n    if (_.isUndefined(included[locale])) {\n      const className = `Morphy_GrammemsProvider_${ locale }`;\n      let grammemsProviders = {};\n      \n      try {\n        grammemsProviders = require('./'+ locale);\n      } catch (err) {\n        included[locale] = new Morphy_GrammemsProvider_Empty(morphy);\n        return included[locale];\n      }\n  \n      if (_.isFunction(grammemsProviders[className])) {\n        included[locale] = grammemsProviders[className].instance(morphy);\n      } else {\n        throw new Error(\"Class '\" + className + \"' not found\");\n      }\n    }\n  \n    return included[locale];\n  }\n}\n\nexport {\n  Morphy_GrammemsProvider_Interface,\n  Morphy_GrammemsProvider_Decorator,\n  Morphy_GrammemsProvider_Base,\n  Morphy_GrammemsProvider_Empty,\n  Morphy_GrammemsProvider_ForFactory,\n  Morphy_GrammemsProvider_Factory\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/langs_stuff/common.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0 1","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\nimport _ from 'lodash';\nimport fs from 'fs';\nimport path from 'path';\nimport { php } from '../../utils';\n\nclass Morphy_GramInfo_Interface {\n\n  /**\n   * Returns language for graminfo file\n   * @returns {string}\n   */\n  getLocale () {}\n\n  /**\n   * Return encoding for graminfo file\n   * @returns {string}\n   */\n  getEncoding () {}\n\n  /**\n   * Return size of character (cp1251 - 1, utf8 - 1, utf16 - 2, utf32 - 4 etc)\n   * @returns {number}\n   */\n  getCharSize () {}\n\n  /**\n   * Return end of string value (usually string with \\0 value of char_size + 1 length)\n   * @returns {string}\n   */\n  getEnds () {}\n\n  /**\n   * Reads graminfo header\n   *\n   * @param {number} offset\n   * @returns {[]}\n   */\n  readGramInfoHeader (offset) {}\n\n  /**\n   * Returns size of header struct\n   */\n  getGramInfoHeaderSize () {}\n\n  /**\n   * Read ancodes section for header retrieved with readGramInfoHeader\n   *\n   * @param {[]} info\n   * @returns {[]}\n   */\n  readAncodes (info) {}\n\n  /**\n   * Read flexias section for header retrieved with readGramInfoHeader\n   *\n   * @param {[]} info\n   * @returns {[]}\n   */\n  readFlexiaData (info) {}\n\n  /**\n   * Read all graminfo headers offsets, which can be used latter for readGramInfoHeader method\n   * @returns {[]}\n   */\n  readAllGramInfoOffsets () {}\n\n  getHeader () {}\n\n  readAllPartOfSpeech () {}\n\n  readAllGrammems () {}\n\n  readAllAncodes () {}\n\n}\n\nclass Morphy_GramInfo extends Morphy_GramInfo_Interface {\n  \n  static get HEADER_SIZE () {\n    return 128;\n  }\n\n  /**\n   * @param {Morphy_Storage} storage\n   * @param {boolean} lazy\n   * @returns {*}\n   */\n  static create (storage, lazy) {\n    if (lazy) {\n      return new Morphy_GramInfo_Proxy(storage);\n    }\n  \n    const { readHeader, validateHeader, HEADER_SIZE } = Morphy_GramInfo;\n    const header = readHeader(storage.read(0, HEADER_SIZE));\n\n    if (!validateHeader(header)) {\n      throw new Error('Invalid graminfo format');\n    }\n\n    const storage_type = storage.getTypeAsString();\n    const className = `Morphy_GramInfo_${ php.strings.ucfirst(storage_type) }`;\n    const graminfoAccess = require('./access/graminfo_'+ storage_type);\n    \n    return new graminfoAccess[className](storage.getResource(), header);\n  }\n\n  static readHeader (headerRaw) {\n    const header = php.unpack([\n      'Vver',\n      'Vis_be',\n      'Vflex_count_old',\n      'Vflex_offset',\n      'Vflex_size',\n      'Vflex_count',\n      'Vflex_index_offset',\n      'Vflex_index_size',\n      'Vposes_offset',\n      'Vposes_size',\n      'Vposes_count',\n      'Vposes_index_offset',\n      'Vposes_index_size',\n      'Vgrammems_offset',\n      'Vgrammems_size',\n      'Vgrammems_count',\n      'Vgrammems_index_offset',\n      'Vgrammems_index_size',\n      'Vancodes_offset',\n      'Vancodes_size',\n      'Vancodes_count',\n      'Vancodes_index_offset',\n      'Vancodes_index_size',\n      'Vchar_size',\n      ''\n    ].join('/'), headerRaw);\n\n    let offset = 24 * 4;\n    let len = php.strings.ord(php.strings.substr(headerRaw, offset++, 1));\n\n    header['lang'] = php.strings.rtrim(php.strings.substr(headerRaw, offset, len));\n    offset += len;\n    len = php.strings.ord(php.strings.substr(headerRaw, offset++, 1));\n    header['encoding'] = php.strings.rtrim(php.strings.substr(headerRaw, offset, len));\n\n    return header;\n  }\n\n  static validateHeader (header) {\n    return (header['ver'] == 3 || header['is_be'] != 1);\n  }\n\n  constructor (resource, header) {\n    super(...arguments);\n    \n    this.resource = resource;\n    this.header = header;\n    //this.ends      = php.strings.str_repeat('\\0', header['char_size'] + 1);\n    //this.ends_size = php.strings.strlen(this.ends);\n    const buf = Buffer.alloc(header['char_size'] + 1);\n    this.ends = buf.fill('\\0');\n    this.ends_size = buf.length;\n  }\n\n  getLocale () {\n    return this.header['lang'];\n  }\n\n  getEncoding () {\n    return this.header['encoding'];\n  }\n\n  getCharSize () {\n    return this.header['char_size'];\n  }\n\n  getEnds () {\n    return this.ends;\n  }\n\n  getHeader () {\n    return this.header;\n  }\n\n  cleanupCString (string) {\n    //var pos = php.strings.strpos(string, this.ends);\n    //if (pos !== false) {\n    //  string = php.strings.substr(string, 0, pos);\n    //}\n\n    let stringBuf = (Buffer.isBuffer(string)) ? string : Buffer.from(string);\n    const pos = this.ends.indexOf(stringBuf);\n    if (pos >= 0) {\n      stringBuf = stringBuf.slice(0, pos);\n    }\n\n    return stringBuf.toString();\n  }\n\n  readSectionIndex (offset, count) {}\n\n  readSectionIndexAsSize (offset, count, total_size) {\n    // todo\n    if (!count) {\n      return [];\n    }\n\n    const index = this.readSectionIndex(offset, count);\n    index[count] = index[0] + total_size;\n\n    for (let i = 0; i < count; i++) {\n      index[i] = index[i + 1] - index[i];\n    }\n\n    delete index[count];\n\n    return index;\n  }\n\n}\n\nclass Morphy_GramInfo_Decorator extends Morphy_GramInfo_Interface {\n\n  /**\n   * @param {Morphy_GramInfo_Interface} info\n   */\n  constructor (info) {\n    super(...arguments);\n    this.info = info;\n  }\n\n  readGramInfoHeader (...args) {\n    return this.info.readGramInfoHeader(...args);\n  }\n\n  getGramInfoHeaderSize (...args) {\n    return this.info.getGramInfoHeaderSize(...args);\n  }\n\n  readAncodes (...args) {\n    return this.info.readAncodes(...args);\n  }\n\n  readFlexiaData (...args) {\n    return this.info.readFlexiaData(...args);\n  }\n\n  readAllGramInfoOffsets (...args) {\n    return this.info.readAllGramInfoOffsets(...args);\n  }\n\n  readAllPartOfSpeech (...args) {\n    return this.info.readAllPartOfSpeech(...args);\n  }\n\n  readAllGrammems (...args) {\n    return this.info.readAllGrammems(...args);\n  }\n\n  readAllAncodes (...args) {\n    return this.info.readAllAncodes(...args);\n  }\n\n  getLocale (...args) {\n    return this.info.getLocale(...args);\n  }\n\n  getEncoding (...args) {\n    return this.info.getEncoding(...args);\n  }\n\n  getCharSize (...args) {\n    return this.info.getCharSize(...args);\n  }\n\n  getEnds (...args) {\n    return this.info.getEnds(...args);\n  }\n  \n  getHeader (...args) {\n    return this.info.getHeader(...args);\n  }\n\n}\n\nclass Morphy_GramInfo_Proxy extends Morphy_GramInfo_Decorator {\n\n  /**\n   * @param {Morphy_Storage} $storage\n   */\n  constructor ($storage) {\n    super(...arguments);\n    \n    this.storage = $storage;\n    this._info   = null;\n  }\n\n  get info () {\n    if (!this._info) {\n      this._info = Morphy_GramInfo.create(this.storage, false);\n      delete this.storage;\n    }\n\n    return this._info;\n  }\n  \n  set info (value) {\n    this._info = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_GramInfo_Proxy_WithHeader extends Morphy_GramInfo_Decorator {\n\n  /**\n   * @param {Morphy_Storage} $storage\n   * @param $cacheFile\n   */\n  constructor ($storage, $cacheFile) {\n    super(...arguments);\n    \n    this.storage = $storage;\n    this._info = null;\n    this.cache = this.readCache($cacheFile);\n    //this.ends = php.strings.str_repeat('\\0', this.getCharSize() + 1);\n    const buf = Buffer.alloc(this.getCharSize() + 1);\n    this.ends = buf.fill('\\0');\n  }\n\n  readCache (fileName) {\n    let result = fs.readFileSync(fileName);\n\n    result = /\\(([\\s\\S]*)\\)/igm.exec(result.toString())[1];\n    result = result\n      .replace(/\\s/igm, '')\n      .replace(/,$/, '')\n      .replace(/=>/g, ':')\n      .replace(/'/g, '\"')\n    ;\n\n    result = ['{', result, '}'].join('');\n\n    let parsingGood = true;\n    try {\n      result = JSON.parse(result);\n      parsingGood = _.isPlainObject(result);\n    } catch (e) {\n      parsingGood = false;\n    }\n\n    if (!parsingGood) {\n      throw new Error('Can`t get header cache from \"' + fileName +'\" file');\n    }\n\n    return result;\n  }\n\n  getLocale () {\n    return this.cache['lang'];\n  }\n\n  getEncoding () {\n    return this.cache['encoding'];\n  }\n\n  getCharSize () {\n    return this.cache['char_size'];\n  }\n\n  getEnds () {\n    return this.ends;\n  }\n\n  getHeader () {\n    return this.cache;\n  }\n\n  get info () {\n    if (!this._info) {\n      this._info = Morphy_GramInfo.create(this.storage, false);\n      delete this.storage;\n    }\n\n    return this._info;\n  }\n  \n  set info (value) {\n    this._info = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_GramInfo_RuntimeCaching extends Morphy_GramInfo_Decorator {\n\n  constructor (...args) {\n    super(...args);\n    this.$ancodes = {};\n    this.$flexia_all = {};\n  }\n\n  readFlexiaData (info) {\n    const offset = info['offset'];\n\n    if (!php.var.isset(this.$flexia_all[offset])) {\n      this.$flexia_all[offset] = this.info.readFlexiaData(info);\n    }\n\n    return this.$flexia_all[offset];\n  }\n\n}\n\nclass Morphy_GramInfo_AncodeCache extends Morphy_GramInfo_Decorator {\n\n  /**\n   * @param {Morphy_GramInfo_Interface} inner\n   * @param resource\n   */\n  constructor (inner, resource) {\n    super(...arguments);\n\n    this.hits  = 0;\n    this.miss  = 0;\n    this.cache = null;\n\n    this.cache = php.var.unserialize(resource.read(0, resource.getFileSize()).toString());\n    if (this.cache === false) {\n      throw new Error(\"Can`t read ancodes cache\");\n    }\n  }\n\n  readAncodes (info) {\n    const $offset = info['offset'];\n\n    // todo: проверить доступ по индекс\n    if (php.var.isset(this.cache[$offset])) {\n      this.hits++;\n      return this.cache[$offset];\n    }\n\n    // in theory misses never occur\n    this.miss++;\n\n    return super.readAncodes(info);\n  }\n\n}\n\nexport {\n  Morphy_GramInfo_Interface,\n  Morphy_GramInfo,\n  Morphy_GramInfo_Decorator,\n  Morphy_GramInfo_Proxy,\n  Morphy_GramInfo_Proxy_WithHeader,\n  Morphy_GramInfo_RuntimeCaching,\n  Morphy_GramInfo_AncodeCache\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graminfo/graminfo.js","export const STORAGE_FILE = 'file';\nexport const STORAGE_MEM = 'mem';\nexport const SOURCE_FSA = 'fsa';\n\nexport const RESOLVE_ANCODES_AS_TEXT = 0;\nexport const RESOLVE_ANCODES_AS_DIALING = 1;\nexport const RESOLVE_ANCODES_AS_INT = 2;\nexport const NORMAL = 0;\nexport const IGNORE_PREDICT = 2;\nexport const ONLY_PREDICT = 3;\nexport const PREDICT_BY_NONE = 'none';\nexport const PREDICT_BY_SUFFIX = 'by_suffix';\nexport const PREDICT_BY_DB = 'by_db';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/constants.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Sparse_File extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n\n    this.alphabet_num = null;\n  }\n\n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   */\n  walk (trans, word, readAnnot = true) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n\n    let prev_trans;\n    let char;\n    let result;\n    let annot;\n    let buf;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.strings.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // sparse version\n      result = true;\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, fsa_start + ((((trans >> 10) & 0x3FFFFF) + char + 1) << 2));\n      trans = php.unpack('V', buf)[0];\n\n      if ((trans & 0x0200) || (trans & 0xFF) != char) {\n        result = false;\n      }\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot = null;\n    result = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = Buffer.alloc(4);\n        fs.readSync(fh, buf, 0, 4, fsa_start + (((trans >> 10) & 0x3FFFFF) << 2));\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param {*} startNode\n   * @param {*} callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    const stack     = [];\n    const stack_idx = [];\n\n\n    let total = 0;\n    let start_idx = 0;\n    let state;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n\n    state = this.readState(((startNode) >> 10) & 0x3FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          //if (!php.funchand.call_user_func(callback, path, annot)) {\n          if (!php.funchand.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.strings.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 10) & 0x3FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state = stack.pop();\n        start_idx = stack_idx.pop();\n        //path = php.strings.substr(Buffer.from(path), 0, -1).toString();\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState (index) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n    \n    let buf;\n    let trans;\n    let start_offset = fsa_start + ((index) << 2);\n\n    // first try read annot transition\n    buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, start_offset);\n    trans = php.unpack('V', buf)[0];\n\n    if ((trans & 0x0100)) {\n      result.push(trans);\n    }\n\n    // read rest\n    start_offset += 4;\n    _.forEach(this.getAlphabetNum(), char => {\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, start_offset + ((char) << 2));\n      trans = php.unpack('V', buf)[0];\n\n      //if(!(trans & 0x0200) && (trans & 0xFF) == char) {\n      // TODO: check term and empty flags at once i.e. trans & 0x0300\n      if (!((trans & 0x0200) || (trans & 0x0100)) && (trans & 0xFF) == char) {\n        result.push(trans);\n      }\n    });\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        empty: !!(rawTrans & 0x0200),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 10) & 0x3FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    let trans;\n    let buf;\n\n    buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, fsa_start + 4);\n    trans = php.unpack('V', buf)[0];\n\n    return trans;\n  }\n\n  readAlphabet () {\n    const fh = this.resource;\n    let buf;\n\n    buf = Buffer.alloc(this.header['alphabet_size']);\n    fs.readSync(fh, buf, 0, this.header['alphabet_size'], this.header['alphabet_offset']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n\n    const fh = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 22) | ((trans >> 10) & 0x3FFFFF));\n    let len;\n    let annot;\n    let buf;\n\n    buf = Buffer.alloc(1);\n    fs.readSync(fh, buf, 0, 1, offset);\n    len = php.strings.ord(buf);\n\n    if (len) {\n      buf = Buffer.alloc(len);\n      fs.readSync(fh, buf, 0, len, offset + 1);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n  getAlphabetNum () {\n    if (!php.var.isset(this.alphabet_num)) {\n      this.alphabet_num = php.array.array_map(php.strings.ord, this.getAlphabet());\n    }\n\n    return this.alphabet_num;\n  }\n\n}\n\nexport { Morphy_Fsa_Sparse_File };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_sparse_file.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Sparse_Mem extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n\n    this.alphabet_num = null;\n  }\n\n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   */\n  walk (trans, word, readAnnot = true) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n    let prev_trans;\n    let char;\n    let result;\n    let annot;\n    let buf;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.strings.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // sparse version\n      result = true;\n      buf = php.strings.substr(mem, fsa_start + ((((trans >> 10) & 0x3FFFFF) + char + 1) << 2), 4);\n      trans  = php.unpack('V', buf)[0];\n\n      if ((trans & 0x0200) || (trans & 0xFF) != char) {\n        result = false;\n      }\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot = null;\n    result = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = php.strings.substr(mem, fsa_start + (((trans >> 10) & 0x3FFFFF) << 2), 4);\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param {*} startNode\n   * @param {*} callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    const stack = [];\n    const stack_idx = [];\n\n    let total = 0;\n    let start_idx = 0;\n    let state;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n\n    state = this.readState(((startNode) >> 10) & 0x3FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          //if (!php.funchand.call_user_func(callback, path, annot)) {\n          if (!php.funchand.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.strings.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 10) & 0x3FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state     = stack.pop();\n        start_idx = stack_idx.pop();\n        //path      = php.strings.substr(Buffer.from(path), 0, -1).toString();\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState ($index) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n  \n    let buf;\n    let trans;\n    let start_offset = fsa_start + (($index) << 2);\n\n    // first try read annot transition\n    buf = php.strings.substr(mem, start_offset, 4);\n    trans = php.unpack('V', buf)[0];\n\n    if ((trans & 0x0100)) {\n      result.push(trans);\n    }\n\n    // read rest\n    start_offset += 4;\n    _.forEach(this.getAlphabetNum(), char => {\n      buf = php.strings.substr(mem, start_offset + ((char) << 2), 4);\n      trans = php.unpack('V', buf)[0];\n\n      //if(!(trans & 0x0200) && (trans & 0xFF) == char) {\n      // TODO: check term and empty flags at once i.e. trans & 0x0300\n      if (!((trans & 0x0200) || (trans & 0x0100)) && (trans & 0xFF) == char) {\n        result.push(trans);\n      }\n    });\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        empty: !!(rawTrans & 0x0200),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 10) & 0x3FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n\n    let buf;\n    let trans;\n\n    buf = php.strings.substr(mem, fsa_start + 4, 4);\n    trans = php.unpack('V', buf)[0];\n\n    return trans;\n  }\n\n  readAlphabet () {\n    const mem = this.resource;\n    const buf = php.strings.substr(mem, this.header['alphabet_offset'], this.header['alphabet_size']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n\n    const mem = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 22) | ((trans >> 10) & 0x3FFFFF));\n\n    let annot;\n    let buf = php.strings.substr(mem, offset, 1);\n    let len = php.strings.ord(buf);\n\n    if (len) {\n      buf = php.strings.substr(mem, offset + 1, len);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n  getAlphabetNum () {\n    if (!php.var.isset(this.alphabet_num)) {\n      this.alphabet_num = php.array.array_map(php.strings.ord, this.getAlphabet());\n    }\n\n    return this.alphabet_num;\n  }\n\n}\n\nexport { Morphy_Fsa_Sparse_Mem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_sparse_mem.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Tree_File extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   * @returns {*}\n   */\n  walk (trans, word, readAnnot = true) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n\n    let prev_trans;\n    let char;\n    let result;\n    let start_offset;\n    let buf;\n    let attr;\n    let annot;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.strings.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // tree version\n      result = true;\n      start_offset = fsa_start + (((trans >> 11) & 0x1FFFFF) << 2);\n\n      // read first trans in state\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, start_offset);\n      trans = php.unpack('V', buf)[0];\n\n      // If first trans is term(i.e. pointing to annot) then skip it\n      if ((trans & 0x0100)) {\n        // When this is single transition in state then break\n        if ((trans & 0x0200) && (trans & 0x0400)) {\n          result = false;\n        } else {\n          start_offset += 4;\n          buf = Buffer.alloc(4);\n          fs.readSync(fh, buf, 0, 4, start_offset);\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n\n      // if all ok process rest transitions in state\n      if (result) {\n        // walk through state\n        let idx = 1;\n        let j = 0;\n        for (;; j++) {\n          attr = (trans & 0xFF);\n\n          if (attr == char) {\n            result = true;\n            break;\n          } else\n          if (attr > char) {\n            if ((trans & 0x0200)) {\n              result = false;\n              break;\n            }\n\n            idx = idx << 1;\n          } else {\n            if ((trans & 0x0400)) {\n              result = false;\n              break;\n            }\n\n            idx = (idx << 1) + 1;\n          }\n\n          if (j > 255) {\n            throw new Error('Infinite recursion possible');\n          }\n\n          // read next trans\n          buf = Buffer.alloc(4);\n          fs.readSync(fh, buf, 0, 4, start_offset + ((idx - 1) << 2));\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot      = null;\n    result     = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = Buffer.alloc(4);\n        fs.readSync(fh, buf, 0, 4, fsa_start + (((trans >> 11) & 0x1FFFFF) << 2));\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param startNode\n   * @param callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    // `path` нигде не используется, даже в `Morphy_Morphier_PredictCollector.collect`,\n    // куда попадает этот `path` через вызов коллбека ниже\n    const stack = [];\n    const stack_idx = [];\n    \n    let total = 0;\n    let start_idx = 0;\n    let state;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n    state = this.readState(((startNode) >> 11) & 0x1FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          if (!php.funchand.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.strings.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 11) & 0x1FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state = stack.pop();\n        start_idx = stack_idx.pop();\n        //path = php.strings.substr(path, 0, -1);\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState (index) {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n  \n    let buf;\n    let trans;\n    let offset = fsa_start + ((index) << 2);\n\n    // read first trans\n    buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, offset);\n    trans = php.unpack('V', buf)[0];\n\n    // check if first trans is pointer to annot, and not single in state\n    if ((trans & 0x0100) && !((trans & 0x0200) || (trans & 0x0400))) {\n      result.push(trans);\n\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, null);\n      trans = php.unpack('V', buf)[0];\n      offset += 4;\n    }\n\n    // read rest\n    for (let expect = 1; expect; expect--) {\n      if (!(trans & 0x0200)) {\n        expect++;\n      }\n      if (!(trans & 0x0400)) {\n        expect++;\n      }\n\n      result.push(trans);\n\n      if (expect > 1) {\n        buf = Buffer.alloc(4);\n        fs.readSync(fh, buf, 0, 4, null);\n        trans = php.unpack('V', buf)[0];\n        offset += 4;\n      }\n    }\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        llast: !!(rawTrans & 0x0200),\n        rlast: !!(rawTrans & 0x0400),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 11) & 0x1FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n\n    let buf = Buffer.alloc(4);\n    fs.readSync(fh, buf, 0, 4, fsa_start + 0);\n    return php.unpack('V', buf)[0];\n  }\n\n  readAlphabet () {\n    const fh = this.resource;\n    let buf = Buffer.alloc(this.header['alphabet_size']);\n    fs.readSync(fh, buf, 0, this.header['alphabet_size'], this.header['alphabet_offset']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n\n    const fh = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 21) | ((trans >> 11) & 0x1FFFFF));\n\n    let annot;\n    let buf = Buffer.alloc(1);\n    fs.readSync(fh, buf, 0, 1, offset);\n    \n    let len = php.strings.ord(buf);\n    if (len) {\n      buf = Buffer.alloc(len);\n      fs.readSync(fh, buf, 0, len, null);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n}\n\nexport { Morphy_Fsa_Tree_File };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_tree_file.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, castArray } from '../../../utils';\nimport { Morphy_Fsa } from '../fsa';\n\nclass Morphy_Fsa_Tree_Mem extends Morphy_Fsa {\n\n  constructor (...args) {\n    super(...args);\n  }\n  \n  /**\n   * @param trans\n   * @param word\n   * @param {boolean} [readAnnot=true]\n   * @returns {*}\n   */\n  walk (trans, word, readAnnot = true) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const wordBuf = Buffer.from(word);\n\n    let prev_trans;\n    let char;\n    let result;\n    let start_offset;\n    let buf;\n    let attr;\n    let annot;\n  \n    let i = 0;\n    let c = wordBuf.length;\n    for (; i < c; i++) {\n      prev_trans = trans;\n      char = php.strings.ord(wordBuf, i);\n\n      /////////////////////////////////\n      // find char in state begin\n      // tree version\n      result = true;\n      start_offset = fsa_start + (((trans >> 11) & 0x1FFFFF) << 2);\n\n      // read first trans in state\n      buf = php.strings.substr(mem, start_offset, 4);\n      trans = php.unpack('V', buf)[0];\n\n      // If first trans is term(i.e. pointing to annot) then skip it\n      if ((trans & 0x0100)) {\n        // When this is single transition in state then break\n        if ((trans & 0x0200) && (trans & 0x0400)) {\n          result = false;\n        } else {\n          start_offset += 4;\n          buf = php.strings.substr(mem, start_offset, 4);\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n\n      // if all ok process rest transitions in state\n      if (result) {\n        // walk through state\n        for (let idx = 1, j = 0; ; j++) {\n          attr = (trans & 0xFF);\n\n          if (attr == char) {\n            result = true;\n            break;\n          } else\n          if (attr > char) {\n            if ((trans & 0x0200)) {\n              result = false;\n              break;\n            }\n\n            idx = idx << 1;\n          } else {\n            if ((trans & 0x0400)) {\n              result = false;\n              break;\n            }\n\n            idx = (idx << 1) + 1;\n          }\n\n          if (j > 255) {\n            throw new Error('Infinite recursion possible');\n          }\n\n          // read next trans\n          buf = php.strings.substr(mem, start_offset + ((idx - 1) << 2), 4);\n          trans = php.unpack('V', buf)[0];\n        }\n      }\n\n      // find char in state end\n      /////////////////////////////////\n\n      if (!result) {\n        trans = prev_trans;\n        break;\n      }\n    }\n\n    annot = null;\n    result = false;\n    prev_trans = trans;\n\n    if (i >= c) {\n      // Read annotation when we walked all chars in word\n      result = true;\n\n      if (readAnnot) {\n        // read annot trans\n        buf = php.strings.substr(mem, fsa_start + (((trans >> 11) & 0x1FFFFF) << 2), 4);\n        trans = php.unpack('V', buf)[0];\n\n        if ((trans & 0x0100) == 0) {\n          result = false;\n        } else {\n          annot = this.getAnnot(trans);\n        }\n      }\n    }\n\n    return {\n      result,\n      annot,\n      walked: i,\n      last_trans: trans,\n      word_trans: prev_trans\n    };\n  }\n\n  /**\n   * @param startNode\n   * @param callback\n   * @param {boolean} [readAnnot=true]\n   * @param {string} [path=]\n   * @returns {number}\n   */\n  collect (startNode, callback, readAnnot = true, path = '') {\n    // `path` нигде не используется, даже в `Morphy_Morphier_PredictCollector.collect`,\n    // куда попадает этот `path` через вызов коллбека ниже\n  \n    const stack = [];\n    const stack_idx = [];\n    \n    let total = 0;\n    let start_idx = 0;\n    let trans;\n    let annot;\n\n    stack.push(null);\n    stack_idx.push(null);\n\n    let state = this.readState(((startNode) >> 11) & 0x1FFFFF);\n\n    do {\n      let i = start_idx;\n      let c = _.size(state);\n      for (; i < c; i++) {\n        trans = state[i];\n\n        if ((trans & 0x0100)) {\n          total++;\n\n          if (readAnnot) {\n            annot = this.getAnnot(trans);\n          } else {\n            annot = trans;\n          }\n\n          //if (!php.funchand.call_user_func(callback, path, annot)) {\n          if (!php.funchand.call_user_func(callback, null, annot)) {\n            return total;\n          }\n        } else {\n          //path += php.strings.chr((trans & 0xFF));\n          stack.push(state);\n          stack_idx.push(i + 1);\n          state = this.readState(((trans) >> 11) & 0x1FFFFF);\n          start_idx = 0;\n\n          break;\n        }\n      }\n\n      if (i >= c) {\n        state = stack.pop();\n        start_idx = stack_idx.pop();\n        //path = php.strings.substr(path, 0, -1);\n      }\n    } while (!!stack.length);\n\n    return total;\n  }\n\n  readState (index) {\n    const mem = this.resource;\n    const fsa_start = this.fsa_start;\n    const result = [];\n\n    let offset = fsa_start + ((index) << 2);\n    // read first trans\n    let buf = php.strings.substr(mem, offset, 4);\n    let trans = php.unpack('V', buf)[0];\n\n    // check if first trans is pointer to annot, and not single in state\n    if ((trans & 0x0100) && !((trans & 0x0200) || (trans & 0x0400))) {\n      result.push(trans);\n      buf = php.strings.substr(mem, offset, 4);\n      trans = php.unpack('V', buf)[0];\n      offset += 4;\n    }\n\n    // read rest\n    for (let expect = 1; expect; expect--) {\n      if (!(trans & 0x0200)) {\n        expect++;\n      }\n      if (!(trans & 0x0400)) {\n        expect++;\n      }\n\n      result.push(trans);\n\n      if (expect > 1) {\n        buf = php.strings.substr(mem, offset, 4);\n        trans = php.unpack('V', buf)[0];\n        offset += 4;\n      }\n    }\n\n    return result;\n  }\n\n  unpackTranses (rawTranses) {\n    rawTranses = castArray(rawTranses);\n    const result = [];\n\n    _.forEach(rawTranses, rawTrans => {\n      result.push({\n        term:  !!(rawTrans & 0x0100),\n        llast: !!(rawTrans & 0x0200),\n        rlast: !!(rawTrans & 0x0400),\n        attr:  (rawTrans & 0xFF),\n        dest:  ((rawTrans) >> 11) & 0x1FFFFF\n      });\n    });\n\n    return result;\n  }\n\n  readRootTrans () {\n    const fh = this.resource;\n    const fsa_start = this.fsa_start;\n\n    let buf = php.strings.substr(fh, fsa_start + 0, 4);\n    return php.unpack('V', buf)[0];\n  }\n\n  readAlphabet () {\n    const fh = this.resource;\n    let buf = php.strings.substr(fh, this.header['alphabet_offset'], this.header['alphabet_size']);\n\n    return buf.toString();\n  }\n\n  getAnnot (trans) {\n    if (!(trans & 0x0100)) {\n      return null;\n    }\n  \n    const fh = this.resource;\n    const offset = this.header['annot_offset'] + (((trans & 0xFF) << 21) | ((trans >> 11) & 0x1FFFFF));\n  \n    let annot;\n    let buf = php.strings.substr(fh, offset, 1);\n    let len = php.strings.ord(buf);\n    if (len) {\n      buf = php.strings.substr(fh, offset + 1, len);\n      annot = buf;\n    } else {\n      annot = null;\n    }\n\n    return annot;\n  }\n\n}\n\nexport { Morphy_Fsa_Tree_Mem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/access/fsa_tree_mem.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php } from '../../../utils';\nimport { Morphy_GramInfo } from '../graminfo';\n\nclass Morphy_GramInfo_File extends Morphy_GramInfo {\n\n  constructor (...args) {\n    super(...args);\n\n    // todo: вместо магической константы, хаотично распиханной по методам, подставить эту переменную\n    this.header_size = 20;\n  }\n\n  getGramInfoHeaderSize () {\n    return 20;\n  }\n\n  readGramInfoHeader (offset) {\n    const fh = this.resource;\n    let buf = Buffer.alloc(20);\n    \n    fs.readSync(fh, buf, 0, 20, offset);\n\n    const result = php.unpack([\n      'vid',\n      'vfreq',\n      'vforms_count',\n      'vpacked_forms_count',\n      'vancodes_count',\n      'vancodes_offset',\n      'vancodes_map_offset',\n      'vaffixes_offset',\n      'vaffixes_size',\n      'vbase_size'\n    ].join('/'), buf);\n\n    result['offset'] = offset;\n\n    return result;\n  }\n\n  readAncodesMap (info) {\n    const fh = this.resource;\n    // TODO: this can be wrong due to aligning ancodes map section\n    const offset = info['offset'] + 20 + info['forms_count'] * 2;\n    const forms_count = info['packed_forms_count'];\n    const buf = Buffer.alloc(forms_count * 2);\n    fs.readSync(fh, buf, 0, forms_count * 2, offset);\n\n    return php.unpack('v'+ forms_count, buf);\n  }\n\n  splitAncodes (ancodes, map) {\n    const result = [];\n  \n    let k;\n    let kc;\n    let j = 0;\n    _.forEach(map, function (mapItem) {\n      const res = [];\n\n      for (k = 0, kc = mapItem; k < kc; k++, j++) {\n        res.push(ancodes[j]);\n      }\n\n      result.push(res);\n    });\n\n    return result;\n  }\n\n  readAncodes (info) {\n    const fh = this.resource;\n    // TODO: this can be wrong due to aligning ancodes section\n    const offset = info['offset'] + 20;\n    const forms_count = info['forms_count'];\n    const buf = Buffer.alloc(forms_count * 2);\n    fs.readSync(fh, buf, 0, forms_count * 2, offset);\n    const ancodes = php.unpack('v' + forms_count, buf);\n\n    // if (!expand) { return ancodes; }\n\n    const map = this.readAncodesMap(info);\n\n    return this.splitAncodes(ancodes, map);\n  }\n\n  readFlexiaData (info) {\n    const fh = this.resource;\n    let offset = info['offset'] + 20;\n\n    if (php.var.isset(info['affixes_offset'])) {\n      offset += info['affixes_offset'];\n    } else {\n      offset += info['forms_count'] * 2 + info['packed_forms_count'] * 2;\n    }\n\n    const buf = Buffer.alloc(info['affixes_size'] - this.ends_size);\n    fs.readSync(fh, buf, 0, info['affixes_size'] - this.ends_size, offset);\n\n    return buf.toString().split(this.ends.toString());\n  }\n\n  readAllGramInfoOffsets () {\n    return this.readSectionIndex(this.header['flex_index_offset'], this.header['flex_count']);\n  }\n\n  readSectionIndex (offset, count) {\n    const buf = Buffer.alloc(count * 4);\n    fs.readSync(this.resource, buf, 0, count * 4, offset);\n\n    return _.values(php.unpack('V'+ count, buf));\n  }\n\n  readAllFlexia () {\n    const result = {};\n    let offset = this.header['flex_offset'];\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['flex_index_offset'],\n        this.header['flex_count'],\n        this.header['flex_size']\n      ),\n      size => {\n        const header = this.readGramInfoHeader(offset);\n        const affixes = this.readFlexiaData(header);\n        const ancodes = this.readAncodes(header, true);\n\n        // todo: проверить полученные переменные\n        result[header['id']] = {\n          'header': header,\n          'affixes': affixes,\n          'ancodes': ancodes\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllPartOfSpeech () {\n    const fh = this.resource;\n    const result = {};\n    let offset = this.header['poses_offset'];\n    let buf;\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['poses_index_offset'],\n        this.header['poses_count'],\n        this.header['poses_size']\n      ),\n      size => {\n        buf = Buffer.alloc(3);\n        fs.readSync(fh, buf, 0, 3, offset);\n        res = php.unpack('vid/Cis_predict', buf);\n  \n        buf = Buffer.alloc(size - 3);\n        fs.readSync(fh, buf, 0, size - 3, offset);\n  \n        result[res['id']] = {\n          name: this.cleanupCString(buf),\n          is_predict: !!res['is_predict']\n        };\n  \n        offset += size;\n      }\n    );\n\n    // todo: сверить result\n    return result;\n  }\n\n  readAllGrammems () {\n    const fh = this.resource;\n    const result = {};\n    let offset = this.header['grammems_offset'];\n    let buf;\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['grammems_index_offset'],\n        this.header['grammems_count'],\n        this.header['grammems_size']\n      ),\n      size => {\n        buf = Buffer.alloc(3);\n        fs.readSync(fh, buf, 0, 3, offset);\n        res = php.unpack('vid/Cshift', buf);\n  \n        buf = Buffer.alloc(size - 3);\n        fs.readSync(fh, buf, 0, size - 3, offset);\n  \n        result[res['id']] = {\n          name: this.cleanupCString(buf),\n          shift: res['shift']\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllAncodes () {\n    const fh = this.resource;\n    const result = {};\n    let offset = this.header['ancodes_offset'];\n    let res;\n    let grammems_count;\n    let grammem_ids;\n    let buf;\n\n    for (let i = 0; i < this.header['ancodes_count']; i++) {\n      buf = Buffer.alloc(4);\n      fs.readSync(fh, buf, 0, 4, offset);\n      res = php.unpack('vid/vpos_id', buf);\n\n      offset += 4;\n\n      buf = Buffer.alloc(2);\n      fs.readSync(fh, buf, 0, 2, offset);\n      grammems_count = php.unpack('v', buf)[1];\n\n      offset += 2;\n\n      if (grammems_count) {\n        buf = Buffer.alloc(grammems_count * 2);\n        fs.readSync(fh, buf, 0, grammems_count * 2, offset);\n        grammem_ids = _.values(php.unpack('v' + grammems_count, buf));\n      } else {\n        grammem_ids = [];\n      }\n\n      result[res['id']] = {\n        pos_id: res['pos_id'],\n        offset: offset,\n        grammem_ids: grammem_ids\n      };\n\n      offset += grammems_count * 2;\n    }\n\n    return result;\n  }\n\n}\n\nexport { Morphy_GramInfo_File };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graminfo/access/graminfo_file.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php } from '../../../utils';\nimport { Morphy_GramInfo } from '../graminfo';\n\nclass Morphy_GramInfo_Mem extends Morphy_GramInfo {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  getGramInfoHeaderSize () {\n    return 20;\n  }\n\n  readGramInfoHeader (offset) {\n    const mem = this.resource;\n    const result = php.unpack([\n      'vid',\n      'vfreq',\n      'vforms_count',\n      'vpacked_forms_count',\n      'vancodes_count',\n      'vancodes_offset',\n      'vancodes_map_offset',\n      'vaffixes_offset',\n      'vaffixes_size',\n      'vbase_size'\n    ].join('/'), php.strings.substr(mem, offset, 20));\n\n    result['offset'] = offset;\n\n    return result;\n  }\n\n  readAncodesMap (info) {\n    const mem = this.resource;\n    const forms_count = info['packed_forms_count'];\n    // TODO: this can be wrong due to aligning ancodes map section\n    const offset = info['offset'] + 20 + info['forms_count'] * 2;\n\n    return php.unpack('v' + forms_count, php.strings.substr(mem, offset, forms_count * 2));\n  }\n\n  splitAncodes (ancodes, map) {\n    const result = [];\n\n    let k;\n    let kc;\n    let j = 0;\n    _.forEach(map, mapItem => {\n      const res = [];\n\n      for (k = 0, kc = mapItem; k < kc; k++, j++) {\n        res.push(ancodes[j]);\n      }\n\n      result.push(res);\n    });\n\n    return result;\n  }\n\n  readAncodes (info) {\n    const mem = this.resource;\n    const forms_count = info['forms_count'];\n    // TODO: this can be wrong due to aligning ancodes section\n    const offset = info['offset'] + 20;\n    const ancodes = php.unpack('v' + forms_count, php.strings.substr(mem, offset, forms_count * 2));\n    const map = this.readAncodesMap(info);\n\n    return this.splitAncodes(ancodes, map);\n  }\n\n  readFlexiaData (info) {\n    const mem  = this.resource;\n    let offset = info['offset'] + 20;\n\n    if (php.var.isset(info['affixes_offset'])) {\n      offset += info['affixes_offset'];\n    } else {\n      offset += info['forms_count'] * 2 + info['packed_forms_count'] * 2;\n    }\n\n    return php.strings.substr(\n      mem,\n      offset,\n      info['affixes_size'] - this.ends_size\n    ).toString().split(this.ends.toString());\n  }\n\n  readAllGramInfoOffsets () {\n    return this.readSectionIndex(this.header['flex_index_offset'], this.header['flex_count']);\n  }\n\n  readSectionIndex (offset, count) {\n    const mem = this.resource;\n\n    return php.array.array_values(php.unpack('V' + count, php.strings.substr(mem, offset, count * 4)));\n  }\n\n  readAllFlexia () {\n    const result = {};\n    let offset = this.header['flex_offset'];\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['flex_index_offset'],\n        this.header['flex_count'],\n        this.header['flex_size']\n      ),\n      size => {\n        const header = this.readGramInfoHeader(offset);\n        const affixes = this.readFlexiaData(header);\n        const ancodes = this.readAncodes(header, true);\n\n        result[header['id']] = {\n          header: header,\n          affixes: affixes,\n          ancodes: ancodes\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllPartOfSpeech () {\n    const mem = this.resource;\n    const result = {};\n    let offset = this.header['poses_offset'];\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['poses_index_offset'],\n        this.header['poses_count'],\n        this.header['poses_size']\n      ),\n      $size => {\n        res = php.unpack('vid/Cis_predict', php.strings.substr(mem, offset, 3));\n  \n        result[res['id']] = {\n          name: this.cleanupCString(php.strings.substr(mem, offset + 3, $size - 3)),\n          is_predict: !!res['is_predict']\n        };\n  \n        offset += $size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllGrammems () {\n    const mem = this.resource;\n    const result = {};\n    let offset = this.header['grammems_offset'];\n    let res;\n\n    _.forEach(\n      this.readSectionIndexAsSize(\n        this.header['grammems_index_offset'],\n        this.header['grammems_count'],\n        this.header['grammems_size']\n      ),\n      size => {\n        res = php.unpack('vid/Cshift', php.strings.substr(mem, offset, 3));\n  \n        result[res['id']] = {\n          'shift': res['shift'],\n          'name':  this.cleanupCString(php.strings.substr(mem, offset + 3, size - 3))\n        };\n  \n        offset += size;\n      }\n    );\n\n    return result;\n  }\n\n  readAllAncodes () {\n    const mem = this.resource;\n    const result = {};\n    let offset = this.header['ancodes_offset'];\n    let res;\n    let grammems_count;\n    let grammem_ids;\n\n    for (let $i = 0; $i < this.header['ancodes_count']; $i++) {\n      res = php.unpack('vid/vpos_id', php.strings.substr(mem, offset, 4));\n      offset += 4;\n\n      grammems_count = php.unpack('v', php.strings.substr(mem, offset, 2))[1];\n      offset += 2;\n\n      grammem_ids = (grammems_count)\n        ? php.array.array_values(php.unpack('v' + grammems_count, php.strings.substr(mem, offset, grammems_count * 2)))\n        : [];\n\n      result[res['id']] = {\n        offset,\n        grammem_ids,\n        pos_id: res['pos_id']\n      };\n\n      offset += grammems_count * 2;\n    }\n\n    return result;\n  }\n\n}\n\nexport { Morphy_GramInfo_Mem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graminfo/access/graminfo_mem.js","import _ from 'lodash';\nimport { php } from '../../utils';\nimport { Morphy_GrammemsProvider_ForFactory } from './common';\n\nconst Morphy_GrammemsProvider_ru_ru_instances = new WeakMap;\n\nclass Morphy_GrammemsProvider_ru_ru extends Morphy_GrammemsProvider_ForFactory {\n  \n  static get self_encoding () {\n    return 'utf-8';\n  }\n  \n  static get grammems_map () {\n    return {\n      'род': [\n        'МР',\n        'ЖР',\n        'СР'\n      ],\n      'одушевленность': [\n        'ОД',\n        'НО'\n      ],\n      'число': [\n        'ЕД',\n        'МН'\n      ],\n      'падеж': [\n        'ИМ',\n        'РД',\n        'ДТ',\n        'ВН',\n        'ТВ',\n        'ПР',\n        'ЗВ',\n        '2'\n      ],\n      'залог': [\n        'ДСТ',\n        'СТР'\n      ],\n      'время': [\n        'НСТ',\n        'ПРШ',\n        'БУД'\n      ],\n      'повелительная форма': ['ПВЛ'],\n      'лицо': [\n        '1Л',\n        '2Л',\n        '3Л'\n      ],\n      'краткость': ['КР'],\n      'сравнительная форма': ['СРАВН'],\n      'превосходная степень': ['ПРЕВ'],\n      'вид': [\n        'СВ',\n        'НС'\n      ],\n      'переходность': [\n        'ПЕ',\n        'НП'\n      ],\n      'безличный глагол': ['БЕЗЛ']\n    };\n  }\n  \n  /**\n   * @param {phpMorphy} morphy\n   * @returns {*}\n   */\n  static instance (morphy) {\n    const key = morphy.getEncoding();\n    if (!Morphy_GrammemsProvider_ru_ru_instances.has(morphy)) {\n      Morphy_GrammemsProvider_ru_ru_instances.set(morphy, {});\n    }\n    \n    const instances = Morphy_GrammemsProvider_ru_ru_instances.get(morphy);\n\n    if (_.isUndefined(instances[key])) {\n      instances[key] = new Morphy_GrammemsProvider_ru_ru(key);\n    }\n\n    return instances[key];\n  }\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getSelfEncoding () {\n    return 'utf-8';\n  }\n\n  getGrammemsMap () {\n    return Morphy_GrammemsProvider_ru_ru.grammems_map;\n  }\n\n}\n\nexport { Morphy_GrammemsProvider_ru_ru };\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/langs_stuff/ru_ru.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, toBuffer, castArray, inspect, isStringifyedNumber } from '../utils';\nimport { Morphy_UnicodeHelper } from './unicode';\nimport { Morphy_Fsa_WordsCollector } from './fsa/fsa';\n\n// ----------------------------\n// Morphier interface\n// ----------------------------\nclass Morphy_Morphier_Interface {\n\n  getAnnot (word) {}\n\n  getBaseForm (word) {}\n\n  getAllForms (word) {}\n\n  getPseudoRoot (word) {}\n\n  getPartOfSpeech (word) {}\n\n  getWordDescriptor (word) {}\n\n  getAllFormsWithAncodes (word) {}\n  \n  getAncode (word) {}\n\n  getGrammarInfoMergeForms (word) {}\n\n  getGrammarInfo (word) {}\n\n}\n\nclass Morphy_Morphier_Empty extends Morphy_Morphier_Interface {\n\n  getAnnot (word) {\n    return false;\n  }\n\n  getBaseForm (word) {\n    return false;\n  }\n\n  getAllForms (word) {\n    return false;\n  }\n\n  getAllFormsWithGramInfo (word) {\n    return false;\n  }\n\n  getPseudoRoot (word) {\n    return false;\n  }\n\n  getPartOfSpeech (word) {\n    return false;\n  }\n\n  getWordDescriptor (word) {\n    return false;\n  }\n\n  getAllFormsWithAncodes (word) {\n    return false;\n  }\n\n  getAncode (word) {\n    return false;\n  }\n\n  getGrammarInfoMergeForms (word) {\n    return false;\n  }\n\n  getGrammarInfo (word) {\n    return false;\n  }\n  \n  /**\n   * @param word\n   * @param partOfSpeech\n   * @param grammems\n   * @param {boolean} [returnWords=false]\n   * @param {*} [callback=null]\n   * @returns {boolean}\n   */\n  castFormByGramInfo (word, partOfSpeech, grammems, returnWords, callback) {\n    return false;\n  }\n\n}\n\n// ----------------------------\n// Annot decoder\n// ----------------------------\nclass Morphy_AnnotDecoder_Interface {\n\n  decode (annotsRaw, withBase) {}\n\n}\n\nclass Morphy_AnnotDecoder_Base extends Morphy_AnnotDecoder_Interface {\n  static get INVALID_ANCODE_ID () {\n    return 0xFFFF;\n  }\n\n  constructor (ends) {\n    super();\n    this.ends = ends;\n\n    this.unpack_str = this.getUnpackString();\n    this.block_size = this.getUnpackBlockSize();\n  }\n\n  getUnpackString () {}\n\n  getUnpackBlockSize () {}\n\n  decode (annotRawBuf, withBase) {\n    if (php.var.empty(annotRawBuf)) {\n      throw new Error(\"Empty annot given\");\n    }\n  \n    const annotRaw = annotRawBuf.toString();\n    const unpack_size = this.block_size;\n    const unpack_str = this.unpack_str;\n    let result = php.unpack('Vcount/' + unpack_str, annotRawBuf);\n    let res;\n    let count;\n    let items;\n    let start;\n\n    if (result === false) {\n      throw new Error(`Invalid annot string '${ annotRaw }'`);\n    }\n\n    if (result['common_ancode'] == Morphy_AnnotDecoder_Base.INVALID_ANCODE_ID) {\n      result['common_ancode'] = null;\n    }\n\n    count = result['count'];\n    result = [result];\n\n    if (count > 1) {\n      for (let i = 0; i < count - 1; i++) {\n        start = 4 + (i + 1) * unpack_size;\n        res = php.unpack(unpack_str, annotRawBuf.slice(start, start + unpack_size));\n\n        if (res['common_ancode'] == Morphy_AnnotDecoder_Base.INVALID_ANCODE_ID) {\n          res['common_ancode'] = null;\n        }\n\n        result.push(res);\n      }\n    }\n\n    if (withBase) {\n      start = 4 + count * unpack_size;\n      items = annotRawBuf.slice(start).toString().split(this.ends.toString());\n      for (let i = 0; i < count; i++) {\n        result[i]['base_prefix'] = items[i * 2];\n        result[i]['base_suffix'] = items[i * 2 + 1];\n      }\n    }\n\n    return result;\n  }\n\n}\n\nclass Morphy_AnnotDecoder_Common extends Morphy_AnnotDecoder_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getUnpackString () {\n    return [\n      'Voffset',\n      'vcplen',\n      'vplen',\n      'vflen',\n      'vcommon_ancode',\n      'vforms_count',\n      'vpacked_forms_count',\n      'vaffixes_size',\n      'vform_no',\n      'vpos_id'\n    ].join('/');\n  }\n\n  getUnpackBlockSize () {\n    return 22;\n  }\n\n}\n\nclass Morphy_AnnotDecoder_Predict extends Morphy_AnnotDecoder_Common {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getUnpackString () {\n    return [super.getUnpackString(), 'vfreq'].join('/');\n  }\n\n  getUnpackBlockSize () {\n    return super.getUnpackBlockSize() + 2;\n  }\n\n}\n\nconst Morphy_AnnotDecoder_Factory_instances = {};\nclass Morphy_AnnotDecoder_Factory {\n  \n  static get instances () {\n    return Morphy_AnnotDecoder_Factory_instances;\n  }\n  \n  static get AnnotDecoders () {\n    return {\n      Morphy_AnnotDecoder_Common,\n      Morphy_AnnotDecoder_Predict\n    };\n  }\n\n  static create (eos) {\n    const { instances } = Morphy_AnnotDecoder_Factory;\n    if (!php.var.isset(instances[eos])) {\n      instances[eos] = new Morphy_AnnotDecoder_Factory(eos);\n    }\n\n    return instances[eos];\n  }\n\n  constructor (eos) {\n    this.eos = eos;\n  }\n\n  getCommonDecoder () {\n    if (!php.var.isset(this.cache_common)) {\n      this.cache_common = this.instantinate('common');\n    }\n\n    return this.cache_common;\n  }\n\n  getPredictDecoder () {\n    if (!php.var.isset(this.cache_predict)) {\n      this.cache_predict = this.instantinate('predict');\n    }\n\n    return this.cache_predict;\n  }\n\n  instantinate (type) {\n    const className = 'Morphy_AnnotDecoder_'+ php.strings.ucfirst(type.toLowerCase());\n\n    return new Morphy_AnnotDecoder_Factory.AnnotDecoders[className](this.eos);\n  }\n\n}\n\nclass Morphy_AncodesResolver_Interface {\n\n  resolve (ancodeId) {}\n\n  unresolve (ancode) {}\n\n}\n\nclass Morphy_AncodesResolver_ToText extends Morphy_AncodesResolver_Interface {\n\n  /**\n   * @param {Morphy_GramTab_Interface} gramtab\n   * @private\n   */\n  constructor (gramtab) {\n    super();\n    this.gramtab = gramtab;\n  }\n\n  resolve (ancodeId) {\n    if (!php.var.isset(ancodeId)) {\n      return null;\n    }\n\n    return this.gramtab.ancodeToString(ancodeId);\n  }\n\n  unresolve (ancode) {\n    return this.gramtab.stringToAncode(ancode);\n  }\n\n}\n\nclass Morphy_AncodesResolver_ToDialingAncodes extends Morphy_AncodesResolver_Interface {\n\n  /**\n   * @param {Morphy_Storage} ancodesMap\n   */\n  constructor (ancodesMap) {\n    super();\n    this.ancodes_map = php.var.unserialize(ancodesMap.read(0, ancodesMap.getFileSize()).toString());\n    if (this.ancodes_map === false) {\n      throw new Error(\"Can`t open phpMorphy => Dialing ancodes map\");\n    }\n\n    this.reverse_map = php.array.array_flip(this.ancodes_map);\n  }\n\n  unresolve (ancode) {\n    if (!php.var.isset(ancode)) {\n      return null;\n    }\n\n    if (!php.var.isset(this.reverse_map[ancode])) {\n      throw new Error(`Unknown ancode found '${ ancode }'`);\n    }\n\n    return this.reverse_map[ancode];\n  }\n\n  resolve (ancodeId) {\n    if (!php.var.isset(ancodeId)) {\n      return null;\n    }\n\n    if (!php.var.isset(this.ancodes_map[ancodeId])) {\n      throw new Error(`Unknown ancode id found '${ ancodeId }'`);\n    }\n\n    return this.ancodes_map[ancodeId];\n  }\n\n}\n\nclass Morphy_AncodesResolver_AsIs extends Morphy_AncodesResolver_Interface {\n\n  constructor () {\n    super();\n  }\n  \n  resolve (ancodeId) {\n    return ancodeId;\n  }\n\n  unresolve (ancode) {\n    return ancode;\n  }\n\n}\n\nclass Morphy_AncodesResolver_Proxy extends Morphy_AncodesResolver_Interface {\n  static get AncodesResolvers () {\n    return {\n      Morphy_AncodesResolver_ToText,\n      Morphy_AncodesResolver_ToDialingAncodes,\n      Morphy_AncodesResolver_AsIs\n    }\n  }\n  \n  static instantinate (className, args) {\n    const { AncodesResolvers } = Morphy_AncodesResolver_Proxy;\n\n    return new AncodesResolvers[className](...args);\n    // return new (Function.prototype.bind.apply(AncodesResolvers[className], args));\n  }\n\n  constructor (className, ctorArgs) {\n    super();\n    this.className = className;\n    this.args      = ctorArgs;\n    this.___obj    = null;\n  }\n\n  unresolve (ancode) {\n    return this.__obj.unresolve(ancode);\n  }\n\n  resolve (ancodeId) {\n    return this.__obj.resolve(ancodeId);\n  }\n\n  get __obj () {\n    if (!this.___obj) {\n      this.___obj = Morphy_AncodesResolver_Proxy.instantinate(this.className, this.args);\n\n      delete this.args;\n      delete this.className;\n    }\n\n    return this.___obj;\n  }\n  \n  set __obj (value) {\n    this.___obj = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\n// ----------------------------\n// WordDescriptor\n// ----------------------------\n\n/**\n * @class\n * @augments Array\n */\nclass Morphy_WordDescriptor_Collection extends Array {\n\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Classes#Species\n  static get [Symbol.species]() { return Array; }\n  \n  /**\n   * @param {*} word\n   * @param {*} annots\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (word, annots, helper) {\n    super();\n\n    this.word = (word || '') + '';\n    this.annots = false === annots ? false : helper.decodeAnnot(annots, true);\n    this.helper = helper;\n\n    if (this.annots !== false) {\n      _.forEach(this.annots, annot => this.push(this.createDescriptor(word, annot, helper)));\n    }\n  }\n\n  /**\n   * @param {*} word\n   * @param {*} annot\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  createDescriptor (word, annot, helper) {\n    return new Morphy_WordDescriptor(word, annot, helper);\n  }\n\n  getByPartOfSpeech (poses) {\n    poses = castArray(poses);\n    const result = [];\n\n    _.forEach(this, desc => {\n      if (desc.hasPartOfSpeech(poses)) {\n        result.push(desc);\n      }\n    });\n\n    return result;\n  }\n\n}\n\n// ----------------------------\n// Helper\n// ----------------------------\nclass Morphy_Morphier_Helper {\n\n  /**\n   * @param {Morphy_GramInfo_Interface} graminfo\n   * @param {Morphy_GramTab_Interface} gramtab\n   * @param {Morphy_AncodesResolver_Interface} ancodesResolver\n   * @param {*} resolvePartOfSpeech\n   */\n  constructor (graminfo, gramtab, ancodesResolver, resolvePartOfSpeech) {\n    this.graminfo = graminfo;\n    this.gramtab = gramtab;\n    this.resolve_pos = !!resolvePartOfSpeech;\n    this.ancodes_resolver = ancodesResolver;\n    this.char_size = graminfo.getCharSize();\n    this.ends = graminfo.getEnds();\n    this.annot_decoder = null;\n    this.gramtab_consts_included = false;\n  }\n\n  /**\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\n   */\n  setAnnotDecoder (annotDecoder) {\n    this.annot_decoder = annotDecoder;\n  }\n\n  // getters\n  getEndOfString () {\n    return this.ends;\n  }\n\n  getCharSize () {\n    return this.char_size;\n  }\n\n  hasAnnotDecoder () {\n    return php.var.isset(this.annot_decoder);\n  }\n\n  getAnnotDecoder () {\n    return this.annot_decoder;\n  }\n\n  getAncodesResolver () {\n    return this.ancodes_resolver;\n  }\n\n  getGramInfo () {\n    return this.graminfo;\n  }\n\n  getGramTab () {\n    return this.gramtab;\n  }\n\n  isResolvePartOfSpeech () {\n    return this.resolve_pos;\n  }\n\n  // other\n  resolvePartOfSpeech (posId) {\n    return this.gramtab.resolvePartOfSpeechId(posId);\n  }\n\n  getGrammems (ancodeId) {\n    return this.gramtab.getGrammems(ancodeId);\n  }\n\n  getGrammemsAndPartOfSpeech (ancodeId) {\n    return [\n      this.gramtab.getPartOfSpeech(ancodeId),\n      this.gramtab.getGrammems(ancodeId)\n    ];\n  }\n\n  extractPartOfSpeech (annot) {\n    if (this.resolve_pos) {\n      return this.resolvePartOfSpeech(annot['pos_id']);\n    }\n\n    return annot['pos_id'];\n  }\n\n  includeGramTabConsts () {\n    if (this.isResolvePartOfSpeech()) {\n      this.gramtab.includeConsts();\n    }\n\n    this.gramtab_consts_included = true;\n  }\n\n  // getters\n  getWordDescriptor (word, annots) {\n    if (!this.gramtab_consts_included) {\n      this.includeGramTabConsts();\n    }\n\n    return new Morphy_WordDescriptor_Collection(word, annots, this);\n  }\n\n  getBaseAndPrefix (word, cplen, plen, flen) {\n    const wordBuf = Buffer.from(word);\n    let base;\n    let prefix;\n\n    if (flen) {\n      base = php.strings.substr(wordBuf, cplen + plen, -flen);\n    } else {\n      if (cplen || plen) {\n        base = php.strings.substr(wordBuf, cplen + plen);\n      } else {\n        base = wordBuf;\n      }\n    }\n\n    prefix = cplen ? php.strings.substr(wordBuf, 0, cplen) : '';\n    base = base.toString();\n    prefix = prefix.toString();\n\n    return [base, prefix];\n  }\n\n  getPartOfSpeech (word, annots) {\n    if (annots === false) {\n      return false;\n    }\n\n    let result = {};\n    _.forEach(this.decodeAnnot(annots, false), annot => result[this.extractPartOfSpeech(annot)] = 1);\n    result = _.keys(result);\n    result = this.resolve_pos ? result : result.map(_.toInteger);\n  \n    return result;\n  }\n\n  getBaseForm (word, annots) {\n    if (annots === false) {\n      return false;\n    }\n\n    annots = this.decodeAnnot(annots, true);\n\n    return this.composeBaseForms(word, annots);\n  }\n\n  getPseudoRoot (word, annots) {\n    if (annots == false) {\n      return false;\n    }\n  \n    const result = {};\n    annots = this.decodeAnnot(annots, false);\n    _.forEach(annots, annot => {\n      const base = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen'])[0];\n\n      result[base] = 1;\n    });\n\n    return php.array.array_keys(result);\n  }\n\n  getAllForms (word, annots) {\n    if (annots === false) {\n      return false;\n    }\n\n    annots = this.decodeAnnot(annots, false);\n\n    return this.composeForms(word, annots);\n  }\n\n  /**\n   * @param word\n   * @param annots\n   * @param partOfSpeech\n   * @param grammems\n   * @param {boolean} [returnWords=false]\n   * @param {*} [callback=null]\n   * @returns {*}\n   */\n  castFormByGramInfo (word, annots, partOfSpeech, grammems, returnWords = false, callback = null) {\n    if (annots === false) {\n      return false;\n    }\n    \n    /**\n     * @todo: вот сюда данные приходят правильные (как в php),\n     * а выходят не правильные (не как в php)\n     */\n    \n    grammems = _.toArray(grammems);\n    partOfSpeech = php.var.isset(partOfSpeech) ? partOfSpeech + '' : null;\n  \n    /**\n     * Проверено:\n     * grammems\n     * partOfSpeech\n     * this.decodeAnnot(annots, false)\n     */\n    const result = (!!returnWords) ? {} : [];\n    _.forEach(this.decodeAnnot(annots, false), annot => {\n      const all_ancodes = this.graminfo.readAncodes(annot);\n      const flexias = this.graminfo.readFlexiaData(annot);\n      const common_ancode = annot['common_ancode'];\n      const common_grammems = php.var.isset(common_ancode) ? this.gramtab.getGrammems(common_ancode) : [];\n      const [ base, prefix ] = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\n      let form_no = 0;\n      let i = 0;\n\n      /**\n       * Проверено:\n       * all_ancodes\n       * flexias\n       * common_ancode\n       * common_grammems\n       * base\n       * prefix\n       */\n  \n      _.forEach(all_ancodes, form_ancodes => {\n        _.forEach(form_ancodes, ancode => {\n          const form_pos = this.gramtab.getPartOfSpeech(ancode);\n          const form_grammems = php.array.array_merge(this.gramtab.getGrammems(ancode), common_grammems);\n          const form = [\n            prefix,\n            flexias[i],\n            base,\n            flexias[i + 1]\n          ].join('');\n\n          if (_.isFunction(callback)) {\n            if (!callback(form, form_pos, form_grammems, form_no)) {\n              form_no++;\n              return;\n            }\n          } else {\n            if (php.var.isset(partOfSpeech) && form_pos !== partOfSpeech) {\n              form_no++;\n              return;\n            }\n\n            if (_.size(php.array.array_diff(grammems, form_grammems)) > 0) {\n              form_no++;\n              return;\n            }\n          }\n\n          if (returnWords) {\n            result[form] = 1;\n          } else {\n            result.push({\n              form,\n              form_no,\n              pos: form_pos,\n              grammems: form_grammems\n            });\n          }\n\n          form_no++;\n        });\n\n        i += 2;\n      });\n    });\n\n    return returnWords ? php.array.array_keys(result) : result;\n  }\n\n  getAncode (annots) {\n    if (annots === false) {\n      return false;\n    }\n\n    const result = [];\n    _.forEach(this.decodeAnnot(annots, false), annot => {\n      const all_ancodes = this.graminfo.readAncodes(annot);\n\n      result.push({\n        common: this.ancodes_resolver.resolve(annot['common_ancode']),\n        all: php.array.array_map([this.ancodes_resolver, 'resolve'], all_ancodes[annot['form_no']])\n      });\n    });\n    \n    return _.uniqWith(result, _.isEqual);\n  }\n\n  getGrammarInfoMergeForms (annots) {\n    if (annots === false) {\n      return false;\n    }\n\n    const result = [];\n    _.forEach(this.decodeAnnot(annots, false), annot => {\n      const all_ancodes = this.graminfo.readAncodes(annot);\n      const common_ancode = annot['common_ancode'];\n      const form_no = annot['form_no'];\n      let grammems = php.var.isset(common_ancode) ? this.gramtab.getGrammems(common_ancode) : [];\n      let forms_count = 0;\n\n      let ancodeId;\n      _.forEach(all_ancodes[form_no], ancode => {\n        ancodeId = ancode;\n        \n        grammems = php.array.array_merge(grammems, this.gramtab.getGrammems(ancode));\n        forms_count++;\n      });\n\n      grammems = _.sortedUniq(_.sortBy(grammems, this.resolve_pos ? JSON.stringify : _.toInteger));\n\n      result.push({\n        // todo: незарезолвенный ancodeId\n        // part of speech identical across all joined forms\n        pos: this.gramtab.getPartOfSpeech(ancodeId),\n        grammems,\n        forms_count,\n        form_no_low: form_no,\n        form_no_high: form_no + forms_count,\n      });\n    });\n\n    return _.uniqWith(result, _.isEqual);\n  }\n\n  getGrammarInfo (annots) {\n    if (annots == false) {\n      return false;\n    }\n    \n    const result = [];\n    _.forEach(this.decodeAnnot(annots, false), annot => {\n      const all_ancodes = this.graminfo.readAncodes(annot);\n      const common_ancode = annot['common_ancode'];\n      const common_grammems = php.var.isset(common_ancode) ? this.gramtab.getGrammems(common_ancode) : [];\n      const info = [];\n      const form_no = annot['form_no'];\n      \n      _.forEach(all_ancodes[form_no], ancode => {\n        let grammems = php.array.array_merge(common_grammems, this.gramtab.getGrammems(ancode));\n        grammems = _.sortBy(grammems, this.resolve_pos ? JSON.stringify : _.toInteger);\n  \n        let info_item = {\n          pos: this.gramtab.getPartOfSpeech(ancode),\n          grammems,\n          form_no\n        };\n\n        info.push(info_item);\n      });\n  \n      let unique_info = _.sortedUniq(_.sortBy(info, JSON.stringify));\n  \n      result.push(unique_info);\n    });\n\n    return _.uniqWith(result, _.isEqual);\n  }\n\n  /**\n   * @param word\n   * @param annots\n   * @param {string} [resolveType='no_resolve']\n   * @returns {boolean}\n   */\n  getAllFormsWithResolvedAncodes (word, annots, resolveType = 'no_resolve') {\n    if (annots == false) {\n      return false;\n    }\n  \n    annots = this.decodeAnnot(annots, false);\n\n    return this.composeFormsWithResolvedAncodes(word, annots);\n  }\n\n  getAllFormsWithAncodes (word, annots, foundFormNo) {\n    if (annots === false) {\n      return false;\n    }\n\n    annots = this.decodeAnnot(annots, false);\n\n    return this.composeFormsWithAncodes(word, annots);\n  }\n\n  getAllAncodes (word, annots) {\n    if (annots === false) {\n      return false;\n    }\n\n    const result = [];\n\n    _.forEach(annots, annot => result.push(this.graminfo.readAncodes(annot)));\n\n    return result;\n  }\n\n  composeBaseForms (word, annots) {\n    const result = {};\n\n    _.forEach(annots, annot => {\n      if (annot['form_no'] > 0) {\n        const baseAndPrefix = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\n        const base = baseAndPrefix[0];\n        const prefix = baseAndPrefix[1];\n        const form = [\n          prefix,\n          annot['base_prefix'],\n          base,\n          annot['base_suffix']\n        ].join('');\n\n        result[form] = 1;\n      } else {\n        result[word] = 1;\n      }\n    });\n    \n    return php.array.array_keys(result);\n  }\n\n  composeForms (word, annots) {\n    const result = {};\n\n    _.forEach(annots, annot => {\n      const baseAndPrefix = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\n      const base = baseAndPrefix[0];\n      const prefix = baseAndPrefix[1];\n      // read flexia\n      const flexias = this.graminfo.readFlexiaData(annot);\n      \n      let form;\n      for (let i = 0, c = _.size(flexias); i < c; i += 2) {\n        form = [prefix, flexias[i], base, flexias[i + 1]].join('');\n        result[form] = 1;\n      }\n    });\n\n    return php.array.array_keys(result);\n  }\n\n  composeFormsWithResolvedAncodes (word, annots) {\n    const result = [];\n    \n    _.forEach(annots, (annot, annotIdx) => {\n      const words = [];\n      const ancodes = [];\n      const common_ancode = annot['common_ancode'];\n      // read flexia\n      const flexias = this.graminfo.readFlexiaData(annot);\n      const all_ancodes = this.graminfo.readAncodes(annot);\n      const baseAndPrefix = this.getBaseAndPrefix(\n        word,\n        annot['cplen'],\n        annot['plen'],\n        annot['flen']\n      );\n      const base = baseAndPrefix[0];\n      const prefix = baseAndPrefix[1];\n  \n      let form;\n      let current_ancodes;\n  \n      for (let i = 0, c = _.size(flexias); i < c; i += 2) {\n        form = [prefix, flexias[i], base, flexias[i + 1]].join('');\n        current_ancodes = all_ancodes[i / 2];\n\n        _.forEach(current_ancodes, ancode => {\n          words.push(form);\n          ancodes.push(this.ancodes_resolver.resolve(ancode));\n        });\n      }\n\n      result.push({\n        all: ancodes,\n        forms: words,\n        common: this.ancodes_resolver.resolve(common_ancode)\n      });\n    });\n\n    return result;\n  }\n\n  composeFormsWithAncodes (word, annots, foundFormNo) {\n    const result = [];\n\n    _.forEach(annots, (annot, annotIdx) => {\n      const baseAndPrefix = this.getBaseAndPrefix(word, annot['cplen'], annot['plen'], annot['flen']);\n      const base = baseAndPrefix[0];\n      const prefix = baseAndPrefix[1];\n      // read flexia\n      const flexias = this.graminfo.readFlexiaData(annot);\n      const ancodes = this.graminfo.readAncodes(annot);\n      const found_form_no = annot['form_no'];\n  \n      let count;\n      let form_no;\n\n      foundFormNo = (!_.isArray(foundFormNo)) ? [] : foundFormNo;\n\n      for (let i = 0, c = _.size(flexias); i < c; i += 2) {\n        form_no = i / 2;\n        word = [prefix, flexias[i], base, flexias[i + 1]].join('');\n\n        if (found_form_no == form_no) {\n          foundFormNo[annotIdx] = _.isPlainObject(foundFormNo[annotIdx]) ? foundFormNo[annotIdx] : {};\n          count = _.size(result);\n          foundFormNo[annotIdx]['low'] = count;\n          foundFormNo[annotIdx]['high'] = count + _.size(ancodes[form_no]) - 1;\n        }\n\n        _.forEach(ancodes[form_no], ancode => result.push([word, ancode]));\n      }\n    });\n\n    return {\n      foundFormNo,\n      forms: result\n    };\n  }\n\n  decodeAnnot (annotsRaw, withBase) {\n    if (php.var.is_array(annotsRaw)) {\n      return annotsRaw;\n    }\n\n    return this.annot_decoder.decode(annotsRaw, withBase);\n  }\n\n}\n\nclass Morphy_WordForm {\n\n  static compareGrammems (a, b) {\n    return _.size(a) == _.size(b) && _.size(php.array.array_diff(a, b)) == 0;\n  }\n\n  constructor (word, form_no, pos_id, grammems) {\n    grammems = _.values(grammems);\n\n    this.word = word + '';\n    this.form_no = parseInt(form_no, 10);\n    this.pos_id = pos_id;\n    this.grammems = grammems.length\n      ? _.sortBy(grammems, _.isNumber(grammems[0]) ? _.toInteger : JSON.stringify)\n      : grammems\n    ;\n  }\n\n  getPartOfSpeech () {\n    return this.pos_id;\n  }\n\n  getGrammems () {\n    return this.grammems;\n  }\n\n  hasGrammems (grammems) {\n    grammems = (!_.isArray(grammems)) ? [grammems] : grammems;\n    const grammes_count = _.size(grammems);\n\n    return grammes_count && _.size(php.array.array_intersect(grammems, this.grammems)) == grammes_count;\n  }\n\n  getWord () {\n    return this.word;\n  }\n\n  getFormNo () {\n    return this.form_no;\n  }\n\n}\n\nclass Morphy_WordDescriptor extends Array {\n\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Classes#Species\n  static get [Symbol.species]() { return Array; }\n\n  /**\n   * @param word\n   * @param annot\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (word, annot, helper) {\n    super();\n    \n    this.word = word;\n    this.annot = [annot];\n    this.helper = helper;\n    this.cached_base = null;\n    this.cached_forms = null;\n    this.found_form_no = null;\n    this.all_forms_readed = false;\n    this.cached_pseudo_root = null;\n    this.common_ancode_grammems = null;\n\n    this.readAllForms();\n  }\n\n  getPseudoRoot () {\n    if (!php.var.isset(this.cached_pseudo_root)) {\n      this.cached_pseudo_root = this.helper.getPseudoRoot(this.word, this.annot)[0];\n    }\n\n    return this.cached_pseudo_root;\n  }\n\n  getBaseForm () {\n    if (!php.var.isset(this.cached_base)) {\n      this.cached_base = this.helper.getBaseForm(this.word, this.annot)[0];\n    }\n\n    return this.cached_base;\n  }\n\n  getAllForms () {\n    if (!php.var.isset(this.cached_forms)) {\n      this.cached_forms = this.helper.getAllForms(this.word, this.annot);\n    }\n\n    return this.cached_forms;\n  }\n\n  getWordForm (index) {\n    this.readAllForms();\n\n    return this.slice(index, index + 1)[0];\n  }\n\n  createWordForm (word, form_no, ancode) {\n    let common_ancode;\n    let grammemsAndPartOfSpeech;\n    let pos_id;\n    let all_grammems;\n\n    if (!php.var.isset(this.common_ancode_grammems)) {\n      common_ancode = this.annot[0]['common_ancode'];\n\n      this.common_ancode_grammems = php.var.isset(common_ancode)\n        ? this.helper.getGrammems(common_ancode)\n        : {};\n    }\n\n    grammemsAndPartOfSpeech = this.helper.getGrammemsAndPartOfSpeech(ancode);\n    pos_id = grammemsAndPartOfSpeech[0];\n    all_grammems = grammemsAndPartOfSpeech[1];\n\n    return new Morphy_WordForm(word, form_no, pos_id, php.array.array_merge(this.common_ancode_grammems, all_grammems));\n  }\n\n  readAllForms () {\n    const forms = [];\n    let form_no = 0;\n    let formsWithAncodes;\n\n    if (!this.all_forms_readed) {\n      formsWithAncodes = this.helper.getAllFormsWithAncodes(this.word, this.annot);\n\n      _.forEach(formsWithAncodes.forms, form => {\n        forms.push(this.createWordForm(form[0], form_no, form[1]));\n        form_no++;\n      });\n\n      this.found_form_no = formsWithAncodes.foundFormNo[0];\n\n      this.splice(0, this.length);\n      _.forEach(forms, form => this.push(form));\n\n      this.all_forms_readed = true;\n    }\n\n    return this;\n  }\n\n  getFoundFormNoLow () {\n    this.readAllForms();\n\n    return this.found_form_no['low'];\n  }\n\n  getFoundFormNoHigh () {\n    this.readAllForms();\n\n    return this.found_form_no['high'];\n  }\n\n  getFoundWordForm () {\n    const result = [];\n    for (let i = this.getFoundFormNoLow(), c = this.getFoundFormNoHigh() + 1; i < c; i++) {\n      result.push(this.getWordForm(i));\n    }\n\n    return result;\n  }\n\n  hasGrammems (grammems) {\n    grammems = castArray(grammems);\n\n    return _.some(this, wf => wf.hasGrammems(grammems));\n  }\n\n  getWordFormsByGrammems (grammems) {\n    grammems = castArray(grammems);\n    const result = [];\n\n    _.forEach(this, wf => {\n      if (wf.hasGrammems(grammems)) {\n        result.push(wf);\n      }\n    });\n\n    return result;\n    //return count(result) ? result : false;\n  }\n\n  hasPartOfSpeech (poses) {\n    poses = castArray(poses);\n\n    return _.some(this, wf => {\n      return poses.indexOf(wf.getPartOfSpeech()) >= 0;\n      // return poses.includes(wf.getPartOfSpeech());\n    });\n  }\n\n  getWordFormsByPartOfSpeech (poses) {\n    poses = castArray(poses);\n    const result = [];\n\n    _.forEach(this, wf => {\n      if (poses.indexOf(wf.getPartOfSpeech()) >= 0) {\n      // if (poses.includes(wf.getPartOfSpeech())) {\n        result.push(wf);\n      }\n    });\n\n    return result;\n    //return count(result) ? result : false;\n  }\n\n}\n\n// ----------------------------\n// Finders\n// ----------------------------\nclass Morphy_Morphier_Finder_Interface {\n\n  findWord (word) {}\n\n  decodeAnnot (raw, withBase) {}\n\n  getAnnotDecoder () {}\n\n}\n\nclass Morphy_Morphier_Finder_Base extends Morphy_Morphier_Finder_Interface {\n\n  /**\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\n   */\n  constructor (annotDecoder) {\n    super();\n    this.annot_decoder = annotDecoder;\n    this.prev_word = null;\n    this.prev_result = false;\n  }\n\n  findWord (word) {\n    if (this.prev_word === word) {\n      return this.prev_result;\n    }\n\n    const result = this.doFindWord(word);\n\n    this.prev_word = word;\n    this.prev_result = result;\n\n    return result;\n  }\n\n  getAnnotDecoder () {\n    return this.annot_decoder;\n  }\n\n  decodeAnnot (raw, withBase) {\n    return this.annot_decoder.decode(raw, withBase);\n  }\n\n  doFindWord (word) {}\n\n}\n\nclass Morphy_Morphier_Finder_Common extends Morphy_Morphier_Finder_Base {\n  \n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\n   */\n  constructor (fsa, annotDecoder) {\n    super(annotDecoder);\n\n    this.fsa = fsa;\n    this.root = this.fsa.getRootTrans();\n  }\n\n  getFsa () {\n    return this.fsa;\n  }\n\n  doFindWord (word) {\n    const result = this.fsa.walk(this.root, word);\n\n    if (!result['result'] || result['annot'] === null) {\n      return false;\n    }\n\n    return result['annot'];\n  }\n\n}\n\nclass Morphy_Morphier_Finder_Predict_Suffix extends Morphy_Morphier_Finder_Common {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\n   * @param {string} encoding\n   * @param {number} [minimalSuffixLength=4]\n   */\n  constructor (fsa, annotDecoder, encoding, minimalSuffixLength = 4) {\n    super(fsa, annotDecoder);\n\n    this.min_suf_len = minimalSuffixLength;\n    this.unicode = Morphy_UnicodeHelper.create(encoding);\n  }\n\n  doFindWord (word) {\n    const word_len = this.unicode.strlen(word);\n    let result;\n\n    if (!word_len) {\n      return false;\n    }\n  \n    let i = 1;\n    let c = word_len - this.min_suf_len;\n    for (; i < c; i++) {\n      word = php.strings.substr(word, this.unicode.firstCharSize(word));\n      result = super.doFindWord(word);\n\n      if (result !== false) {\n        break;\n      }\n    }\n\n    if (i < c) {\n      return result;\n    }\n\n    return false;\n  }\n\n  fixAnnots (annots, len) {\n    _.forEach(annots, annot => annot['cplen'] = len);\n\n    return annots;\n  }\n\n}\n\nclass Morphy_Morphier_PredictCollector extends Morphy_Fsa_WordsCollector {\n\n  /**\n   * @param {*} limit\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\n   */\n  constructor (limit, annotDecoder) {\n    super(limit);\n  \n    this.collected = 0;\n    this.used_poses = {};\n    this.annot_decoder = annotDecoder;\n  }\n\n  collect (path, annotRaw) {\n    if (this.collected > this.limit) {\n      return false;\n    }\n\n    const annots = this.decodeAnnot(annotRaw);\n    let pos_id;\n    let result_idx;\n    let nextItemsIndex;\n    let itemsSize;\n\n    _.forEach(annots, annot => {\n      annot['cplen'] = annot['plen'] = 0;\n      pos_id = annot['pos_id'];\n\n      if (php.var.isset(this.used_poses[pos_id])) {\n        result_idx = this.used_poses[pos_id];\n\n        if (annot['freq'] > this.items[result_idx]['freq']) {\n          this.items[result_idx] = annot;\n        }\n      } else {\n        itemsSize = _.size(this.items);\n        this.used_poses[pos_id] = itemsSize;\n        // оригинал:\n        // $this->items[] = annot;\n        nextItemsIndex = (itemsSize) ? _.max(_.keys(this.items)) : -1;\n\n        this.items[parseInt(nextItemsIndex, 10) + 1] = annot;\n      }\n    });\n\n    this.collected++;\n\n    return true;\n  }\n\n  clear () {\n    super.clear();\n    this.collected = 0;\n    this.used_poses = {};\n  }\n\n  decodeAnnot (annotRaw) {\n    return this.annot_decoder.decode(annotRaw, true);\n  }\n\n}\n\nclass Morphy_Morphier_Finder_Predict_Database extends Morphy_Morphier_Finder_Common {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_AnnotDecoder_Interface} annotDecoder\n   * @param {string} encoding\n   * @param {Morphy_GramInfo_Interface} graminfo\n   * @param {number} [minPostfixMatch=2]\n   * @param {number} [collectLimit=32]\n   */\n  constructor (fsa, annotDecoder, encoding, graminfo, minPostfixMatch = 2, collectLimit = 32) {\n    super(fsa, annotDecoder);\n\n    this.graminfo = graminfo;\n    this.min_postfix_match = minPostfixMatch;\n    this.collector = this.createCollector(collectLimit, this.getAnnotDecoder());\n    this.unicode = Morphy_UnicodeHelper.create(encoding);\n  }\n\n  createAnnotDecoder () {\n    // todo: какая-то херня\n    //return phpmorphy_annot_decoder_new('predict');\n    return Morphy_AnnotDecoder_Factory.create('predict');\n  }\n\n  doFindWord (word) {\n    word = toBuffer(word);\n\n    const rev_word = this.unicode.strrev(word);\n    const result = this.fsa.walk(this.root, rev_word);\n    let annots;\n    let match_len;\n\n    if (result['result'] && null !== result['annot']) {\n      annots = result['annot'];\n    } else {\n      match_len = this.unicode.strlen(this.unicode.fixTrailing(rev_word.slice(0, result['walked'])));\n      annots = this.determineAnnots(result['last_trans'], match_len);\n\n      if (annots === null) {\n        return false;\n      }\n    }\n\n    if (!php.var.is_array(annots)) {\n      annots = this.collector.decodeAnnot(annots);\n    }\n\n    return this.fixAnnots(word, annots);\n  }\n\n  determineAnnots (trans, matchLen) {\n    let annots = this.fsa.getAnnot(trans);\n    if (annots == null && matchLen >= this.min_postfix_match) {\n      this.collector.clear();\n      this.fsa.collect(trans, this.collector.getCallback());\n      annots = this.collector.getItems();\n    }\n\n    return annots;\n  }\n\n  fixAnnots (word, annots) {\n    word = toBuffer(word);\n\n    const result = [];\n    let flexias;\n    let prefix;\n    let suffix;\n    let plen;\n    let slen;\n\n    // remove all prefixes?\n    _.forEach(annots, annot => {\n      annot['cplen'] = annot['plen'] = 0;\n      flexias = this.graminfo.readFlexiaData(annot, false);\n      prefix = Buffer.from(flexias[annot['form_no'] * 2]);\n      suffix = Buffer.from(flexias[annot['form_no'] * 2 + 1]);\n\n      plen = prefix.length;\n      slen = suffix.length;\n      \n      const partOfWordInPlaceOfPrefix = php.strings.substr(word, 0, plen);\n      const partOfWordInPlaceOfSuffix = php.strings.substr(word,   -slen);\n      \n      if (\n        (!plen || (partOfWordInPlaceOfPrefix && partOfWordInPlaceOfPrefix.equals(prefix))) &&\n        (!slen || (partOfWordInPlaceOfSuffix && partOfWordInPlaceOfSuffix.equals(suffix)))\n      ) {\n        result.push(annot);\n      }\n    });\n\n    return _.size(result) ? result : false;\n  }\n\n  createCollector (limit) {\n    return new Morphy_Morphier_PredictCollector(limit, this.getAnnotDecoder());\n  }\n\n}\n\n// ----------------------------\n// Morphiers\n// ----------------------------\nclass Morphy_Morphier_Base extends Morphy_Morphier_Interface {\n\n  /**\n   * @param {Morphy_Morphier_Finder_Interface} finder\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (finder, helper) {\n    super();\n    this.finder = finder;\n    this.helper = _.cloneDeep(helper);\n    this.helper.setAnnotDecoder(finder.getAnnotDecoder());\n  }\n\n  /**\n   * @return Morphy_Morphier_Finder_Interface\n   */\n  getFinder () {\n    return this.finder;\n  }\n\n  /**\n   * @return Morphy_Morphier_Helper\n   */\n  getHelper () {\n    return this.helper;\n  }\n\n  getAnnot (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.decodeAnnot(annots, true);\n  }\n\n  getWordDescriptor (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getWordDescriptor(word, annots);\n  }\n\n  getAllFormsWithAncodes (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n    \n    return this.helper.getAllFormsWithResolvedAncodes(word, annots);\n  }\n\n  getPartOfSpeech (word) {\n    const annots = this.finder.findWord(word);\n    if (annots == false) {\n      return false;\n    }\n\n    return this.helper.getPartOfSpeech(word, annots);\n  }\n\n  getBaseForm (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getBaseForm(word, annots);\n  }\n\n  getPseudoRoot (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getPseudoRoot(word, annots);\n  }\n\n  getAllForms (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getAllForms(word, annots);\n  }\n\n  getAncode (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getAncode(annots);\n  }\n\n  getGrammarInfo (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getGrammarInfo(annots);\n  }\n\n  getGrammarInfoMergeForms (word) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.getGrammarInfoMergeForms(annots);\n  }\n\n  /**\n   * @param word\n   * @param partOfSpeech\n   * @param grammems\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=null]\n   * @returns {boolean}\n   */\n  castFormByGramInfo (word, partOfSpeech, grammems, returnOnlyWord = false, callback = null) {\n    const annots = this.finder.findWord(word);\n    if (annots === false) {\n      return false;\n    }\n\n    return this.helper.castFormByGramInfo(word, annots);\n  }\n\n  /**\n   * @param word\n   * @param patternWord\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=null]\n   * @returns {boolean}\n   */\n  castFormByPattern (word, patternWord, returnOnlyWord = false, callback = null) {\n    const orig_annots = this.finder.findWord(word);\n    if (orig_annots === false) {\n      return false;\n    }\n\n    const pattern_annots = this.finder.findWord(patternWord);\n    if (pattern_annots === false) {\n      return false;\n    }\n\n    return this.helper.castFormByPattern(word, orig_annots, patternWord, pattern_annots, returnOnlyWord, callback);\n  }\n\n}\n\nclass Morphy_Morphier_Common extends Morphy_Morphier_Base {\n  \n  /**\n   * @param {Morphy_Morphier_Helper} helper\n   * @returns {Morphy_AnnotDecoder_Interface}\n   */\n  static createAnnotDecoder (helper) {\n    return Morphy_AnnotDecoder_Factory.create(helper.getGramInfo().getEnds()).getCommonDecoder();\n  }\n  \n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (fsa, helper) {\n    super(new Morphy_Morphier_Finder_Common(fsa, Morphy_Morphier_Common.createAnnotDecoder(helper)), helper);\n  }\n\n}\n\nclass Morphy_Morphier_Predict_Suffix extends Morphy_Morphier_Base {\n  \n  /**\n   * @param {Morphy_Morphier_Helper} helper\n   * @returns {Morphy_AnnotDecoder_Interface}\n   */\n  static createAnnotDecoder (helper) {\n    return Morphy_AnnotDecoder_Factory.create(helper.getGramInfo().getEnds()).getCommonDecoder();\n  }\n  \n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (fsa, helper) {\n    super(\n      new Morphy_Morphier_Finder_Predict_Suffix(\n        fsa,\n        Morphy_Morphier_Predict_Suffix.createAnnotDecoder(helper),\n        helper.getGramInfo().getEncoding(),\n        4\n      ),\n      helper\n    );\n  }\n\n}\n\nclass Morphy_Morphier_Predict_Database extends Morphy_Morphier_Base {\n  \n  /**\n   * @param {Morphy_Morphier_Helper} helper\n   * @returns {Morphy_AnnotDecoder_Interface}\n   */\n  static createAnnotDecoder (helper) {\n    return Morphy_AnnotDecoder_Factory.create(helper.getGramInfo().getEnds()).getPredictDecoder();\n  }\n  \n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (fsa, helper) {\n    super(\n      new Morphy_Morphier_Finder_Predict_Database(\n        fsa,\n        Morphy_Morphier_Predict_Database.createAnnotDecoder(helper),\n        helper.getGramInfo().getEncoding(),\n        helper.getGramInfo(),\n        2,\n        32\n      ),\n      helper\n    );\n  }\n\n}\n\nclass Morphy_Morphier_Bulk extends Morphy_Morphier_Interface {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  constructor (fsa, helper) {\n    super();\n    \n    this.fsa = fsa;\n    this.root_trans = fsa.getRootTrans();\n    this.helper = _.cloneDeep(helper);\n    this.helper.setAnnotDecoder(this.createAnnotDecoder(helper));\n    this.graminfo = helper.getGramInfo();\n    this.notfound = [];\n  }\n\n  getFsa () {\n    return this.fsa;\n  }\n\n  getHelper () {\n    return this.helper;\n  }\n\n  getGraminfo () {\n    return this.graminfo;\n  }\n\n  getNotFoundWords () {\n    return this.notfound;\n  }\n\n  /**\n   * @param {Morphy_Morphier_Helper} helper\n   * @returns {*}\n   */\n  createAnnotDecoder (helper) {\n    return new Morphy_AnnotDecoder_Common(helper.getGramInfo().getEnds());\n  }\n\n  getAnnot (word) {\n    const result = {};\n\n    _.forEach(this.findWord(word), item => {\n      const words = item.data;\n      let annot = item.annots;\n      annot = this.helper.decodeAnnot(annot, true);\n      \n      _.forEach(words, word => {\n        result[word] = result[word] || [];\n        result[word].push(annot);\n      });\n    });\n\n    return result;\n  }\n\n  getBaseForm (words) {\n    const annots = this.findWord(words);\n\n    return this.composeForms(annots, true, false, false);\n  }\n\n  getAllForms (words) {\n    const annots = this.findWord(words);\n\n    return this.composeForms(annots, false, false, false);\n  }\n\n  getPseudoRoot (words) {\n    const annots = this.findWord(words);\n\n    return this.composeForms(annots, false, true, false);\n  }\n\n  getPartOfSpeech (words) {\n    const annots = this.findWord(words);\n\n    return this.composeForms(annots, false, false, true);\n  }\n\n  /**\n   * @param words\n   * @param method\n   * @param {boolean} [callWithWord=false]\n   * @returns {*}\n   */\n  processAnnotsWithHelper (words, method, callWithWord = false) {\n    const result = {};\n    let annot_raw;\n    let result_for_annot;\n\n    _.forEach(this.findWord(words), item => {\n      words = item.data;\n      annot_raw = item.annots;\n\n      if (annot_raw.length == 0) {\n        return;\n      }\n\n      if (callWithWord) {\n        _.forEach(words, word => result[word] = this.helper[method](word, annot_raw));\n      } else {\n        result_for_annot = this.helper[method](annot_raw);\n        _.forEach(words, word => result[word] = result_for_annot);\n      }\n    });\n\n    return result;\n  }\n\n  getAncode (words) {\n    return this.processAnnotsWithHelper(words, 'getAncode');\n  }\n\n  getGrammarInfoMergeForms (words) {\n    return this.processAnnotsWithHelper(words, 'getGrammarInfoMergeForms');\n  }\n\n  getGrammarInfo (words) {\n    return this.processAnnotsWithHelper(words, 'getGrammarInfo');\n  }\n\n  getAllFormsWithAncodes (words) {\n    return this.processAnnotsWithHelper(words, 'getAllFormsWithResolvedAncodes', true);\n  }\n\n  getWordDescriptor (words) {\n    return this.processAnnotsWithHelper(words, 'getWordDescriptor', true);\n  }\n\n  findWord (words) {\n    this.notfound = [];\n\n    const patriciaTrie = this.buildPatriciaTrie(words);\n    const labels = patriciaTrie[0];\n    const finals = patriciaTrie[1];\n    const dests = patriciaTrie[2];\n    const annots = {};\n    const stack = [0, Buffer.from(''), this.root_trans];\n    const fsa = this.fsa;\n    \n    let n;\n    let path;\n    let trans;\n    let label;\n    let result;\n    let is_final;\n    let stack_idx = 0;\n\n    // TODO: Improve this\n    while (stack_idx >= 0) {\n      n = stack[stack_idx];\n      path = Buffer.concat([Buffer.from(stack[stack_idx + 1]), labels[n]]);\n      trans = stack[stack_idx + 2];\n      stack_idx -= 3; // TODO: Remove items from stack? (performance!!!)\n\n      is_final = finals[n] > 0;\n      //is_final = dests[n] === false;\n\n      result = false;\n      if (trans !== false && n > 0) {\n        label = labels[n];\n        result = fsa.walk(trans, label, is_final);\n\n        if (label.length == result['walked']) {\n          trans = result['word_trans'];\n        } else {\n          trans = false;\n        }\n      }\n\n      if (is_final) {\n        if (trans !== false && php.var.isset(result['annot'])) {\n          annots[result['annot']] = annots[result['annot']] || {\n            annots: result['annot'],\n            data: []\n          };\n          annots[result['annot']].data.push(path);\n        } else {\n          this.notfound.push(path);\n        }\n      }\n\n      if (dests[n] !== false) {\n        _.forEach(dests[n], dest => {\n          stack_idx += 3;\n          stack[stack_idx] = dest;\n          stack[stack_idx + 1] = path;\n          stack[stack_idx + 2] = trans;\n        });\n      }\n    }\n\n    return annots;\n  }\n\n  composeForms (annotsRaw, onlyBase, pseudoRoot, partOfSpeech) {\n    const result = {};\n    let key;\n    let annot_raw;\n    let words;\n\n    // process found annotations\n    _.forEach(annotsRaw, item => {\n      words = item.data;\n      annot_raw = item.annots;\n\n      if (annot_raw.length == 0) {\n        return;\n      }\n\n      _.forEach(this.helper.decodeAnnot(annot_raw, onlyBase), annot => {\n        let flexias;\n        let cplen;\n        let plen;\n        let flen;\n        let pos_id;\n\n        if (!(onlyBase || pseudoRoot)) {\n          flexias = this.graminfo.readFlexiaData(annot);\n        }\n\n        cplen = annot['cplen'];\n        plen = annot['plen'];\n        flen = annot['flen'];\n\n        if (partOfSpeech) {\n          pos_id = this.helper.extractPartOfSpeech(annot);\n        }\n\n        _.forEach(words, word => {\n          let base;\n          let prefix;\n          let form;\n\n          if (flen) {\n            base = php.strings.substr(word, cplen + plen, -flen);\n          } else {\n            if (cplen || plen) {\n              base = php.strings.substr(word, cplen + plen);\n            } else {\n              base = word;\n            }\n          }\n\n          prefix = cplen ? php.strings.substr(word, 0, cplen) : '';\n          result[word] = result[word] || {};\n\n          if (pseudoRoot) {\n            result[word][base] = 1;\n          } else\n          if (onlyBase) {\n            form = [\n              prefix,\n              annot['base_prefix'],\n              base,\n              annot['base_suffix']\n            ].join('');\n\n            result[word][form] = 1;\n          } else\n          if (partOfSpeech) {\n            result[word][pos_id] = 1;\n          } else {\n            for (let i = 0, c = _.size(flexias); i < c; i += 2) {\n              form = [\n                prefix,\n                flexias[i],\n                base,\n                flexias[i + 1]\n              ].join('');\n\n              result[word][form] = 1;\n            }\n          }\n        });\n      });\n    });\n  \n    _.keys(result).forEach(key => {\n      result[key] = _.keys(result[key]);\n      \n      if (result[key].length && isStringifyedNumber(result[key][0])) {\n        result[key] = result[key].map(_.toInteger);\n      }\n    });\n    \n    return result;\n  }\n\n  buildPatriciaTrie (words) {\n    if (!php.var.is_array(words)) {\n      throw new Error('Words must be array');\n    }\n\n    //words = php.array.sort(words);\n    words = (words.length && Buffer.isBuffer(words[0])) ? words.sort(Buffer.compare) : words.sort();\n\n    let stack = [];\n    let prev_word = '';\n    let prev_wordBuf = Buffer.alloc(0);\n    let prev_word_len = 0;\n    let prev_lcp = 0;\n    let node = 0;\n\n    const state_labels = [];\n    const state_dests = [];\n    const state_finals = [0];\n\n    state_labels.push(Buffer.from(''));\n    state_dests.push([]);\n\n    _.forEach(words, word => {\n      const wordBuf = Buffer.from(word, 'utf8');\n\n      if (wordBuf.equals(prev_wordBuf)) {\n        return;\n      }\n\n      const word_len = wordBuf.length;\n      let new_state_id;\n      let need_split;\n      let trim_size;\n      let node_key;\n      let new_node_id_1;\n      let new_node_id_2;\n      let new_node_id;\n\n      // find longest common prefix\n      let lcp = 0;\n      let c = Math.min(prev_word_len, word_len);\n      for (; lcp < c && wordBuf[lcp] == prev_wordBuf[lcp]; lcp++) {}\n\n      if (lcp == 0) {\n        stack = [];\n        new_state_id = _.size(state_labels);\n        state_labels.push(wordBuf);\n        state_finals.push(1);\n        state_dests.push(false);\n        state_dests[0].push(new_state_id);\n        node = new_state_id;\n      } else {\n        need_split = true;\n        trim_size = 0; // for split\n\n        if (lcp == prev_lcp) {\n          need_split = false;\n          node = stack[_.size(stack) - 1];\n        } else\n        if (lcp > prev_lcp) {\n          if (lcp == prev_word_len) {\n            need_split = false;\n          } else {\n            need_split = true;\n            trim_size = lcp - prev_lcp;\n          }\n\n          stack.push(node);\n        } else {\n          trim_size = prev_wordBuf.length - lcp;\n  \n          let stack_size = _.size(stack) - 1;\n          for (;; --stack_size) {\n            trim_size -= state_labels[node].length;\n\n            if (trim_size <= 0) {\n              break;\n            }\n\n            if (_.size(stack) < 1) {\n              throw new Error('Infinite loop possible');\n            }\n\n            node = stack.pop();\n          }\n\n          need_split = trim_size < 0;\n          trim_size = Math.abs(trim_size);\n\n          if (need_split) {\n            stack.push(node);\n          } else {\n            node = stack[stack_size];\n          }\n        }\n\n        let node_key_buf;\n\n        if (need_split) {\n          node_key = state_labels[node];\n          node_key_buf = Buffer.from(node_key);\n\n          // split\n          new_node_id_1 = _.size(state_labels);\n          new_node_id_2 = new_node_id_1 + 1;\n\n          // new_node_1\n          state_labels.push(php.strings.substr(node_key_buf, trim_size));\n          state_finals.push(state_finals[node]);\n          state_dests.push(state_dests[node]);\n\n          // adjust old node\n          state_labels[node] = php.strings.substr(node_key_buf, 0, trim_size);\n          state_finals[node] = 0;\n          state_dests[node] = [new_node_id_1];\n\n          // append new node, new_node_2\n          state_labels.push(php.strings.substr(wordBuf, lcp));\n          state_finals.push(1);\n          state_dests.push(false);\n\n          state_dests[node].push(new_node_id_2);\n\n          node = new_node_id_2;\n        } else {\n          new_node_id = _.size(state_labels);\n\n          state_labels.push(php.strings.substr(wordBuf, lcp));\n          state_finals.push(1);\n          state_dests.push(false);\n\n          if (state_dests[node] !== false) {\n            state_dests[node].push(new_node_id);\n          } else {\n            state_dests[node] = [new_node_id];\n          }\n\n          node = new_node_id;\n        }\n      }\n\n      prev_word = word;\n      prev_word_len = word_len;\n      prev_wordBuf = wordBuf;\n      prev_lcp = lcp;\n    });\n\n    return [state_labels, state_finals.join(''), state_dests];\n  }\n\n}\n\nexport {\n  Morphy_Morphier_Interface,\n  Morphy_Morphier_Empty,\n  Morphy_AnnotDecoder_Interface,\n  Morphy_AnnotDecoder_Base,\n  Morphy_AnnotDecoder_Common,\n  Morphy_AnnotDecoder_Predict,\n  Morphy_AnnotDecoder_Factory,\n  Morphy_AncodesResolver_Interface,\n  Morphy_AncodesResolver_ToText,\n  Morphy_AncodesResolver_ToDialingAncodes,\n  Morphy_AncodesResolver_AsIs,\n  Morphy_AncodesResolver_Proxy,\n  Morphy_WordDescriptor_Collection,\n  Morphy_Morphier_Helper,\n  Morphy_WordForm,\n  Morphy_WordDescriptor,\n  Morphy_Morphier_Finder_Interface,\n  Morphy_Morphier_Finder_Base,\n  Morphy_Morphier_Finder_Common,\n  Morphy_Morphier_Finder_Predict_Suffix,\n  Morphy_Morphier_PredictCollector,\n  Morphy_Morphier_Finder_Predict_Database,\n  Morphy_Morphier_Base,\n  Morphy_Morphier_Common,\n  Morphy_Morphier_Predict_Suffix,\n  Morphy_Morphier_Predict_Database,\n  Morphy_Morphier_Bulk,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/morphiers.js","module.exports = require(\"encoding\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"encoding\"\n// module id = 16\n// module chunks = 0 1","import 'babel-polyfill';\nimport _ from 'lodash';\nimport path from 'path';\nimport phpMorphy, {\n  STORAGE_FILE,\n  STORAGE_MEM,\n  SOURCE_FSA,\n  RESOLVE_ANCODES_AS_TEXT,\n  RESOLVE_ANCODES_AS_DIALING,\n  RESOLVE_ANCODES_AS_INT,\n  NORMAL,\n  IGNORE_PREDICT,\n  ONLY_PREDICT,\n  PREDICT_BY_NONE,\n  PREDICT_BY_SUFFIX,\n  PREDICT_BY_DB\n} from './lib/common';\n\nconst defaults = {\n  dir:                 path.join(__dirname, '..', 'dicts'),\n  storage:             STORAGE_MEM,\n  predict_by_suffix:   true,\n  predict_by_db:       true,\n  graminfo_as_text:    true,\n  use_ancodes_cache:   false,\n  resolve_ancodes:     RESOLVE_ANCODES_AS_TEXT\n};\n\nclass Morphy {\n  \n  static get STORAGE_FILE () { return STORAGE_FILE; }\n  static get STORAGE_MEM () { return STORAGE_MEM; }\n  static get SOURCE_FSA () { return SOURCE_FSA; }\n  static get RESOLVE_ANCODES_AS_TEXT () { return RESOLVE_ANCODES_AS_TEXT; }\n  static get RESOLVE_ANCODES_AS_DIALING () { return RESOLVE_ANCODES_AS_DIALING; }\n  static get RESOLVE_ANCODES_AS_INT () { return RESOLVE_ANCODES_AS_INT; }\n  static get NORMAL () { return NORMAL; }\n  static get IGNORE_PREDICT () { return IGNORE_PREDICT; }\n  static get ONLY_PREDICT () { return ONLY_PREDICT; }\n  static get PREDICT_BY_NONE () { return PREDICT_BY_NONE; }\n  static get PREDICT_BY_SUFFIX () { return PREDICT_BY_SUFFIX; }\n  static get PREDICT_BY_DB () { return PREDICT_BY_DB; }\n\n  /**\n   * @param {string|{}} lang\n   * @param {{}} [opts]\n   */\n  constructor (lang, opts = {}) {\n    if (_.isPlainObject(lang)) {\n      opts = lang;\n    } else {\n      opts.lang = lang;\n    }\n  \n    opts = Object.assign({}, defaults, opts);\n  \n    switch (opts.lang.toLowerCase()) {\n      case 'de':\n      case 'de_de':\n        opts.lang = 'de_DE';\n        break;\n      case 'en':\n      case 'en_en':\n        opts.lang = 'en_EN';\n        break;\n      case 'et':\n      case 'ee':\n      case 'et_ee':\n        opts.lang = 'et_EE';\n        break;\n      case 'ua':\n      case 'uk':\n      case 'uk_ua':\n        opts.lang = 'uk_UA';\n        break;\n      case 'ru':\n      case 'ru_ru':\n      default:\n        opts.lang = 'ru_RU';\n        break;\n    }\n    \n    this.lang = opts.lang;\n    this.dir = opts.dir;\n    this.options = opts;\n    \n    if (this.options.lang != 'ru_RU') {\n      this.options.use_ancodes_cache = false;\n    }\n    \n    this.morpher = new phpMorphy(this.dir, this.lang, this.options);\n  }\n\n  // wordConvertor (word) {\n  //   let encoding = null;\n  //\n  //   word = word.toUpperCase();\n  //   if (this.options.detectEncoding && !this.options.encoding) {\n  //     encoding = detectEncoding(word);\n  //   } else\n  //   if (this.options.encoding) {\n  //     encoding = this.options.encoding;\n  //   }\n  //\n  //   if (encoding) {\n  //     word = encoding.convert(toBuffer(word, encoding), this.morpher.getEncoding(), encoding);\n  //   }\n  //\n  //   return word;\n  // }\n\n  /**\n   * @param {string|Buffer} word\n   * @param {boolean} [asBuffer=false]\n   * @returns {*}\n   */\n  prepareWord (word, asBuffer = false) {\n    if (_.isArray(word)) {\n      return _.map(word, word => this.prepareWord(word));\n    }\n  \n    if (Buffer.isBuffer(word)) {\n      word = word.toString(this.morpher.getEncoding());\n    }\n  \n    word = word.toUpperCase();\n  \n    return (asBuffer) ? Buffer.from(word, this.morpher.getEncoding()) : word;\n  }\n\n  /**\n   * @returns {Morphy_Morphier_Interface}\n   */\n  getCommonMorphier () {\n    return this.morpher.getCommonMorphier();\n  }\n\n  /**\n   * @returns {Morphy_Morphier_Interface}\n   */\n  getPredictBySuffixMorphier () {\n    return this.morpher.getPredictBySuffixMorphier();\n  }\n\n  /**\n   * @returns {Morphy_Morphier_Interface}\n   */\n  getPredictByDatabaseMorphier () {\n    return this.morpher.getPredictByDatabaseMorphier();\n  }\n\n  /**\n   * @returns {Morphy_Morphier_Bulk}\n   */\n  getBulkMorphier () {\n    return this.morpher.getBulkMorphier();\n  }\n\n  /**\n   * @returns {string}\n   */\n  getEncoding () {\n    return this.morpher.getEncoding();\n  }\n\n  /**\n   * @returns {string}\n   */\n  getLocale () {\n    return this.morpher.getLocale();\n  }\n\n  /**\n   * @returns {Morphy_GrammemsProvider_Base}\n   */\n  getGrammemsProvider () {\n    return this.morpher.getGrammemsProvider();\n  }\n\n  /**\n   * @returns {Morphy_GrammemsProvider_Base}\n   */\n  getDefaultGrammemsProvider () {\n    return this.morpher.getDefaultGrammemsProvider();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isLastPredicted () {\n    return this.morpher.isLastPredicted();\n  }\n\n  /**\n   * @returns {string}\n   */\n  getLastPredictionType () {\n    return this.morpher.getLastPredictionType();\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {Morphy_WordDescriptor_Collection}\n   */\n  findWord (word, type = Morphy.NORMAL) {\n    return this.morpher.findWord(this.prepareWord(word), type);\n  }\n\n  /**\n   * Alias for getBaseForm\n   *\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  lemmatize (word, type = Morphy.NORMAL) {\n    return this.morpher.lemmatize(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getBaseForm (word, type = Morphy.NORMAL) {\n    return this.morpher.getBaseForm(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getAllForms (word, type = Morphy.NORMAL) {\n    return this.morpher.getAllForms(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getPseudoRoot (word, type = Morphy.NORMAL) {\n    return this.morpher.getPseudoRoot(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getPartOfSpeech (word, type = Morphy.NORMAL) {\n    return this.morpher.getPartOfSpeech(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getAllFormsWithAncodes (word, type = Morphy.NORMAL) {\n    return this.morpher.getAllFormsWithAncodes(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {boolean} [asText=true] - represent graminfo as text or ancodes\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {*}\n   */\n  getAllFormsWithGramInfo (word, asText = true, type = Morphy.NORMAL) {\n    return this.morpher.getAllFormsWithGramInfo(this.prepareWord(word), asText, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getAncode (word, type) {\n    return this.morpher.getAncode(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getGramInfo (word, type = Morphy.NORMAL) {\n    return this.morpher.getGramInfo(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getGramInfoMergeForms (word, type) {\n    return this.morpher.getGramInfoMergeForms(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param [type=Morphy.NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getAnnotForWord (word, type = Morphy.NORMAL) {\n    return this.morpher.getAnnotForWord(this.prepareWord(word), type);\n  }\n\n  /**\n   * @param {string} word\n   * @param {*} ancode\n   * @param {*} [commonAncode=null]\n   * @param {boolean} [returnOnlyWord]\n   * @param {*} [callback=null]\n   * @param {*} [type=Morphy]\n   * @returns {[]}\n   */\n  castFormByAncode (word, ancode, commonAncode = null, returnOnlyWord = false, callback = null, type = Morphy.NORMAL) {\n    return this.morpher.castFormByAncode(\n      this.prepareWord(word),\n      ancode,\n      commonAncode,\n      returnOnlyWord,\n      callback,\n      type\n    );\n  }\n\n  /**\n   * @param {string|Buffer} word\n   * @param {*} partOfSpeech\n   * @param {[]} grammems\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=null]\n   * @param {*} [type=Morphy.NORMAL]\n   * @returns {[]|boolean}\n   */\n  castFormByGramInfo (word, partOfSpeech, grammems, returnOnlyWord = false, callback = null, type = Morphy.NORMAL) {\n    return this.morpher.castFormByGramInfo(\n      this.prepareWord(word),\n      partOfSpeech,\n      grammems,\n      returnOnlyWord,\n      callback,\n      type\n    );\n  }\n\n  /**\n   * @param {string} word\n   * @param {string} patternWord\n   * @param {Morphy_GrammemsProvider_Interface} [grammemsProvider=null]\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=false]\n   * @param {*} [type=Morphy.NORMAL]\n   * @returns {[]|boolean}\n   */\n  castFormByPattern (word, patternWord, grammemsProvider = null, returnOnlyWord = false, callback = null, type = Morphy.NORMAL) {\n    return this.morpher.castFormByPattern(\n      this.prepareWord(word),\n      this.prepareWord(patternWord),\n      grammemsProvider,\n      returnOnlyWord,\n      callback,\n      type\n    );\n  }\n\n}\n\nexport default Morphy;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport path from 'path';\nimport { php, toBuffer } from '../utils';\nimport { Morphy_Fsa } from './fsa/fsa';\nimport { Morphy_Source_Fsa } from './source';\nimport { Morphy_GramTab_Proxy } from './gramtab';\nimport { Morphy_Storage_Factory } from './storage';\nimport {\n  Morphy_GrammemsProvider_Factory,\n  Morphy_GrammemsProvider_Interface\n} from './langs_stuff/common';\nimport {\n  Morphy_GramInfo_RuntimeCaching,\n  Morphy_GramInfo_Proxy_WithHeader,\n  Morphy_GramInfo_AncodeCache\n} from './graminfo/graminfo';\nimport {\n  Morphy_AncodesResolver_Proxy,\n  Morphy_Morphier_Helper,\n  Morphy_Morphier_Common,\n  Morphy_Morphier_Bulk,\n  Morphy_Morphier_Predict_Database,\n  Morphy_Morphier_Empty,\n  Morphy_Morphier_Predict_Suffix\n} from './morphiers';\nimport {\n  STORAGE_FILE,\n  STORAGE_MEM,\n  SOURCE_FSA,\n  RESOLVE_ANCODES_AS_TEXT,\n  RESOLVE_ANCODES_AS_DIALING,\n  RESOLVE_ANCODES_AS_INT,\n  NORMAL,\n  IGNORE_PREDICT,\n  ONLY_PREDICT,\n  PREDICT_BY_NONE,\n  PREDICT_BY_SUFFIX,\n  PREDICT_BY_DB\n} from './constants';\n\nclass Morphy_FilesBundle {\n\n  constructor (dirName, lang) {\n    this.dir = dirName;\n    this.setLang(lang);\n  }\n\n  getLang () {\n    return this.lang;\n  }\n\n  setLang (lang) {\n    this.lang = lang.toLowerCase();\n  }\n\n  getCommonAutomatFile () {\n    return this.genFileName('common_aut');\n  }\n\n  getPredictAutomatFile () {\n    return this.genFileName('predict_aut');\n  }\n\n  getGramInfoFile () {\n    return this.genFileName('morph_data');\n  }\n\n  getGramInfoAncodesCacheFile () {\n    return this.genFileName('morph_data_ancodes_cache');\n  }\n\n  getAncodesMapFile () {\n    return this.genFileName('morph_data_ancodes_map');\n  }\n\n  getGramTabFile () {\n    return this.genFileName('gramtab');\n  }\n\n  getGramTabFileWithTextIds () {\n    return this.genFileName('gramtab_txt');\n  }\n\n  getGramInfoHeaderCacheFile () {\n    return this.genFileName('morph_data_header_cache');\n  }\n\n  genFileName (token, extraExt) {\n    extraExt = (!_.isUndefined(extraExt)) ? extraExt : null;\n    \n    return path.join(this.dir, [\n      token,\n      '.',\n      this.lang,\n      (php.var.isset(extraExt) ? '.' + extraExt : ''),\n      '.bin'\n    ].join(''));\n  }\n\n}\n\nclass Morphy_WordDescriptor_Collection_Serializer {\n\n  /**\n   * @param {Morphy_WordDescriptor_Collection} collection\n   * @param {boolean} [asText=false]\n   * @returns {*}\n   */\n  serialize (collection, asText = false) {\n    const result = [];\n    _.forEach(collection, descriptor => result.push(this.processWordDescriptor(descriptor, asText)));\n\n    return result;\n  }\n\n  /**\n   * @param {Morphy_WordDescriptor} descriptor\n   * @param {boolean} [asText=false]\n   * @returns {{forms: *, all: *, common: string}}\n   */\n  processWordDescriptor (descriptor, asText = false) {\n    const all = [];\n    const forms = [];\n\n    _.forEach(descriptor, word_form => {\n      forms.push(word_form.getWord());\n      all.push(this.serializeGramInfo(word_form, asText));\n    });\n\n    return {\n      all,\n      forms,\n      common: ''\n    };\n  }\n\n  /**\n   * @param {Morphy_WordForm} wordForm\n   * @param {boolean} [asText=false]\n   * @returns {*}\n   */\n  serializeGramInfo (wordForm, asText = false) {\n    if (asText) {\n      return wordForm.getPartOfSpeech() + ' ' + php.strings.implode(',', wordForm.getGrammems());\n    }\n\n    return {\n      pos: wordForm.getPartOfSpeech(),\n      grammems: wordForm.getGrammems()\n    };\n  }\n\n}\n\nclass phpMorphy {\n  \n  constructor (dir, lang = null, options = {}) {\n    this.options = this.repairOptions(options);\n    this.init(this.createFilesBundle(dir, lang), this.options);\n    this.last_prediction_type = PREDICT_BY_NONE;\n  }\n\n  /**\n   * @param {Morphy_FilesBundle} bundle\n   * @param options\n   */\n  init (bundle, options) {\n    this.options = this.repairOptions(options);\n    this.storage_factory = this.createStorageFactory();\n    this.common_fsa = this.createFsa(\n      this.storage_factory.open(this.options['storage'], bundle.getCommonAutomatFile(), false),\n      false\n    );\n    this.predict_fsa = this.createFsa(\n      this.storage_factory.open(this.options['storage'], bundle.getPredictAutomatFile(), true),\n      true\n    );\n\n    const graminfo = this.createGramInfo(this.storage_factory.open(this.options['storage'], bundle.getGramInfoFile(), true), bundle);\n    const gramtab = this.createGramTab(this.storage_factory.open(\n      this.options['storage'],\n      (this.options['graminfo_as_text'] ? bundle.getGramTabFileWithTextIds() : bundle.getGramTabFile()),\n      true\n    ));\n    this.helper = this.createMorphierHelper(graminfo, gramtab, this.options['graminfo_as_text'], bundle);\n  }\n\n  /**\n   * @return {Morphy_Morphier_Interface}\n   */\n  getCommonMorphier () {\n    return this.__common_morphier;\n  }\n\n  /**\n   * @return {Morphy_Morphier_Interface}\n   */\n  getPredictBySuffixMorphier () {\n    return this.__predict_by_suf_morphier;\n  }\n\n  /**\n   * @return {Morphy_Morphier_Interface}\n   */\n  getPredictByDatabaseMorphier () {\n    return this.__predict_by_db_morphier;\n  }\n\n  /**\n   * @return {Morphy_Morphier_Bulk}\n   */\n  getBulkMorphier () {\n    return this.__bulk_morphier;\n  }\n\n  /**\n   * @return {string}\n   */\n  getEncoding () {\n    return this.helper.getGramInfo().getEncoding();\n  }\n\n  /**\n   * @return {string}\n   */\n  getLocale () {\n    return this.helper.getGramInfo().getLocale();\n  }\n\n  /**\n   * @return {Morphy_GrammemsProvider_Base}\n   */\n  getGrammemsProvider () {\n    return _.cloneDeep(this.__grammems_provider);\n  }\n\n  /**\n   * @return {Morphy_GrammemsProvider_Base}\n   */\n  getDefaultGrammemsProvider () {\n    return this.__grammems_provider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLastPredicted () {\n    return this.last_prediction_type !== PREDICT_BY_NONE;\n  }\n\n  /**\n   * @returns {string}\n   */\n  getLastPredictionType () {\n    return this.last_prediction_type;\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {Morphy_WordDescriptor_Collection|{}}\n   */\n  findWord (word, type = NORMAL) {\n    const result = {};\n\n    if (php.var.is_array(word)) {\n      word.forEach(w => result[w] = this.invoke('getWordDescriptor', toBuffer(w), type));\n      return result;\n    }\n\n    return this.invoke('getWordDescriptor', word, type);\n  }\n\n  /**\n   * Alias for getBaseForm\n   *\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  lemmatize (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.getBaseForm(word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getBaseForm (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getBaseForm', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getAllForms (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getAllForms', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getPseudoRoot (word, type = NORMAL) {\n    word = toBuffer(word);\n    \n    return this.invoke('getPseudoRoot', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getPartOfSpeech (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getPartOfSpeech', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getAllFormsWithAncodes (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getAllFormsWithAncodes', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {boolean} [asText=true] - represent graminfo as text or ancodes\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {*}\n   */\n  getAllFormsWithGramInfo (word, asText = true, type = NORMAL) {\n    word = toBuffer(word);\n\n    const result = this.findWord(word, type);\n\n    if (!result) {\n      return false;\n    }\n\n    if (php.var.is_array(word)) {\n      const out = {};\n      _.forEach(result, (r, w) => {\n        if (false !== r) {\n          out[w] = this.processWordsCollection(r, asText);\n        } else {\n          out[w] = false;\n        }\n      });\n\n      return out;\n    }\n  \n    return this.processWordsCollection(result, asText);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getAncode (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getAncode', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getGramInfo (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getGrammarInfo', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param {*} [type=NORMAL] - prediction managment\n   * @return {[]}\n   */\n  getGramInfoMergeForms (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getGrammarInfoMergeForms', word, type);\n  }\n\n  /**\n   * @param {*} word - string or array of strings\n   * @param [type=NORMAL] - prediction managment\n   * @returns {[]}\n   */\n  getAnnotForWord (word, type = NORMAL) {\n    word = toBuffer(word);\n\n    return this.invoke('getAnnot', word, type);\n  }\n\n  /**\n   * @param {string} word\n   * @param {*} ancode\n   * @param {*} [commonAncode=null]\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=null]\n   * @param {*} [type=NORMAL]\n   * @return {[]}\n   */\n  castFormByAncode (word, ancode, commonAncode = null, returnOnlyWord = false, callback = null, type = NORMAL) {\n    word = toBuffer(word);\n\n    const resolver = this.helper.getAncodesResolver();\n    const common_ancode_id = resolver.unresolve(commonAncode);\n    const ancode_id = resolver.unresolve(ancode);\n    const data = this.helper.getGrammemsAndPartOfSpeech(ancode_id);\n\n    if (php.var.isset(common_ancode_id)) {\n      data[1] = php.array.array_merge(data[1], this.helper.getGrammems(common_ancode_id));\n    }\n\n    return this.castFormByGramInfo(\n      word,\n      data[0],\n      data[1],\n      returnOnlyWord,\n      callback,\n      type\n    );\n  }\n\n  /**\n   * @param {string} word\n   * @param {*} partOfSpeech\n   * @param {[]} grammems\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=null]\n   * @param {*} [type=NORMAL]\n   * @return {[]|boolean}\n   */\n  castFormByGramInfo (word, partOfSpeech, grammems, returnOnlyWord = false, callback = null, type = NORMAL) {\n    word = toBuffer(word);\n\n    const annot = this.getAnnotForWord(word, type);\n    if (!annot) {\n      return false;\n    }\n\n    return this.helper.castFormByGramInfo(word, annot, partOfSpeech, grammems, returnOnlyWord, callback);\n  }\n\n  /**\n   * @param {string} word\n   * @param {string} patternWord\n   * @param {Morphy_GrammemsProvider_Interface} [grammemsProvider=null]\n   * @param {boolean} [returnOnlyWord=false]\n   * @param {*} [callback=false]\n   * @param {*} [type=NORMAL]\n   * @return {[]|boolean}\n   */\n  castFormByPattern (word, patternWord, grammemsProvider = null, returnOnlyWord = false, callback = null, type = NORMAL) {\n    word = toBuffer(word);\n    patternWord = toBuffer(patternWord);\n\n    const word_annot = this.getAnnotForWord(word, type);\n    if (!word_annot) {\n      return false;\n    }\n    \n    if (!(grammemsProvider instanceof Morphy_GrammemsProvider_Interface)) {\n      grammemsProvider = this.__grammems_provider;\n    }\n    \n    let result = [];\n    _.forEach(this.getGramInfo(patternWord, type), paradigm => {\n      _.forEach(paradigm, grammar => {\n        const pos = grammar['pos'];\n        const essential_grammems = grammemsProvider.getGrammems(pos);\n  \n        const grammems = (essential_grammems !== false)\n          ? php.array.array_intersect(grammar['grammems'], essential_grammems)\n          : grammar['grammems']\n        ;\n        \n        const res = this.helper.castFormByGramInfo(\n          word,\n          word_annot,\n          pos,\n          grammems,\n          returnOnlyWord,\n          callback,\n          type\n        );\n\n        if (res.length) {\n          result = php.array.array_merge(result, res);\n        }\n      });\n    });\n\n    return returnOnlyWord ? _.uniq(result) : result;\n  }\n\n  /**\n   * @param {Morphy_WordDescriptor_Collection} collection\n   * @param {boolean} asText\n   * @returns {*}\n   */\n  processWordsCollection (collection, asText) {\n    return this.__word_descriptor_serializer.serialize(collection, asText);\n  }\n\n  invoke (method, word, type) {\n    this.last_prediction_type = PREDICT_BY_NONE;\n    word = toBuffer(word);\n    \n    let result;\n    let not_found;\n\n    if (type === ONLY_PREDICT) {\n      if (php.var.is_array(word)) {\n        result = {};\n        _.forEach(word, w => result[w] = this.predictWord(method, w));\n\n        return result;\n      } else {\n        return this.predictWord(method, word);\n      }\n    }\n\n    if (php.var.is_array(word)) {\n      result = this.__bulk_morphier[method](word);\n      not_found = this.__bulk_morphier.getNotFoundWords();\n\n      _.forEach(not_found, word => {\n        result[word] = (type !== IGNORE_PREDICT)\n          ? this.predictWord(method, word)\n          : false\n        ;\n      });\n    } else {\n      result = this.__common_morphier[method](word);\n  \n      if (!result && type !== IGNORE_PREDICT) {\n        result = this.predictWord(method, word);\n      }\n    }\n    \n    return result;\n  }\n\n  predictWord (method, word) {\n    word = toBuffer(word);\n\n    let result = this.__predict_by_suf_morphier[method](word);\n    if (result !== false) {\n      this.last_prediction_type = PREDICT_BY_SUFFIX;\n      return result;\n    }\n\n    result = this.__predict_by_db_morphier[method](word);\n    if (result !== false) {\n      this.last_prediction_type = PREDICT_BY_DB;\n      return result;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {Morphy_FilesBundle} bundle\n   * @param {{}} opts\n   * @returns {*}\n   */\n  createCommonSource (bundle, opts) {\n    const type = opts['type'];\n\n    switch (type) {\n      case SOURCE_FSA:\n        return new Morphy_Source_Fsa(this.common_fsa);\n      default:\n        throw new Error(`Unknown source type given '${ type }'`);\n    }\n  }\n\n  repairOldOptions (options = {}) {\n    const defaults = {\n      predict_by_suffix: false,\n      predict_by_db:     false\n    };\n\n    return Object.assign(defaults, options);\n  }\n\n  repairSourceOptions (options = {}) {\n    const defaults = {\n      type: SOURCE_FSA,\n      opts: null\n    };\n\n    return Object.assign(defaults, options);\n  }\n\n  repairOptions (options = {}) {\n    const defaults = {\n      graminfo_as_text:  true,\n      storage:           STORAGE_MEM,\n      common_source:     this.repairSourceOptions(options.common_source || null),\n      predict_by_suffix: true,\n      predict_by_db:     true,\n      use_ancodes_cache: false,\n      resolve_ancodes:   RESOLVE_ANCODES_AS_TEXT\n    };\n\n    return Object.assign(defaults, options);\n  }\n\n  get __predict_by_db_morphier () {\n    if (!this.___predict_by_db_morphier) {\n      this.___predict_by_db_morphier = this.createPredictByDbMorphier(this.predict_fsa, this.helper);\n    }\n\n    return this.___predict_by_db_morphier;\n  }\n  set __predict_by_db_morphier (value) {\n    this.___predict_by_db_morphier = (!_.isUndefined(value)) ? value : null;\n  }\n\n  get __predict_by_suf_morphier () {\n    if (!this.___predict_by_suf_morphier) {\n      this.___predict_by_suf_morphier = this.createPredictBySuffixMorphier(this.common_fsa, this.helper);\n    }\n\n    return this.___predict_by_suf_morphier;\n  }\n  set __predict_by_suf_morphier (value) {\n    this.___predict_by_suf_morphier = (!_.isUndefined(value)) ? value : null;\n  }\n\n  get __bulk_morphier () {\n    if (!this.___bulk_morphier) {\n      this.___bulk_morphier = this.createBulkMorphier(this.common_fsa, this.helper);\n    }\n\n    return this.___bulk_morphier;\n  }\n  set __bulk_morphier (value) {\n    this.___bulk_morphier = (!_.isUndefined(value)) ? value : null;\n  }\n\n  get __common_morphier () {\n    if (!this.___common_morphier) {\n      this.___common_morphier = this.createCommonMorphier(this.common_fsa, this.helper);\n    }\n\n    return this.___common_morphier;\n  }\n  set __common_morphier (value) {\n    this.___common_morphier = (!_.isUndefined(value)) ? value : null;\n  }\n\n  get __word_descriptor_serializer () {\n    if (!this.___word_descriptor_serializer) {\n      this.___word_descriptor_serializer = this.createWordDescriptorSerializer();\n    }\n\n    return this.___word_descriptor_serializer;\n  }\n  set __word_descriptor_serializer (value) {\n    this.___word_descriptor_serializer = (!_.isUndefined(value)) ? value : null;\n  }\n\n  get __grammems_provider () {\n    if (!this.___grammems_provider) {\n      this.___grammems_provider = this.createGrammemsProvider();\n    }\n\n    return this.___grammems_provider;\n  }\n  set __grammems_provider (value) {\n    this.___grammems_provider = (!_.isUndefined(value)) ? value : null;\n  }\n\n  ////////////////////\n  // factory methods\n  ////////////////////\n  createGrammemsProvider () {\n    return Morphy_GrammemsProvider_Factory.create(this);\n  }\n\n  createWordDescriptorSerializer () {\n    return new Morphy_WordDescriptor_Collection_Serializer();\n  }\n\n  createFilesBundle (dir, lang) {\n    return new Morphy_FilesBundle(dir, lang);\n  }\n\n  createStorageFactory () {\n    return new Morphy_Storage_Factory();\n  }\n\n  /**\n   * @param {Morphy_Storage} storage\n   * @param {boolean} lazy\n   * @returns {*}\n   */\n  createFsa (storage, lazy) {\n    return Morphy_Fsa.create(storage, lazy);\n  }\n\n  /**\n   * @param {Morphy_Storage} graminfoFile\n   * @param {Morphy_FilesBundle} bundle\n   */\n  createGramInfo (graminfoFile, bundle) {\n    const result = new Morphy_GramInfo_RuntimeCaching(\n      new Morphy_GramInfo_Proxy_WithHeader(\n        graminfoFile,\n        bundle.getGramInfoHeaderCacheFile()\n      )\n    );\n\n    if (this.options['use_ancodes_cache']) {\n      return new Morphy_GramInfo_AncodeCache(\n        result,\n        this.storage_factory.open(this.options['storage'], bundle.getGramInfoAncodesCacheFile(), true)\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {Morphy_Storage} storage\n   * @returns {Morphy_GramTab_Proxy}\n   */\n  createGramTab (storage) {\n    return new Morphy_GramTab_Proxy(storage);\n  }\n\n  /**\n   * @param {Morphy_GramTab_Interface} gramtab\n   * @param {Morphy_FilesBundle} bundle\n   */\n  createAncodesResolverInternal (gramtab, bundle) {\n    switch (this.options['resolve_ancodes']) {\n      case RESOLVE_ANCODES_AS_TEXT:\n        return ['Morphy_AncodesResolver_ToText', [gramtab]];\n      case RESOLVE_ANCODES_AS_INT:\n        return ['Morphy_AncodesResolver_AsIs', []];\n      case RESOLVE_ANCODES_AS_DIALING:\n        return ['Morphy_AncodesResolver_ToDialingAncodes', [\n          this.storage_factory.open(\n            this.options['storage'],\n            bundle.getAncodesMapFile(),\n            true\n          )\n        ]];\n      default:\n        throw new Error('Invalid resolve_ancodes option, valid values are RESOLVE_ANCODES_AS_DIALING, RESOLVE_ANCODES_AS_INT, RESOLVE_ANCODES_AS_TEXT');\n    }\n  }\n\n  /**\n   * @param {Morphy_GramTab_Interface} gramtab\n   * @param {Morphy_FilesBundle} bundle\n   * @param {boolean} lazy\n   */\n  createAncodesResolver (gramtab, bundle, lazy) {\n    const [className, args] = this.createAncodesResolverInternal(gramtab, bundle);\n        \n    if (!!lazy) {\n      return new Morphy_AncodesResolver_Proxy(className, args);\n    }\n\n    return Morphy_AncodesResolver_Proxy.instantinate(className, args);\n  }\n\n  /**\n   * @param {Morphy_GramInfo_Interface} graminfo\n   * @param {Morphy_GramTab_Interface} gramtab\n   * @param {boolean} graminfoAsText\n   * @param {Morphy_FilesBundle} bundle\n   */\n  createMorphierHelper (graminfo, gramtab, graminfoAsText, bundle) {\n\n    return new Morphy_Morphier_Helper(\n      graminfo,\n      gramtab,\n      this.createAncodesResolver(gramtab, bundle, true),\n      graminfoAsText\n    );\n  }\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  createCommonMorphier (fsa, helper) {\n    return new Morphy_Morphier_Common(fsa, helper);\n  }\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  createBulkMorphier (fsa, helper) {\n    return new Morphy_Morphier_Bulk(fsa, helper);\n  }\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  createPredictByDbMorphier (fsa, helper) {\n    if (this.options['predict_by_db']) {\n      return new Morphy_Morphier_Predict_Database(fsa, helper);\n    }\n\n    return new Morphy_Morphier_Empty();\n  }\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param {Morphy_Morphier_Helper} helper\n   */\n  createPredictBySuffixMorphier (fsa, helper) {\n    if (this.options['predict_by_suffix']) {\n      return new Morphy_Morphier_Predict_Suffix(fsa, helper);\n    }\n\n    return new Morphy_Morphier_Empty();\n  }\n\n}\n\nexport default phpMorphy;\nexport {\n  STORAGE_FILE,\n  STORAGE_MEM,\n  SOURCE_FSA,\n  RESOLVE_ANCODES_AS_TEXT,\n  RESOLVE_ANCODES_AS_DIALING,\n  RESOLVE_ANCODES_AS_INT,\n  NORMAL,\n  IGNORE_PREDICT,\n  ONLY_PREDICT,\n  PREDICT_BY_NONE,\n  PREDICT_BY_SUFFIX,\n  PREDICT_BY_DB\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/common.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\n\nclass Morphy_Link_Base {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param trans\n   * @param rawTrans\n   */\n  constructor (fsa, trans, rawTrans) {\n    this.fsa       = fsa;\n    this.trans     = trans;\n    this.raw_trans = rawTrans;\n  }\n\n  isAnnotation () {}\n\n  getTrans () {\n    return this.trans;\n  }\n\n  getFsa () {\n    return this.fsa;\n  }\n\n  getRawTrans () {\n    return this.raw_trans;\n  }\n\n}\n\n/**\n * This class represent \"normal\" link i.e. link that points to automat state\n */\nclass Morphy_Link extends Morphy_Link_Base {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  isAnnotation () {\n    return false;\n  }\n\n  getDest () {\n    return this.trans['dest'];\n  }\n\n  getAttr () {\n    return this.trans['attr'];\n  }\n\n  getTargetState () {\n    return this.createState(this.trans['dest']);\n  }\n  \n  createState (index) {\n    return new Morphy_State(this.fsa, index);\n  }\n\n}\n\nclass Morphy_Link_Annot extends Morphy_Link_Base {\n\n  constructor (...args) {\n    super(...args);\n  }\n\n  isAnnotation () {\n    return true;\n  }\n\n  getAnnotation () {\n    return this.fsa.getAnnot(this.raw_trans);\n  }\n\n}\n\nclass Morphy_State {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   * @param index\n   */\n  constructor (fsa, index) {\n    this.fsa         = fsa;\n    this.raw_transes = fsa.readState(index);\n    this.transes     = fsa.unpackTranses(this.raw_transes);\n  }\n\n  getLinks () {\n    let trans;\n    const result = [];\n\n    for (let i = 0, c = this.transes.length; i < c; i++) {\n      trans = this.transes[i];\n\n      if (!trans['term']) {\n        result.push(this.createNormalLink(trans, this.raw_transes[i]));\n      } else {\n        result.push(this.createAnnotLink(trans, this.raw_transes[i]));\n      }\n    }\n\n    return result;\n  }\n\n  getSize () {\n    return _.size(this.transes);\n  }\n\n  createNormalLink (trans, raw) {\n    return new Morphy_Link(this.fsa, trans, raw);\n  }\n\n  createAnnotLink (trans, raw) {\n    return new Morphy_Link_Annot(this.fsa, trans, raw);\n  }\n\n}\n\nexport {\n  Morphy_Link_Base,\n  Morphy_Link,\n  Morphy_Link_Annot,\n  Morphy_State\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fsa/fsa_state.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php } from '../utils';\n\nclass Morphy_GramTab_Interface  {\n\n  getGrammems (ancodeId) {}\n\n  getPartOfSpeech (ancodeId) {}\n\n  resolveGrammemIds (ids) {}\n\n  resolvePartOfSpeechId (id) {}\n\n  includeConsts () {}\n  \n  /**\n   * @param ancodeId\n   * @param {*} [commonAncode=null]\n   */\n  ancodeToString (ancodeId, commonAncode = null) {}\n\n  stringToAncode (string) {}\n\n  toString (partOfSpeechId, grammemIds) {}\n\n}\n\nclass Morphy_GramTab_Empty extends Morphy_GramTab_Interface {\n\n  getGrammems (ancodeId) {\n    return [];\n  }\n\n  getPartOfSpeech (ancodeId) {\n    return 0;\n  }\n\n  resolveGrammemIds (ids) {\n    return php.var.is_array(ids) ? {} : '';\n  }\n\n  resolvePartOfSpeechId (id) {\n    return '';\n  }\n\n  includeConsts () {}\n\n  ancodeToString (ancodeId, commonAncode) {\n    return '';\n  }\n\n  stringToAncode (string) {\n    return null;\n  }\n\n  toString (partOfSpeechId, grammemIds) {\n    return '';\n  }\n\n}\n\nclass Morphy_GramTab_Proxy extends Morphy_GramTab_Interface {\n\n  /**\n   * @param {Morphy_Storage} storage\n   */\n  constructor (storage) {\n    super();\n    this.storage = storage;\n    this.___obj  = null;\n  }\n\n  getGrammems (...args) {\n    return this.__obj.getGrammems(...args);\n  }\n\n  getPartOfSpeech (...args) {\n    return this.__obj.getPartOfSpeech(...args);\n  }\n\n  resolveGrammemIds (...args) {\n    return this.__obj.resolveGrammemIds(...args);\n  }\n\n  resolvePartOfSpeechId (...args) {\n    return this.__obj.resolvePartOfSpeechId(...args);\n  }\n\n  includeConsts (...args) {\n    return this.__obj.includeConsts(...args);\n  }\n\n  ancodeToString (...args) {\n    return this.__obj.ancodeToString(...args);\n  }\n\n  stringToAncode (...args) {\n    return this.__obj.stringToAncode(...args);\n  }\n\n  toString (...args) {\n    return this.__obj.toString(...args);\n  }\n\n  get __obj () {\n    if (!this.___obj) {\n      this.___obj = Morphy_GramTab.create(this.storage);\n      delete this.storage;\n    }\n\n    return this.___obj;\n  }\n  \n  set __obj (value) {\n    this.___obj = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_GramTab extends Morphy_GramTab_Interface {\n\n  /**\n   * @param {Morphy_Storage} $storage\n   * @returns {Morphy_GramTab}\n   */\n  static create ($storage) {\n    return new Morphy_GramTab($storage);\n  }\n\n  /**\n   * @param {Morphy_Storage} storage\n   */\n  constructor (storage) {\n    super();\n    \n    this.data = php.var.unserialize(storage.read(0, storage.getFileSize()).toString());\n    if (this.data == false) {\n      throw new Error('Broken gramtab data');\n    }\n\n    this.grammems       = this.data['grammems'];\n    this.poses          = this.data['poses'];\n    this.ancodes        = this.data['ancodes'];\n    this.___ancodes_map = null;\n  }\n\n  getGrammems (ancodeId) {\n    if (!php.var.isset(this.ancodes[ancodeId])) {\n      throw new Error(`Invalid ancode id '${ ancodeId }'`);\n    }\n    \n    return this.ancodes[ancodeId]['grammem_ids'];\n  }\n\n  getPartOfSpeech (ancodeId) {\n    if (!php.var.isset(this.ancodes[ancodeId])) {\n      throw new Error(`Invalid ancode id '${ ancodeId} '`);\n    }\n    \n    return this.ancodes[ancodeId].pos_id;\n  }\n\n  resolveGrammemIds (ids) {\n    if (php.var.is_array(ids)) {\n      const result = [];\n\n      _.forEach(ids, id => {\n        if (!php.var.isset(this.grammems[id])) {\n          throw new Error(`Invalid grammem id '${ id }'`);\n        }\n\n        result.push(this.grammems[id]['name']);\n      });\n\n      return result;\n    }\n\n    if (!php.var.isset(this.grammems[ids])) {\n      throw new Error(`Invalid grammem id '${ ids }'`);\n    }\n\n    return this.grammems[ids]['name'];\n  }\n\n  resolvePartOfSpeechId (id) {\n    if (!php.var.isset(this.poses[id])) {\n      throw new Error(`Invalid part of speech id '${ id }'`);\n    }\n\n    return this.poses[id]['name'];\n  }\n\n  includeConsts () {\n    /** todo: вот те самые константы */\n    return require('./gramtab_consts');\n  }\n\n  ancodeToString (ancodeId, commonAncode) {\n    commonAncode = (!_.isUndefined(commonAncode)) ? commonAncode : null;\n\n    if (php.var.isset(commonAncode)) {\n      commonAncode = this.getGrammems(commonAncode).join(',') + ',';\n    }\n\n    return [\n      this.getPartOfSpeech(ancodeId),\n      ' ',\n      (commonAncode ? commonAncode : ''),\n      this.getGrammems(ancodeId).join(',')\n    ].join('');\n  }\n\n  findAncode (partOfSpeech, grammems) {}\n\n  stringToAncode (string) {\n    if (!php.var.isset(string)) {\n      return null;\n    }\n\n    if (!php.var.isset(this.__ancodes_map[string])) {\n      throw new Error(`Ancode with '${ string }' graminfo not found`);\n    }\n\n    return this.__ancodes_map[string];\n  }\n\n  /**\n   * @param partOfSpeechId\n   * @param grammemIds\n   * @returns {string}\n   */\n  toString (partOfSpeechId, grammemIds) {\n    return partOfSpeechId + ' ' + php.strings.implode(',', grammemIds);\n  }\n\n  buildAncodesMap () {\n    const result = {};\n\n    _.forEach(this.ancodes, (data, ancode_id) => {\n      const key = this.toString(data['pos_id'], data['grammem_ids']);\n\n      result[key] = ancode_id;\n    });\n\n    return result;\n  }\n\n  get __ancodes_map () {\n    if (!this.___ancodes_map) {\n      this.___ancodes_map = this.buildAncodesMap();\n    }\n\n    return this.___ancodes_map;\n  }\n\n  set __ancodes_map (value) {\n    this.___ancodes_map = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nexport {\n  Morphy_GramTab_Interface,\n  Morphy_GramTab_Empty,\n  Morphy_GramTab_Proxy,\n  Morphy_GramTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gramtab.js","// This file is autogenerated at Mon, 31 Aug 2009 04:56:59 +0400, don`t change it!\n\n// parts of speech\nexport const PMY_RP_NOUN = 0;\nexport const PMY_RP_ADJ_FULL = 1;\nexport const PMY_RP_VERB = 2;\nexport const PMY_RP_PRONOUN = 3;\nexport const PMY_RP_PRONOUN_P = 4;\nexport const PMY_RP_PRONOUN_PREDK = 5;\nexport const PMY_RP_NUMERAL = 6;\nexport const PMY_RP_NUMERAL_P = 7;\nexport const PMY_RP_ADV = 8;\nexport const PMY_RP_PREDK = 9;\nexport const PMY_RP_PREP = 10;\nexport const PMY_RP_POSL = 11;\nexport const PMY_RP_CONJ = 12;\nexport const PMY_RP_INTERJ = 13;\nexport const PMY_RP_INP = 14;\nexport const PMY_RP_PHRASE = 15;\nexport const PMY_RP_PARTICLE = 16;\nexport const PMY_RP_ADJ_SHORT = 17;\nexport const PMY_RP_PARTICIPLE = 18;\nexport const PMY_RP_ADVERB_PARTICIPLE = 19;\nexport const PMY_RP_PARTICIPLE_SHORT = 20;\nexport const PMY_RP_INFINITIVE = 21;\nexport const PMY_RP_EMPTY = 22;\n\n// grammems\nexport const PMY_RG_PLURAL = 0;\nexport const PMY_RG_SINGULAR = 1;\nexport const PMY_RG_NOMINATIV = 2;\nexport const PMY_RG_GENITIV = 3;\nexport const PMY_RG_DATIV = 4;\nexport const PMY_RG_ACCUSATIV = 5;\nexport const PMY_RG_INSTRUMENTALIS = 6;\nexport const PMY_RG_LOCATIV = 7;\nexport const PMY_RG_VOCATIV = 8;\nexport const PMY_RG_MASCULINUM = 9;\nexport const PMY_RG_FEMINUM = 10;\nexport const PMY_RG_NEUTRUM = 11;\nexport const PMY_RG_MASC_FEM = 12;\nexport const PMY_RG_PRESENT_TENSE = 13;\nexport const PMY_RG_FUTURE_TENSE = 14;\nexport const PMY_RG_PAST_TENSE = 15;\nexport const PMY_RG_FIRST_PERSON = 16;\nexport const PMY_RG_SECOND_PERSON = 17;\nexport const PMY_RG_THIRD_PERSON = 18;\nexport const PMY_RG_IMPERATIVE = 19;\nexport const PMY_RG_ANIMATIVE = 20;\nexport const PMY_RG_NON_ANIMATIVE = 21;\nexport const PMY_RG_COMPARATIVE = 22;\nexport const PMY_RG_PERFECTIVE = 23;\nexport const PMY_RG_NON_PERFECTIVE = 24;\nexport const PMY_RG_NON_TRANSITIVE = 25;\nexport const PMY_RG_TRANSITIVE = 26;\nexport const PMY_RG_ACTIVE_VOICE = 27;\nexport const PMY_RG_PASSIVE_VOICE = 28;\nexport const PMY_RG_INDECLINABLE = 29;\nexport const PMY_RG_INITIALISM = 30;\nexport const PMY_RG_PATRONYMIC = 31;\nexport const PMY_RG_TOPONYM = 32;\nexport const PMY_RG_ORGANISATION = 33;\nexport const PMY_RG_QUALITATIVE = 34;\nexport const PMY_RG_DE_FACTO_SING_TANTUM = 35;\nexport const PMY_RG_INTERROGATIVE = 36;\nexport const PMY_RG_DEMONSTRATIVE = 37;\nexport const PMY_RG_NAME = 38;\nexport const PMY_RG_SUR_NAME = 39;\nexport const PMY_RG_IMPERSONAL = 40;\nexport const PMY_RG_SLANG = 41;\nexport const PMY_RG_MISPRINT = 42;\nexport const PMY_RG_COLLOQUIAL = 43;\nexport const PMY_RG_POSSESSIVE = 44;\nexport const PMY_RG_ARCHAISM = 45;\nexport const PMY_RG_SECOND_CASE = 46;\nexport const PMY_RG_POETRY = 47;\nexport const PMY_RG_PROFESSION = 48;\nexport const PMY_RG_SUPERLATIVE = 49;\nexport const PMY_RG_POSITIVE = 50;\nexport const PMY_RG_SHORT = 51;\nexport const PMY_RG_INFO = 52;\nexport const PMY_RG_DEEPR = 53;\nexport const PMY_RG_PR = 54;\n// -------------------------------------------------------------------------------\n\n// parts of speech\nexport const PMY_EP_NOUN = 0;\nexport const PMY_EP_ADJ = 1;\nexport const PMY_EP_VERB = 2;\nexport const PMY_EP_VBE = 3;\nexport const PMY_EP_MOD = 4;\nexport const PMY_EP_NUMERAL = 5;\nexport const PMY_EP_CONJ = 6;\nexport const PMY_EP_INTERJ = 7;\nexport const PMY_EP_PREP = 8;\nexport const PMY_EP_PARTICLE = 9;\nexport const PMY_EP_ART = 10;\nexport const PMY_EP_ADV = 11;\nexport const PMY_EP_PN = 12;\nexport const PMY_EP_ORDNUM = 13;\nexport const PMY_EP_PRON = 14;\nexport const PMY_EP_POSS = 15;\nexport const PMY_EP_PN_ADJ = 16;\nexport const PMY_EP_EMPTY = 17;\n\n// grammems\nexport const PMY_EG_SINGULAR = 0;\nexport const PMY_EG_PLURAL = 1;\nexport const PMY_EG_MASCULINUM = 2;\nexport const PMY_EG_FEMINUM = 3;\nexport const PMY_EG_ANIMATIVE = 4;\nexport const PMY_EG_PERFECTIVE = 5;\nexport const PMY_EG_NOMINATIVE = 6;\nexport const PMY_EG_OBJECT_CASE = 7;\nexport const PMY_EG_NARRATIVE = 8;\nexport const PMY_EG_GEOGRAPHICS = 9;\nexport const PMY_EG_PROPER = 10;\nexport const PMY_EG_PERSONAL_PRONOUN = 11;\nexport const PMY_EG_POSSESSIVE = 12;\nexport const PMY_EG_PREDICATIVE = 13;\nexport const PMY_EG_UNCOUNTABLE = 14;\nexport const PMY_EG_REFLEXIVE_PRONOUN = 15;\nexport const PMY_EG_DEMONSTRATIVE_PRONOUN = 16;\nexport const PMY_EG_MASS = 17;\nexport const PMY_EG_COMPARATIV = 18;\nexport const PMY_EG_SUPREMUM = 19;\nexport const PMY_EG_FIRST_PERSON = 20;\nexport const PMY_EG_SECOND_PERSON = 21;\nexport const PMY_EG_THIRD_PERSON = 22;\nexport const PMY_EG_PRESENT_INDEF = 23;\nexport const PMY_EG_INFINITIVE = 24;\nexport const PMY_EG_PAST_INDEF = 25;\nexport const PMY_EG_PAST_PARTICIPLE = 26;\nexport const PMY_EG_GERUND = 27;\nexport const PMY_EG_FUTURUM = 28;\nexport const PMY_EG_CONDITIONAL = 29;\nexport const PMY_EG_APOSTROPHE_S = 30;\nexport const PMY_EG_APOSTROPHE = 31;\nexport const PMY_EG_NAMES = 32;\nexport const PMY_EG_ORGANISATION = 33;\n// -------------------------------------------------------------------------------\n\n// parts of speech\nexport const PMY_GP_ART = 0;\nexport const PMY_GP_ADJ = 1;\nexport const PMY_GP_ADV = 2;\nexport const PMY_GP_EIG = 3;\nexport const PMY_GP_SUB = 4;\nexport const PMY_GP_VER = 5;\nexport const PMY_GP_P_A1 = 6;\nexport const PMY_GP_P_A2 = 7;\nexport const PMY_GP_PRONOMEN = 8;\nexport const PMY_GP_PRP = 9;\nexport const PMY_GP_KON = 10;\nexport const PMY_GP_NEG = 11;\nexport const PMY_GP_INJ = 12;\nexport const PMY_GP_ZAL = 13;\nexport const PMY_GP_ZUS = 14;\nexport const PMY_GP_PRO_BEG = 15;\nexport const PMY_GP_ZU_INFINITIV = 16;\nexport const PMY_GP_EMPTY = 17;\n\n// grammems\nexport const PMY_GG_NOA_UNK = 0;\nexport const PMY_GG_PREDIK_BENUTZ = 1;\nexport const PMY_GG_PRO_UNK = 2;\nexport const PMY_GG_TMP_UNK = 3;\nexport const PMY_GG_NAC = 4;\nexport const PMY_GG_MOU = 5;\nexport const PMY_GG_COU = 6;\nexport const PMY_GG_GEO = 7;\nexport const PMY_GG_WASSER = 8;\nexport const PMY_GG_GEB = 9;\nexport const PMY_GG_STD = 10;\nexport const PMY_GG_LOK = 11;\nexport const PMY_GG_VOR = 12;\nexport const PMY_GG_SICH_ACC = 13;\nexport const PMY_GG_SICH_DAT = 14;\nexport const PMY_GG_SCHWACH = 15;\nexport const PMY_GG_NICHT_SCHWACH = 16;\nexport const PMY_GG_MODAL = 17;\nexport const PMY_GG_AUXILIAR = 18;\nexport const PMY_GG_KONJ1 = 19;\nexport const PMY_GG_KONJ2 = 20;\nexport const PMY_GG_PARTIZIP1 = 21;\nexport const PMY_GG_PARTIZIP2 = 22;\nexport const PMY_GG_ZU_VERB_FORM = 23;\nexport const PMY_GG_IMPERATIV = 24;\nexport const PMY_GG_PRAETERITUM = 25;\nexport const PMY_GG_PRASENS = 26;\nexport const PMY_GG_GRUNDFORM = 27;\nexport const PMY_GG_KOMPARATIV = 28;\nexport const PMY_GG_SUPERLATIV = 29;\nexport const PMY_GG_PROPORTIONAL_KONJUNKTION = 30;\nexport const PMY_GG_INFINITIV = 31;\nexport const PMY_GG_VERGLEICHS_KONJUNKTION = 32;\nexport const PMY_GG_NEBENORDNENDE = 33;\nexport const PMY_GG_UNTERORDNENDE = 34;\nexport const PMY_GG_PERSONAL = 35;\nexport const PMY_GG_DEMONSTRATIV = 36;\nexport const PMY_GG_INTERROGATIV = 37;\nexport const PMY_GG_POSSESSIV = 38;\nexport const PMY_GG_REFLEXIV = 39;\nexport const PMY_GG_RIN_PRONOMEN = 40;\nexport const PMY_GG_ALG_PRONOMEN = 41;\nexport const PMY_GG_ADJEKTIVE_OHNE_ARTIKEL = 42;\nexport const PMY_GG_ADJEKTIVE_MIT_UNBESTIMMTE = 43;\nexport const PMY_GG_ADJEKTIVE_MIT_BESTIMMTE = 44;\nexport const PMY_GG_ERSTE_PERSON = 45;\nexport const PMY_GG_ZWEITE_PERSON = 46;\nexport const PMY_GG_DRITTE_PERSON = 47;\nexport const PMY_GG_FEMININ = 48;\nexport const PMY_GG_MASKULIN = 49;\nexport const PMY_GG_NEUTRUM = 50;\nexport const PMY_GG_PLURAL = 51;\nexport const PMY_GG_SINGULAR = 52;\nexport const PMY_GG_NOMINATIV = 53;\nexport const PMY_GG_GENITIV = 54;\nexport const PMY_GG_DATIV = 55;\nexport const PMY_GG_AKKUSATIV = 56;\nexport const PMY_GG_ABBREVIATION = 57;\nexport const PMY_GG_EINWOHNER = 58;\nexport const PMY_GG_TRANSITIV = 59;\nexport const PMY_GG_INTRANSITIV = 60;\nexport const PMY_GG_IMPERSONAL = 61;\n// -------------------------------------------------------------------------------\n\n// parts of speech\nexport const PMY_UP_UNKNOWN = 0;\n\n// grammems\nexport const PMY_UG_UNKNOWN = 0;\n// -------------------------------------------------------------------------------\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gramtab_consts.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nclass Morphy_Source_Interface {\n\n  getValue (key) {}\n\n}\n\nclass Morphy_Source_Fsa extends Morphy_Source_Interface {\n\n  /**\n   * @param {Morphy_Fsa_Interface} fsa\n   */\n  constructor (fsa) {\n    this.fsa = fsa;\n    this.root = fsa.getRootTrans();\n  }\n\n  getFsa () {\n    return this.fsa;\n  }\n\n  getValue (key) {\n    const result = this.fsa.walk(this.root, key, true);\n    if (result === false || !result['annot']) {\n      return false;\n    }\n\n    return result['annot'];\n  }\n\n}\n\nexport {\n  Morphy_Source_Interface,\n  Morphy_Source_Fsa\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/source.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport fs from 'fs';\nimport { php } from '../utils';\nimport { STORAGE_FILE, STORAGE_MEM } from './constants';\n\nclass Morphy_Storage {\n\n  constructor (fileName = '') {\n    if (fileName) {\n      this.file_name = fileName;\n      this.resource = this.open(fileName);\n    }\n  }\n\n  getFileName () {\n    return this.file_name;\n  }\n\n  getResource () {\n    return this.resource;\n  }\n\n  getTypeAsString () {\n    return this.getType();\n  }\n\n  /**\n   * @param {number} offset\n   * @param {number} len\n   * @param {boolean} [exactLength=true]\n   * @returns {*}\n   */\n  read (offset, len, exactLength = true) {\n    if (offset >= this.getFileSize()) {\n      throw new Error(`Can't read ${ len } bytes beyond end of '${ this.getFileName() }' file, offset = ${ offset }, file_size = ${ this.getFileSize() }`);\n    }\n\n    let result;\n    try {\n      result = this.readUnsafe(offset, len);\n    } catch (e) {\n      throw new Error(`Can't read ${ len } bytes at ${ offset } offset, from '${ this.getFileName() }' file: ${ e.message }`);\n    }\n\n    if (exactLength && result.length < len) {\n      throw new Error(`Can't read ${ len } bytes at ${ offset } offset, from '${ this.getFileName() }' file`);\n    }\n\n    return result;\n  }\n\n  readUnsafe (offset, len) {}\n\n  getFileSize () {}\n\n  getType () {}\n\n  open (fileName) {}\n\n}\n\nclass Morphy_Storage_Proxy extends Morphy_Storage {\n\n  constructor (type, fileName, factory) {\n    super();\n    this.file_name = fileName;\n    this.type = type;\n    this.factory = factory;\n    this.___obj = null;\n  }\n\n  getFileName () {\n    return this.__obj.getFileName();\n  }\n\n  getResource () {\n    return this.__obj.getResource();\n  }\n\n  getFileSize () {\n    return this.__obj.getFileSize();\n  }\n\n  getType () {\n    return this.__obj.getType();\n  }\n\n  readUnsafe (offset, len) {\n    return this.__obj.readUnsafe(offset, len);\n  }\n\n  open (fileName) {\n    return this.__obj.open(fileName);\n  }\n\n  get __obj () {\n    if (!this.___obj) {\n      this.___obj = this.factory.open(this.type, this.file_name, false);\n\n      delete this.file_name;\n      delete this.type;\n      delete this.factory;\n    }\n\n    return this.___obj;\n  }\n  \n  set __obj (value) {\n    this.___obj = (!_.isUndefined(value)) ? value : null;\n  }\n\n}\n\nclass Morphy_Storage_File extends Morphy_Storage {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getType () {\n    return STORAGE_FILE;\n  }\n\n  getFileSize () {\n    const stat = fs.fstatSync(this.resource);\n    if (stat === false) {\n      throw new Error(`Can't invoke fs.fstatSync for '${ this.file_name }' file`);\n    }\n\n    return stat['size'];\n  }\n\n  readUnsafe (offset, len) {\n    const buf = Buffer.alloc(len);\n    fs.readSync(this.resource, buf, 0, len, offset);\n\n    return buf;\n  }\n\n  open (fileName) {\n    const fh = fs.openSync(fileName, 'r');\n    if (fh === false) {\n      throw new Error(`Can't open '${ this.file_name }' file`);\n    }\n\n    return fh;\n  }\n\n}\n\nclass Morphy_Storage_Mem extends Morphy_Storage {\n\n  constructor () {\n    super(...arguments);\n  }\n\n  getType () {\n    return STORAGE_MEM;\n  }\n\n  getFileSize () {\n    return this.resource.length;\n  }\n\n  readUnsafe (offset, len) {\n    return php.strings.substr(this.resource, offset, len);\n    //return this.resource.slice(offset, offset + len - 1);\n  }\n\n  open (fileName) {\n    const buffer = fs.readFileSync(fileName);\n    if (buffer === false) {\n      throw new Error(`Can't read '${ fileName }' file`);\n    }\n\n    return buffer;\n  }\n\n}\n\nclass Morphy_Storage_Factory {\n  \n  static get storages () {\n    return {\n      Morphy_Storage_File,\n      Morphy_Storage_Mem\n    };\n  }\n\n  open (type, fileName, lazy) {\n    switch (type) {\n      case STORAGE_FILE:\n      // downfall\n      case STORAGE_MEM:\n        break;\n      default:\n        throw new Error(`Invalid storage type '${ type }' specified`);\n    }\n\n    if (lazy) {\n      return new Morphy_Storage_Proxy(type, fileName, this);\n    }\n\n    const className = 'Morphy_Storage_' + php.strings.ucfirst(type.toLowerCase());\n\n    return new Morphy_Storage_Factory.storages[className](fileName);\n  }\n\n}\n\nexport {\n  Morphy_Storage,\n  Morphy_Storage_Proxy,\n  Morphy_Storage_File,\n  Morphy_Storage_Mem,\n  Morphy_Storage_Factory\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/storage.js","/**\n * This file is part of phpMorphy library\n *\n * Copyright c 2007-2008 Kamaev Vladimir <heromantor@users.sourceforge.net>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\nimport _ from 'lodash';\nimport { php, toBuffer, buffer2str } from '../utils';\n\nconst Morphy_UnicodeHelper_cache = {};\nconst Morphy_UnicodeHelper_unicodeHelpers = {};\n\nclass Morphy_UnicodeHelper {\n  \n  static get cache () {\n    return Morphy_UnicodeHelper_cache;\n  }\n  \n  static get unicodeHelpers () {\n    return Morphy_UnicodeHelper_unicodeHelpers;\n  }\n  \n  static create (encoding) {\n    const { cache, doCreate } = Morphy_UnicodeHelper;\n\n    encoding = encoding.toLowerCase();\n    if (php.var.isset(cache[encoding])) {\n      return cache[encoding];\n    }\n    \n    const result = doCreate(encoding);\n    cache[encoding] = result;\n    \n    return result;\n  }\n  \n  static doCreate (encoding) {\n    let matches = encoding.match(/^(utf|ucs)(-)?([0-9]+)(-)?(le|be)?$/);\n    if (matches) {\n      let tmp;\n      let encoding_name;\n      let className;\n\n      let utf_type = matches[1];\n      let utf_base = parseInt(matches[3], 10);\n      let endiannes = '';\n      \n      switch (utf_type) {\n        case 'utf':\n          if ([8, 16, 32].indexOf(utf_base) < 0) {\n          // if (!php.array.in_array(utf_base, [8, 16, 32])) {\n            throw new Error('Invalid utf base');\n          }\n          \n          break;\n        case 'ucs':\n          if ([2, 4].indexOf(utf_base) < 0) {\n          // if (!php.array.in_array(utf_base, [2, 4])) {\n            throw new Error('Invalid ucs base');\n          }\n          \n          break;\n        default:\n          throw new Error('Internal error');\n      }\n      \n      if (utf_base > 8 || 'ucs' === utf_type) {\n        if (php.var.isset(matches[5])) {\n          endiannes = matches[5] == 'be' ? 'be' : 'le';\n        } else {\n          tmp = php.misc.pack('L', 1);\n          endiannes = php.strings.ord(tmp) == 0 ? 'be' : 'le';\n        }\n      }\n      \n      \n      if (utf_type == 'ucs' || utf_base > 8) {\n        encoding_name = utf_type + '-' + utf_base + endiannes;\n      } else {\n        encoding_name = utf_type + '-' + utf_base;\n      }\n      \n      className = `Morphy_UnicodeHelper_${ php.strings.str_replace('-', '_', encoding_name) }`;\n      \n      return new Morphy_UnicodeHelper.unicodeHelpers[className](encoding_name);\n    } else {\n      return new Morphy_UnicodeHelper_singlebyte(encoding);\n    }\n  }\n\n  firstCharSize (str) {}\n\n  strrev (str) {}\n\n  strlen (str) {}\n\n  fixTrailing (str) {}\n\n}\n\nclass Morphy_UnicodeHelper_Base extends Morphy_UnicodeHelper {\n\n  constructor (encoding) {\n    super(...arguments);\n    this.encoding = encoding;\n  }\n\n  strlen (str) {\n    return buffer2str(str).length;\n  }\n\n  php_strlen (str) {\n    return buffer2str(str).length;\n  }\n\n}\n\nclass Morphy_UnicodeHelper_MultiByteFixed extends Morphy_UnicodeHelper_Base {\n\n  constructor (encoding, size) {\n    super(...arguments);\n    this.size = size;\n  }\n\n  firstCharSize (str) {\n    return this.size;\n  }\n\n  strrev (str) {\n    return php.strings.implode('', php.array.array_reverse(php.strings.str_split(str, this.size)));\n  }\n\n  php_strlen (str) {\n    return php.strings.strlen(str) / this.size;\n  }\n\n  fixTrailing (str) {\n    const len = php.strings.strlen(str);\n\n    if ((len % this.size) > 0) {\n      return php.strings.substr(str, 0, Math.floor(len / this.size) * this.size);\n    }\n\n    return str;\n  }\n\n}\n\n// single byte encoding\nclass Morphy_UnicodeHelper_singlebyte extends Morphy_UnicodeHelper_Base {\n\n  constructor (encoding, size) {\n    super(...arguments);\n    this.size = size;\n  }\n\n  firstCharSize (str) {\n    return 1;\n  }\n\n  strrev (str) {\n    return toBuffer(buffer2str(str).split('').reverse().join(''));\n  }\n\n  strlen (str) {\n    return buffer2str(str).length;\n  }\n\n  fixTrailing (str) {\n    return str;\n  }\n\n  php_strlen (str) {\n    return buffer2str(str).length;\n  }\n\n}\n\n// utf8\nclass Morphy_UnicodeHelper_utf_8 extends Morphy_UnicodeHelper_Base {\n\n  constructor (encoding) {\n    super(...arguments);\n\n    this.tails_length = this.getTailsLength();\n  }\n\n  firstCharSize (str) {\n    return 1 + this.tails_length[php.strings.ord(str)];\n  }\n\n  strrev (str) {\n    return toBuffer(buffer2str(str).split('').reverse().join(''));\n  }\n\n  fixTrailing (str) {\n    str = toBuffer(str);\n\n    const strlen = str.length;\n\n    if (!strlen) {\n      return '';\n    }\n  \n    let ord = str[strlen - 1];\n    let diff;\n    let seq_len;\n    let miss;\n\n    if ((ord & 0x80) == 0) {\n      return str;\n    }\n\n    for (let i = strlen - 1; i >= 0; i--) {\n      ord = str[i];\n\n      if ((ord & 0xC0) == 0xC0) {\n        diff    = strlen - i;\n        seq_len = this.tails_length[ord] + 1;\n\n        miss = seq_len - diff;\n\n        if (miss) {\n          return str.slice(0, -(seq_len - miss));\n        } else {\n          return str;\n        }\n      }\n    }\n\n    return '';\n  }\n\n  php_strlen (str) {\n    return buffer2str(str).length;\n  }\n\n  getTailsLength () {\n    return [\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,\n      1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,\n      1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,\n      2,2,2,2,2,2,2,2, 2,2,2,2,2,2,2,2,\n      3,3,3,3,3,3,3,3, 4,4,4,4,5,5,0,0\n    ];\n  }\n\n}\n\n// utf16\nclass Morphy_UnicodeHelper_utf_16_Base extends Morphy_UnicodeHelper_Base {\n  \n  constructor (encoding, isBigEndian) {\n    super(...arguments);\n\n    this.is_be = !!isBigEndian;\n    this.char_fmt = isBigEndian ? 'n' : 'v';\n  }\n\n  firstCharSize (str) {\n    const ord = php.unpack(this.char_fmt, str)[1];\n\n    return ord >= 0xD800 && ord <= 0xDFFF ? 4 : 2;\n  }\n\n  strrev (str) {\n    const count = php.strings.strlen(str);\n    const fmt = this.char_fmt + count;\n    const words = php.array.array_reverse(php.unpack(fmt, str));\n\n    let ord;\n    let t;\n\n    for (let i = 0; i < count; i++) {\n      ord = words[i];\n\n      if (ord >= 0xD800 && ord <= 0xDFFF) {\n        // swap surrogates\n        t = words[i];\n        words[i] = words[i + 1];\n\n        i++;\n        words[i] = t;\n      }\n    }\n\n    php.array.array_unshift(words, fmt);\n\n    return php.misc.pack(...words);\n  }\n\n  fixTrailing (str) {\n    let strlen = php.strings.strlen(str);\n\n    if (strlen & 1) {\n      strlen--;\n      str = php.strings.substr(str, 0, strlen);\n    }\n\n    if (strlen < 2) {\n      return '';\n    }\n\n    let ord = php.unpack(this.char_fmt, php.strings.substr(str, -2, 2))[1];\n\n    if (this.isSurrogate(ord)) {\n      if (strlen < 4) {\n        return '';\n      }\n\n      ord = php.unpack(this.char_fmt, php.strings.substr(str, -4, 2))[1];\n\n      if (this.isSurrogate(ord)) {\n        // full surrogate pair\n        return str;\n      } else {\n        return php.strings.substr(str, 0, -2);\n      }\n    }\n\n    return str;\n  }\n\n  php_strlen (str) {\n    let count = php.strings.strlen(str) / 2;\n    const fmt = this.char_fmt + count;\n\n    _.forEach(php.unpack(fmt, str), ord => {\n      if (ord >= 0xD800 && ord <= 0xDFFF) {\n        count--;\n      }\n    });\n\n    return count;\n  }\n\n  isSurrogate (ord) {\n    return ord >= 0xD800 && ord <= 0xDFFF;\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_16le extends Morphy_UnicodeHelper_utf_16_Base {\n\n  constructor (encoding) {\n    super(encoding, false);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_16be extends Morphy_UnicodeHelper_utf_16_Base {\n\n  constructor (encoding) {\n    super(encoding, true);\n  }\n\n}\n\n// utf32\nclass Morphy_UnicodeHelper_utf_32_Base extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 4);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_32le extends Morphy_UnicodeHelper_utf_32_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_utf_32be extends Morphy_UnicodeHelper_utf_32_Base {\n\n  constructor () {\n    super(...arguments);\n  }\n\n}\n\n// ucs2, ucs4\nclass Morphy_UnicodeHelper_ucs_2le extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 2);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_ucs_2be extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 2);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_ucs_4le extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 4);\n  }\n\n}\n\nclass Morphy_UnicodeHelper_ucs_4be extends Morphy_UnicodeHelper_MultiByteFixed {\n\n  constructor (encoding) {\n    super(encoding, 4);\n  }\n  \n}\n\nObject.assign(Morphy_UnicodeHelper_unicodeHelpers, {\n  Morphy_UnicodeHelper_MultiByteFixed,\n  Morphy_UnicodeHelper_singlebyte,\n  Morphy_UnicodeHelper_utf_8,\n  Morphy_UnicodeHelper_utf_16_Base,\n  Morphy_UnicodeHelper_utf_16le,\n  Morphy_UnicodeHelper_utf_16be,\n  Morphy_UnicodeHelper_utf_32_Base,\n  Morphy_UnicodeHelper_utf_32le,\n  Morphy_UnicodeHelper_utf_32be,\n  Morphy_UnicodeHelper_ucs_2le,\n  Morphy_UnicodeHelper_ucs_2be,\n  Morphy_UnicodeHelper_ucs_4le,\n  Morphy_UnicodeHelper_ucs_4be\n});\n\nexport {\n  Morphy_UnicodeHelper,\n  Morphy_UnicodeHelper_Base,\n  Morphy_UnicodeHelper_MultiByteFixed,\n  Morphy_UnicodeHelper_singlebyte,\n  Morphy_UnicodeHelper_utf_8,\n  Morphy_UnicodeHelper_utf_16_Base,\n  Morphy_UnicodeHelper_utf_16le,\n  Morphy_UnicodeHelper_utf_16be,\n  Morphy_UnicodeHelper_utf_32_Base,\n  Morphy_UnicodeHelper_utf_32le,\n  Morphy_UnicodeHelper_utf_32be,\n  Morphy_UnicodeHelper_ucs_2le,\n  Morphy_UnicodeHelper_ucs_2be,\n  Morphy_UnicodeHelper_ucs_4le,\n  Morphy_UnicodeHelper_ucs_4be\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/unicode.js","var map = {\n\t\"./fsa_sparse_file\": 8,\n\t\"./fsa_sparse_file.js\": 8,\n\t\"./fsa_sparse_mem\": 9,\n\t\"./fsa_sparse_mem.js\": 9,\n\t\"./fsa_tree_file\": 10,\n\t\"./fsa_tree_file.js\": 10,\n\t\"./fsa_tree_mem\": 11,\n\t\"./fsa_tree_mem.js\": 11\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/fsa/access ^\\.\\/fsa_.*$\n// module id = 25\n// module chunks = 0 1","var map = {\n\t\"./graminfo_file\": 12,\n\t\"./graminfo_file.js\": 12,\n\t\"./graminfo_mem\": 13,\n\t\"./graminfo_mem.js\": 13\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/graminfo/access ^\\.\\/graminfo_.*$\n// module id = 26\n// module chunks = 0 1","var map = {\n\t\"./common\": 4,\n\t\"./common.js\": 4,\n\t\"./ru_ru\": 14,\n\t\"./ru_ru.js\": 14\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 27;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/langs_stuff ^\\.\\/.*$\n// module id = 27\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.array.from\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.array.from\"\n// module id = 28\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.function.name\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.function.name\"\n// module id = 29\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.map\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.map\"\n// module id = 30\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.promise\"\n// module id = 31\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.set\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.set\"\n// module id = 32\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.symbol\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.symbol\"\n// module id = 33\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.array-buffer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.array-buffer\"\n// module id = 34\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.float32-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.float32-array\"\n// module id = 35\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.float64-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.float64-array\"\n// module id = 36\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.int16-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.int16-array\"\n// module id = 37\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.int32-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.int32-array\"\n// module id = 38\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.int8-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.int8-array\"\n// module id = 39\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.uint16-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.uint16-array\"\n// module id = 40\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.uint32-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.uint32-array\"\n// module id = 41\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.uint8-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.uint8-array\"\n// module id = 42\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.typed.uint8-clamped-array\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.typed.uint8-clamped-array\"\n// module id = 43\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.weak-map\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.weak-map\"\n// module id = 44\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es6.weak-set\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es6.weak-set\"\n// module id = 45\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.object.entries\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.object.entries\"\n// module id = 46\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.object.get-own-property-descriptors\"\n// module id = 47\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.object.values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.object.values\"\n// module id = 48\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.string.pad-end\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.string.pad-end\"\n// module id = 49\n// module chunks = 0 1","module.exports = require(\"core-js/modules/es7.string.pad-start\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-js/modules/es7.string.pad-start\"\n// module id = 50\n// module chunks = 0 1","module.exports = require(\"locutus/php\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"locutus/php\"\n// module id = 51\n// module chunks = 0 1","module.exports = require(\"phpunserialize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"phpunserialize\"\n// module id = 52\n// module chunks = 0 1","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 53\n// module chunks = 0 1","import './tests';\n\n//\n// /**\n//  todo\n//  - проверить необходимость заменить `_.values(...)` на `_.valuesIn(...)`\n//  - проверить необходимость заменить `__.php.array.array_keys(...)` на `_.keys(...)` или `_.keysIn(...)`\n//  - избавиться от интерфейсов и прописать их в jsdoc с помощью @typedef и @implements\n//  */\n\n\n\n// WEBPACK FOOTER //\n// ./src/test.js","import _ from 'lodash';\nimport path from 'path';\nimport encoding from 'encoding';\nimport { exec } from 'child_process';\nimport { inspect, logger, isStringifyedNumber } from '../utils';\nimport Morphy from '../';\n\nimport {\n  Morphy_Morphier_Interface,\n  Morphy_WordForm,\n  Morphy_WordDescriptor,\n  Morphy_WordDescriptor_Collection\n} from '../lib/morphiers';\n\n// let html = ``;\n// let text = html\n//   .replace(/<\\/?[^>]+(>|$)/gm, \"\")\n//   .replace(/[^a-zа-яё]+/igm, ' ')\n//   .replace(/\\s+/gm, ' ')\n//   .trim()\n//   .toLowerCase()\n// ;\n// let words = _(text.split(' '))\n//   .filter(w => w.length > 1)\n//   .uniq()\n//   .sort()\n//   .value()\n// ;\n\nconst log = function (...args) {\n  logger.log(...args.map(item => inspect(item)));\n};\n\nfunction cliEncode (any) {\n  return Buffer.from(JSON.stringify(any)).toString('base64');\n}\nconst phpTestsFile = path.join(path.relative(process.cwd(), __dirname), 'tests/index.php');\nfunction runPhpFileWithArgs (args, cb) {\n  cb = _.isFunction(cb) ? cb : _.noop;\n  \n  const cliArgs = Object.keys(args).map(key => {\n    return `--${ key } ${ cliEncode(args[key]) }`;\n  }).join(' ');\n  \n  return new Promise((resolve, reject) => {\n    exec(`php ${ phpTestsFile } ${ cliArgs }`, {\n      maxBuffer: 1024 * 1000 // 1MB\n    }, (err, stdout, stderr) => {\n      if (err) {\n        cb(err);\n        return reject(err);\n      }\n      if (stderr) {\n        cb(stderr);\n        return reject(stderr);\n      }\n      \n      cb(null, stdout);\n      return resolve(stdout);\n    });\n  });\n}\n\n\nasync function runPhpTests (words, opts) {\n  let res;\n  \n  try { res = await runPhpFileWithArgs({words, opts}); }\n  catch (e) { throw e; }\n  \n  try { res = JSON.parse(res); }\n  catch (e) {\n    !!res && (e.message = `${ e.message }\n[php]: ${inspect(res)}`);\n    throw e;\n  }\n  \n  if (!res.success) {\n    throw new Error(`[php]: \"${ res.message }\". ${res.words ? inspect(res.words) : ''}`);\n  }\n  \n  return res.words;\n}\n\n/** Declare local tests */\nasync function runLocalTests (words, morphy) {\n  const tests = {};\n  words = _.isArray(words) ? words : [words];\n  // для совместимости с результатами из php\n  words = words.map(word => word.toUpperCase());\n  \n  tests['initialize'] = () => {\n    return [\n      morphy.getEncoding(),\n      morphy.getLocale()\n    ];\n  };\n\n  tests['getters'] = () => {\n    return [\n      morphy.getCommonMorphier() instanceof Morphy_Morphier_Interface,\n      morphy.getPredictBySuffixMorphier() instanceof Morphy_Morphier_Interface,\n      morphy.getPredictByDatabaseMorphier() instanceof Morphy_Morphier_Interface,\n      morphy.getBulkMorphier() instanceof Morphy_Morphier_Interface\n    ];\n  };\n\n  tests['isLastPredicted'] = () => {\n    const res = [];\n\n    res.push(\n      morphy.lemmatize('глокая', Morphy.NORMAL),\n      morphy.isLastPredicted()\n    );\n\n    res.push(\n      morphy.lemmatize('глокая', Morphy.IGNORE_PREDICT),\n      morphy.isLastPredicted()\n    );\n\n    res.push(\n      morphy.lemmatize('тест', Morphy.ONLY_PREDICT),\n      morphy.isLastPredicted()\n    );\n\n    return res;\n  };\n\n  tests['getLastPredictionType'] = () => {\n    const res = [];\n\n    res.push(\n      morphy.lemmatize('тест', Morphy.NORMAL),\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_NONE\n    );\n\n    res.push(\n      morphy.lemmatize('глокая', Morphy.IGNORE_PREDICT),\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_NONE\n    );\n\n    res.push(\n      morphy.lemmatize('тестдрайв', Morphy.ONLY_PREDICT),\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_SUFFIX\n    );\n\n    res.push(\n      morphy.lemmatize('подфигачить', Morphy.ONLY_PREDICT),\n      morphy.getLastPredictionType() == Morphy.PREDICT_BY_DB\n    );\n\n    return res;\n  };\n\n  tests['lemmatize && getBaseForm'] = () => {\n    let res = { lemmatize: {}, getBaseForm: {} };\n\n    words.forEach(word => res.lemmatize[word] = morphy.lemmatize(word));\n    words.forEach(word => res.getBaseForm[word] = morphy.getBaseForm(word));\n\n    return res;\n  };\n\n  tests['lemmatize bulk && getBaseForm bulk'] = () => {\n    let res = {};\n\n    res.lemmatize = morphy.lemmatize(words);\n    res.getBaseForm = morphy.getBaseForm(words);\n\n    return res;\n  };\n\n  /**\n   * @param {Morphy_WordDescriptor_Collection} paradigms\n   * @param {Array} res\n   */\n  function testFoundWordParadigms (paradigms, res) {\n    if (!paradigms) { return; }\n\n    res.push(\n      paradigms instanceof Morphy_WordDescriptor_Collection,\n      paradigms.length\n    );\n\n    paradigms.forEach(paradigm => {\n      res.push(\n        paradigm instanceof Morphy_WordDescriptor,\n        paradigm.length,\n\n        paradigm.getBaseForm(),\n        paradigm.getPseudoRoot(),\n\n        paradigm.getAllForms(),\n        paradigm.getFoundWordForm().length,\n\n        paradigm.hasGrammems('НО'),\n        paradigm.hasGrammems('ИМ'),\n        paradigm.getWordFormsByGrammems('НО').length,\n        paradigm.getWordFormsByGrammems('ИМ').length,\n\n        paradigm.hasPartOfSpeech('С'),\n        paradigm.hasPartOfSpeech('ДЕЕПРИЧАСТИЕ'),\n        paradigm.getWordFormsByPartOfSpeech('С').length,\n        paradigm.getWordFormsByPartOfSpeech('ДЕЕПРИЧАСТИЕ').length\n      );\n    });\n\n    res.push(\n      paradigms.getByPartOfSpeech('С').length\n    );\n    \n    // для русских слов\n    paradigms.getByPartOfSpeech('С').forEach(paradigm => {\n      res.push(\n        paradigm instanceof Morphy_WordDescriptor,\n        paradigm.length,\n        paradigm.length\n          ? paradigm.getWordForm(0) instanceof Morphy_WordDescriptor\n          : null\n      );\n\n      const formsOfSourceWord = paradigm.getFoundWordForm();\n      res.push(formsOfSourceWord.length);\n\n      formsOfSourceWord.forEach(form => res.push(\n        form instanceof Morphy_WordForm,\n        form.getWord(),\n        form.getFormNo(),\n        form.getGrammems(),\n        form.hasGrammems(['ЕД', 'РД']),\n        form.getPartOfSpeech()\n      ));\n\n      const sampleFormsByGrammem = paradigm.getWordFormsByGrammems('ИМ');\n      res.push(sampleFormsByGrammem.length);\n\n      sampleFormsByGrammem.forEach(form => res.push(\n        form instanceof Morphy_WordForm,\n        form.getWord(),\n        form.getFormNo(),\n        form.getGrammems(),\n        form.hasGrammems(['ЕД', 'РД']),\n        form.getPartOfSpeech()\n      ));\n\n      const sampleFormsByPartOfSpeech = paradigm.getWordFormsByPartOfSpeech('С');\n      res.push(sampleFormsByPartOfSpeech.length);\n\n      sampleFormsByPartOfSpeech.forEach(form => res.push(\n        form instanceof Morphy_WordForm,\n        form.getWord(),\n        form.getFormNo(),\n        form.getGrammems(),\n        form.hasGrammems(['ЕД', 'РД']),\n        form.getPartOfSpeech()\n      ));\n    });\n  \n    // для английских слов\n    paradigms.getByPartOfSpeech('VERB').forEach(paradigm => {\n      res.push(\n        paradigm instanceof Morphy_WordDescriptor,\n        paradigm.length,\n        paradigm.length\n          ? paradigm.getWordForm(0) instanceof Morphy_WordDescriptor\n          : null\n      );\n\n      const formsOfSourceWord = paradigm.getFoundWordForm();\n      res.push(formsOfSourceWord.length);\n\n      formsOfSourceWord.forEach(form => res.push(\n        form instanceof Morphy_WordForm,\n        form.getWord(),\n        form.getFormNo(),\n        form.getGrammems(),\n        form.hasGrammems(['ЕД', 'РД']),\n        form.getPartOfSpeech()\n      ));\n\n      const sampleFormsByGrammem = paradigm.getWordFormsByGrammems('ИМ');\n      res.push(sampleFormsByGrammem.length);\n\n      sampleFormsByGrammem.forEach(form => res.push(\n        form instanceof Morphy_WordForm,\n        form.getWord(),\n        form.getFormNo(),\n        form.getGrammems(),\n        form.hasGrammems(['ЕД', 'РД']),\n        form.getPartOfSpeech()\n      ));\n\n      const sampleFormsByPartOfSpeech = paradigm.getWordFormsByPartOfSpeech('С');\n      res.push(sampleFormsByPartOfSpeech.length);\n\n      sampleFormsByPartOfSpeech.forEach(form => res.push(\n        form instanceof Morphy_WordForm,\n        form.getWord(),\n        form.getFormNo(),\n        form.getGrammems(),\n        form.hasGrammems(['ЕД', 'РД']),\n        form.getPartOfSpeech()\n      ));\n    });\n  }\n\n  tests['findWord'] = () => {\n    const res = [];\n\n    words.forEach(word => {\n      const paradigms = morphy.findWord(word);\n      testFoundWordParadigms(paradigms, res);\n    });\n\n    return res;\n  };\n\n  tests['findWord bulk'] = () => {\n    const res = [];\n\n    _.forEach(morphy.findWord(words), (paradigms, word) => {\n      testFoundWordParadigms(paradigms, res);\n    });\n\n    return res;\n  };\n\n  tests['getAllForms'] = () => {\n    return words.map(word => morphy.getAllForms(word));\n  };\n\n  tests['getAllForms bulk'] = () => {\n    return morphy.getAllForms(words);\n  };\n\n  tests['getPseudoRoot'] = () => {\n    return words.map(word => morphy.getPseudoRoot(word));\n  };\n\n  tests['getPseudoRoot bulk'] = () => {\n    return morphy.getPseudoRoot(words);\n  };\n\n  tests['getPartOfSpeech'] = () => {\n    return words.map(word => morphy.getPartOfSpeech(word));\n  };\n\n  tests['getPartOfSpeech bulk'] = () => {\n    return morphy.getPartOfSpeech(words);\n  };\n\n  tests['getAllFormsWithGramInfo'] = () => {\n    return {\n      asText: words.map(word => morphy.getAllFormsWithGramInfo(word, true)),\n      '!asText': words.map(word => morphy.getAllFormsWithGramInfo(word, false))\n    };\n  };\n\n  tests['getAllFormsWithGramInfo bulk'] = () => {\n    return {\n      asText: morphy.getAllFormsWithGramInfo(words, true),\n      '!asText': morphy.getAllFormsWithGramInfo(words, false)\n    };\n  };\n\n  tests['getAllFormsWithAncodes'] = () => {\n    return words.map(word => morphy.getAllFormsWithAncodes(word));\n  };\n\n  tests['getAllFormsWithAncodes bulk'] = () => {\n    return morphy.getAllFormsWithAncodes(words);\n  };\n\n  tests['getAncode'] = () => {\n    return words.map(word => morphy.getAncode(word));\n  };\n\n  tests['getAncode bulk'] = () => {\n    return morphy.getAncode(words);\n  };\n\n  tests['getGramInfo'] = () => {\n    return words.map(word => morphy.getGramInfo(word));\n  };\n\n  tests['getGramInfo bulk'] = () => {\n    return morphy.getGramInfo(words);\n  };\n\n  tests['getGramInfoMergeForms'] = () => {\n    return words.map(word => morphy.getGramInfoMergeForms(word));\n  };\n\n  tests['getGramInfoMergeForms bulk'] = () => {\n    return morphy.getGramInfoMergeForms(words);\n  };\n\n  tests['castFormByGramInfo'] = () => {\n    const res = [];\n\n    words.forEach(word => {\n      res.push(\n        morphy.castFormByGramInfo(word, null, ['МН', 'ПР'], false),\n        morphy.castFormByGramInfo(word, null, ['МН', 'ПР'], true),\n        morphy.castFormByGramInfo('ШКАФ', null, null, true, (form, partOfSpeech, grammems, formNo) => {\n          return _.includes(grammems, 'ИМ');\n        }),\n        morphy.castFormByGramInfo(word, 'КР_ПРИЛ', ['ЕД', 'ЖР'], true)\n      );\n    });\n\n    return res;\n  };\n\n  tests['castFormByPattern'] = () => {\n    const res = [];\n\n    const provider = morphy.getGrammemsProvider();\n    provider.excludeGroups('С', 'род');\n\n    res.push(\n      morphy.castFormByPattern('ДИВАН', 'СТОЛАМИ', null, true),\n      morphy.castFormByPattern('ДИВАН', 'КРОВАТЯМИ', null, true),\n      morphy.castFormByPattern('ДИВАН', 'КРОВАТЯМИ', provider, true),\n      morphy.castFormByPattern('КРЕСЛО', 'СТУЛЬЯМИ', provider, true)\n    );\n\n    words.forEach(word => {\n      res.push(\n        morphy.castFormByPattern(word, 'СТОЛАМИ', null, true),\n        morphy.castFormByPattern(word, 'СТОЛАМИ', provider, true),\n        morphy.castFormByPattern('СТОЛАМИ', word, null, true),\n        morphy.castFormByPattern('СТОЛАМИ', word, provider, true),\n\n        morphy.castFormByPattern(word, 'ДИВАН', null, true),\n        morphy.castFormByPattern(word, 'ДИВАН', provider, true),\n        morphy.castFormByPattern('ДИВАН', word, null, true),\n        morphy.castFormByPattern('ДИВАН', word, provider, true),\n\n        morphy.castFormByPattern(word, 'КРОВАТЯМИ', null, true),\n        morphy.castFormByPattern(word, 'КРОВАТЯМИ', provider, true),\n        morphy.castFormByPattern('КРОВАТЯМИ', word, null, true),\n        morphy.castFormByPattern('КРОВАТЯМИ', word, provider, true),\n      )\n    });\n\n    morphy.getDefaultGrammemsProvider().excludeGroups('С', 'род');\n    res.push(\n      morphy.castFormByPattern('ДИВАН', 'КРОВАТЯМИ', null, true)\n    );\n\n    return res;\n  };\n\n  // /** @todo: castFormByAncode */\n  // tests['castFormByAncode'] = () => {\n  //   const res = [];\n  //\n  //   return res;\n  // };\n  \n  \n  \n  /** Run tests */\n  const results = {};\n  _.forEach(tests, (fn, name) => {\n    results[name] = fn();\n  });\n  \n  return results;\n}\n\nconst opts = [{\n  name: 'default opts',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: true,\n    predict_by_db: true,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && storage == Morphy.STORAGE_FILE',\n  opts: {\n    storage: Morphy.STORAGE_FILE,\n    predict_by_suffix: true,\n    predict_by_db: true,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && off predict_by_suffix',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: false,\n    predict_by_db: true,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && off predict_by_db',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: true,\n    predict_by_db: false,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && off predict_by_suffix && off predict_by_db',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: false,\n    predict_by_db: false,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && off graminfo_as_text',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: true,\n    predict_by_db: true,\n    graminfo_as_text: false,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && on use_ancodes_cache',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: true,\n    predict_by_db: true,\n    graminfo_as_text: false,\n    use_ancodes_cache: true,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_TEXT\n  }\n}, {\n  name: 'default opts && resolve_ancodes == Morphy.RESOLVE_ANCODES_AS_INT',\n  opts: {\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: true,\n    predict_by_db: true,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_INT\n  }\n}, {\n  name: 'default opts && resolve_ancodes == Morphy.RESOLVE_ANCODES_AS_DIALING',\n  opts: {\n    lang: 'ru',\n    storage: Morphy.STORAGE_MEM,\n    predict_by_suffix: true,\n    predict_by_db: true,\n    graminfo_as_text: true,\n    use_ancodes_cache: false,\n    resolve_ancodes: Morphy.RESOLVE_ANCODES_AS_DIALING\n  }\n}];\n\nconst words = [];\nwords.push(...'ет глокая душа красный спать мурелки шлепают пельсиски стакелках светится мычай This has been a known bug with a known solution for at least since 2009 years but no one seems to be willing to fix it'.split(' '));\n\nlet [wordsEn, another] = _.partition(words, word => /^[a-z]+$/i.test(word));\nlet wordsRu = _.filter(another, word => /^[а-яё]+$/i.test(word));\n\nconst testData = [];\n\nopts.forEach(config => {\n  if (!!config.opts.lang) {\n    switch (config.opts.lang) {\n      case 'ru':\n        wordsRu.length && testData.push(_.merge(config, {\n          words: wordsRu,\n          opts: {lang: 'ru'}\n        }));\n        break;\n        \n      case 'en':\n        wordsEn.length && testData.push(_.merge(config, {\n          words: wordsEn,\n          opts: {lang: 'en'}\n        }));\n        \n        break;\n    }\n    \n    return;\n  }\n  wordsRu.length && testData.push(_.merge(config, {\n    words: wordsRu,\n    opts: {lang: 'ru'}\n  }));\n  wordsEn.length && testData.push(_.merge(config, {\n    words: wordsEn,\n    opts: {lang: 'en'}\n  }));\n});\n\n(async function () {\n  const results = {};\n  \n  console.time('tests time');\n  \n  await Promise.all(testData.map(async ({ name, words, opts }, idx) => {\n    name = name || idx;\n  \n    const morphy = new Morphy(opts);\n    try {\n      const [phpResults, localResults] = await Promise.all([\n        runPhpTests(words, morphy.options),\n        runLocalTests(words, morphy)\n      ]);\n  \n      results[name] = {\n        words,\n        opts,\n        tests: _.keys(localResults).reduce((tests, testName) => {\n          tests[testName] = {\n            // success: _.isEqual(phpResults[testName], localResults[testName]),\n            // php: phpResults[testName],\n            // local: localResults[testName]\n            success: _.isEqual(\n              consistentResults(phpResults[testName]),\n              consistentResults(localResults[testName])\n            ),\n            php: phpResults[testName],\n            local: localResults[testName],\n          };\n          \n          return tests;\n        }, {})\n      };\n    \n    } catch (err) {\n      throw err;\n      // logger.error(err);\n    }\n    \n    return true;\n  }));\n  \n  console.timeEnd('tests time');\n  \n  let hasErrors = false;\n  _.forEach(results, ({ words, opts, tests }, groupName) => {\n    _.forEach(tests, (test, testName) => {\n      if (test.success) { return true; }\n  \n      hasErrors = true;\n      \nlogger.error(`\n[${ groupName }] Test \"${ testName }\" failed!\nData: ${ inspect(words) }\nOpts: ${ inspect(opts) }\nPhp results: ${ inspect(test.php) }\nLocal results: ${ inspect(test.local) }\n`);\n    });\n  });\n  \n  !hasErrors && logger.log('All tests passed!');\n  \n})().catch(err => logger.error(err));\n\nfunction consistentResults (any) {\n  if (_.isPlainObject(any)) {\n    return Object.keys(any).sort().reduce((res, key) => {\n      res[key] = consistentResults(any[key]);\n\n      return res;\n    }, {});\n  } else\n  if (_.isArray(any)) {\n    return _.sortBy(\n      any.map(consistentResults),\n      (any.length && (_.isNumber(any[0]) || isStringifyedNumber(any[0]))) ? _.toInteger : JSON.stringify\n    );\n  }\n\n  return any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/index.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 56\n// module chunks = 0"],"sourceRoot":""}